"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[178],{6178:(e,t,r)=>{r.r(t),r.d(t,{BaseVolumeViewport:()=>v.A,CONSTANTS:()=>n,EVENTS:()=>g.A,Enums:()=>o,ImageVolume:()=>B.A,ProgressiveRetrieveImages:()=>oa.Ay,RenderingEngine:()=>p.Ay,Settings:()=>W,StackViewport:()=>x.A,StreamingDynamicImageVolume:()=>M,StreamingImageVolume:()=>V.A,Surface:()=>I,VideoViewport:()=>T.A,Viewport:()=>S.A,VolumeViewport:()=>b.A,VolumeViewport3D:()=>y.A,WSIViewport:()=>A.A,addImageSlicesToViewports:()=>ma,addVolumesToViewports:()=>pa,cache:()=>k.Ay,canRenderFloatTextures:()=>G.lk,convertMapperToNotSharedMapper:()=>f.h,cornerstoneStreamingDynamicImageVolumeLoader:()=>ga,cornerstoneStreamingImageVolumeLoader:()=>sa.F,createVolumeActor:()=>m.A,createVolumeMapper:()=>f.A,eventTarget:()=>C.A,geometryLoader:()=>a,getConfiguration:()=>G.D0,getEnabledElement:()=>N.Ay,getEnabledElementByIds:()=>N.b1,getEnabledElementByViewportId:()=>N.yj,getEnabledElements:()=>N.zb,getOrCreateCanvas:()=>h.Ay,getRenderingEngine:()=>P.lD,getRenderingEngines:()=>P.qO,getShouldUseCPURendering:()=>G.LH,getWebWorkerManager:()=>G.G_,imageLoadPoolManager:()=>R.A,imageLoader:()=>Y,imageRetrievalPoolManager:()=>L.A,init:()=>G.Ts,isCornerstoneInitialized:()=>G.Dh,metaData:()=>U,peerImport:()=>G.a,registerImageLoader:()=>Y.registerImageLoader,requestPoolManager:()=>R.A,resetInitialization:()=>G.IB,resetUseCPURendering:()=>G.Xn,setConfiguration:()=>G.xN,setPreferSizeOverAccuracy:()=>G.zw,setUseCPURendering:()=>G.qc,setVolumesForViewports:()=>fa.A,triggerEvent:()=>O.A,utilities:()=>ia,volumeLoader:()=>q});var n={};r.r(n),r.d(n,{BACKGROUND_COLORS:()=>d,CPU_COLORMAPS:()=>i.A,EPSILON:()=>l.A,MPR_CAMERA_VALUES:()=>c.A,RENDERING_DEFAULTS:()=>s.A,VIEWPORT_PRESETS:()=>u.A});var a={};r.r(a),r.d(a,{createAndCacheGeometry:()=>ra,loadAndCacheGeometry:()=>ta,loadGeometry:()=>ea,registerGeometryLoader:()=>na,registerUnknownGeometryLoader:()=>aa});var o=r(3286),i=r(1075),s=r(8409),l=r(4607),c=r(9338),u=r(8627);const d={slicer3D:[160/255,164/255,217/255]};var g=r(9845),p=r(8952),m=r(1354),f=r(8650),h=r(6609),b=r(3489),y=r(1095),v=r(8160),x=r(6988),T=r(8751),A=r(1344),S=r(8502),C=r(5186),P=r(4146);class I{constructor(e){this._color=[200,0,0],this.id=e.id,this._points=e.points,this._polys=e.polys,this._color=e.color??this._color,this.frameOfReferenceUID=e.frameOfReferenceUID,this._segmentIndex=e.segmentIndex,this.sizeInBytes=this._getSizeInBytes(),this._updateCentroid()}_getSizeInBytes(){return 4*this._points.length+4*this._polys.length}_updateCentroid(){const e=this._points.length/3;let t=0,r=0,n=0;for(let e=0;e<this._points.length;e+=3)t+=this._points[e],r+=this._points[e+1],n+=this._points[e+2];this._centroid=[t/e,r/e,n/e]}get color(){return this._color}set color(e){this._color=e}get points(){return this._points}set points(e){this._points=e,this._updateCentroid()}get polys(){return this._polys}set polys(e){this._polys=e}get segmentIndex(){return this._segmentIndex}get centroid(){return this._centroid}get flatPointsArray(){return this._points}get totalNumberOfPoints(){return this._points.length/3}}var w=r(3700),O=r(5630),D=r(7979);class M extends D.A{constructor(e,t){super(e,t),this._dimensionGroupNumber=1,this._loadedDimensionGroups=new Set,this._getImageIdRequests=(e,t)=>this.getImageIdsRequests(e,t),this.getImageLoadRequests=e=>{const t=this.getImageIdsToLoad();return this._getImageIdRequests(t,e)};const{imageIdGroups:r,splittingTag:n}=e;this._splittingTag=n,this._imageIdGroups=r,this.numDimensionGroups=this._imageIdGroups.length,this.numTimePoints=this.numDimensionGroups}_getImageIdsToLoad(){const e=this._imageIdGroups,t=this._dimensionGroupNumber-1,r=[...e[t]];let n=t-1,a=t+1;for(;n>=0||a<e.length;)n>=0&&r.push(...e[n--]),a<e.length&&r.push(...e[a++]);return r}getImageIdsToLoad(){return this._getImageIdsToLoad()}get dimensionGroupNumber(){return this._dimensionGroupNumber}set timePointIndex(e){console.warn("Warning: timePointIndex is deprecated. Please use dimensionGroupNumber instead. Note that timePointIndex is zero-based while dimensionGroupNumber starts at 1."),this.dimensionGroupNumber=e+1}set dimensionGroupNumber(e){this._dimensionGroupNumber!==e&&(this._dimensionGroupNumber=e,this.voxelManager.setDimensionGroupNumber(e),this.invalidateVolume(!0),(0,O.A)(C.A,g.A.DYNAMIC_VOLUME_DIMENSION_GROUP_CHANGED,{volumeId:this.volumeId,dimensionGroupNumber:e,numDimensionGroups:this.numDimensionGroups,imageIdGroupIndex:e-1,numImageIdGroups:this.numDimensionGroups,splittingTag:this.splittingTag}),(0,O.A)(C.A,g.A.DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED,{volumeId:this.volumeId,timePointIndex:e-1,numTimePoints:this.numDimensionGroups,imageIdGroupIndex:e-1,numImageIdGroups:this.numDimensionGroups,splittingTag:this.splittingTag}))}get timePointIndex(){return console.warn("Warning: timePointIndex is deprecated. Please use dimensionGroupNumber instead. Note that timePointIndex is zero-based while dimensionGroupNumber starts at 1."),this._dimensionGroupNumber-1}scroll(e){const t=this._dimensionGroupNumber+e;t<1?this.dimensionGroupNumber=this.numDimensionGroups:t>this.numDimensionGroups?this.dimensionGroupNumber=1:this.dimensionGroupNumber=t}getCurrentDimensionGroupImageIds(){return this._imageIdGroups[this._dimensionGroupNumber-1]}getCurrentTimePointImageIds(){return console.warn("Warning: getCurrentTimePointImageIds is deprecated. Please use getCurrentDimensionGroupImageIds instead."),this.getCurrentDimensionGroupImageIds()}flatImageIdIndexToTimePointIndex(e){return console.warn("Warning: flatImageIdIndexToTimePointIndex is deprecated. Please use flatImageIdIndexToDimensionGroupNumber instead."),this.flatImageIdIndexToDimensionGroupNumber(e)-1}flatImageIdIndexToDimensionGroupNumber(e){return Math.floor(e/this._imageIdGroups[0].length)+1}flatImageIdIndexToImageIdIndex(e){return e%this._imageIdGroups[0].length}get splittingTag(){return this._splittingTag}isTimePointLoaded(e){return console.warn("Warning: isTimePointLoaded is deprecated. Please use isDimensionGroupLoaded instead. Note that timePointIndex is zero-based while dimensionGroupNumber starts at 1."),this.isDimensionGroupLoaded(e+1)}isDimensionGroupLoaded(e){return this._loadedDimensionGroups.has(e)}markDimensionGroupAsLoaded(e){this._loadedDimensionGroups.add(e),(0,O.A)(C.A,g.A.DYNAMIC_VOLUME_DIMENSION_GROUP_LOADED,{volumeId:this.volumeId,dimensionGroupNumber:e}),(0,O.A)(C.A,g.A.DYNAMIC_VOLUME_TIME_POINT_LOADED,{volumeId:this.volumeId,timePointIndex:e-1})}checkTimePointCompletion(e){console.warn("Warning: checkTimePointCompletion is deprecated. Please use checkDimensionGroupCompletion instead."),this.checkDimensionGroupCompletion(e)}checkDimensionGroupCompletion(e){const t=this.flatImageIdIndexToDimensionGroupNumber(e),r=this._imageIdGroups[t-1].every((e=>{const t=this.getImageIdIndex(e);return this.cachedFrames[t]===w.A.FULL_RESOLUTION}));r&&!this.isDimensionGroupLoaded(t)&&this.markDimensionGroupAsLoaded(t)}}var B=r(9064),V=r(6546),k=r(9616),L=r(9535),R=r(497),N=r(8836),U=r(4374),G=r(2411);const E=Symbol("DefaultSettings"),_=Symbol("RuntimeSettings"),z=Symbol("ObjectSettingsMap"),F=Symbol("Dictionary");class W{constructor(e){const t=Object.create(e instanceof W&&F in e?e[F]:null);Object.seal(Object.defineProperty(this,F,{value:t}))}set(e,t){return $(this[F],e,t,null)}get(e){return function(e,t){return e[t]}(this[F],e)}unset(e){return function(e,t){if(t.endsWith(".")){let r=0;const n=t,a=n.slice(0,-1),o=0===a.length;for(const t in e)Object.prototype.hasOwnProperty.call(e,t)&&(o||t.startsWith(n)||t===a)&&(delete e[t],++r);return r>0}return delete e[t]}(this[F],e+"")}forEach(e){H(this[F],e)}extend(){return new W(this)}import(e){K(e)&&Object.keys(e).forEach((t=>{$(this[F],t,e[t],null)}))}dump(){const e={};return H(this[F],((t,r)=>{void 0!==r&&j(e,t,r)})),e}static assert(e){return e instanceof W?e:W.getRuntimeSettings()}static getDefaultSettings(e=null){let t=W[E];if(t instanceof W||(t=new W,W[E]=t),e){const r={};return t.forEach((n=>{if(n.startsWith(e)){const a=n.split(`${e}.`)[1];r[a]=t.get(n)}})),r}return t}static getRuntimeSettings(){let e=W[_];return e instanceof W||(e=new W(W.getDefaultSettings()),W[_]=e),e}static getObjectSettings(e,t){let r=null;if(e instanceof W)r=e;else if("object"==typeof e&&null!==e){let n=W[z];n instanceof WeakMap||(n=new WeakMap,W[z]=n),r=n.get(e),r instanceof W||(r=new W(W.assert(W.getObjectSettings(t))),n.set(e,r))}return r}static extendRuntimeSettings(){return W.getRuntimeSettings().extend()}}function H(e,t){for(const r in e)t(r,e[r])}function $(e,t,r,n){return!!function(e){let t,r,n;if("string"!=typeof e||(t=e.length-1)<0)return!1;n=-1;for(;(r=e.indexOf(".",n+1))>=0;){if(r-n<2||r===t)return!1;n=r}return!0}(t)&&(K(r)?function(e,t,r,n){let a;if(n.has(r))return $(e,t,null,n);n.add(r),a=0;for(const o in r)Object.prototype.hasOwnProperty.call(r,o)&&($(e,0===o.length?t:`${t}.${o}`,r[o],n)||++a);return n.delete(r),0===a}(e,t,r,n instanceof WeakSet?n:new WeakSet):(e[t]=r,!0))}function K(e){if("object"==typeof e&&null!==e){const t=Object.getPrototypeOf(e);if(t===Object.prototype||null===t)return!0}return!1}function j(e,t,r){const n=t.indexOf(".");if(n>=0){const a=t.slice(0,n);let o=e[a];if("object"!=typeof o||null===o){const t=o;o={},void 0!==t&&(o[""]=t),e[a]=o}j(o,t.slice(n+1,t.length),r)}else e[t]=r}W.getDefaultSettings().set("useCursors",!0);var q=r(1098),Y=r(8038),X=(r(7497),r(1857),r(6901),r(3851),r(1536)),Z=r(329),Q=r(7684);const J=Math.sqrt(50),ee=Math.sqrt(10),te=Math.sqrt(2);function re(e,t,r){const n=(t-e)/Math.max(0,r),a=Math.floor(Math.log10(n)),o=n/Math.pow(10,a),i=o>=J?10:o>=ee?5:o>=te?2:1;let s,l,c;return a<0?(c=Math.pow(10,-a)/i,s=Math.round(e*c),l=Math.round(t*c),s/c<e&&++s,l/c>t&&--l,c=-c):(c=Math.pow(10,a)*i,s=Math.round(e/c),l=Math.round(t/c),s*c<e&&++s,l*c>t&&--l),l<s&&.5<=r&&r<2?re(e,t,2*r):[s,l,c]}function ne(e,t,r){return re(e=+e,t=+t,r=+r)[2]}function ae(e,t){return null==e||null==t?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function oe(e,t){return null==e||null==t?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function ie(e){let t,r,n;function a(e,n,a=0,o=e.length){if(a<o){if(0!==t(n,n))return o;do{const t=a+o>>>1;r(e[t],n)<0?a=t+1:o=t}while(a<o)}return a}return 2!==e.length?(t=ae,r=(t,r)=>ae(e(t),r),n=(t,r)=>e(t)-r):(t=e===ae||e===oe?e:se,r=e,n=e),{left:a,center:function(e,t,r=0,o=e.length){const i=a(e,t,r,o-1);return i>r&&n(e[i-1],t)>-n(e[i],t)?i-1:i},right:function(e,n,a=0,o=e.length){if(a<o){if(0!==t(n,n))return o;do{const t=a+o>>>1;r(e[t],n)<=0?a=t+1:o=t}while(a<o)}return a}}}function se(){return 0}const le=ie(ae),ce=le.right,ue=(le.left,ie((function(e){return null===e?NaN:+e})).center,ce);function de(e,t,r){e.prototype=t.prototype=r,r.constructor=e}function ge(e,t){var r=Object.create(e.prototype);for(var n in t)r[n]=t[n];return r}function pe(){}var me=.7,fe=1/me,he="\\s*([+-]?\\d+)\\s*",be="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",ye="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",ve=/^#([0-9a-f]{3,8})$/,xe=new RegExp(`^rgb\\(${he},${he},${he}\\)$`),Te=new RegExp(`^rgb\\(${ye},${ye},${ye}\\)$`),Ae=new RegExp(`^rgba\\(${he},${he},${he},${be}\\)$`),Se=new RegExp(`^rgba\\(${ye},${ye},${ye},${be}\\)$`),Ce=new RegExp(`^hsl\\(${be},${ye},${ye}\\)$`),Pe=new RegExp(`^hsla\\(${be},${ye},${ye},${be}\\)$`),Ie={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function we(){return this.rgb().formatHex()}function Oe(){return this.rgb().formatRgb()}function De(e){var t,r;return e=(e+"").trim().toLowerCase(),(t=ve.exec(e))?(r=t[1].length,t=parseInt(t[1],16),6===r?Me(t):3===r?new ke(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===r?Be(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===r?Be(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=xe.exec(e))?new ke(t[1],t[2],t[3],1):(t=Te.exec(e))?new ke(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=Ae.exec(e))?Be(t[1],t[2],t[3],t[4]):(t=Se.exec(e))?Be(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=Ce.exec(e))?Ee(t[1],t[2]/100,t[3]/100,1):(t=Pe.exec(e))?Ee(t[1],t[2]/100,t[3]/100,t[4]):Ie.hasOwnProperty(e)?Me(Ie[e]):"transparent"===e?new ke(NaN,NaN,NaN,0):null}function Me(e){return new ke(e>>16&255,e>>8&255,255&e,1)}function Be(e,t,r,n){return n<=0&&(e=t=r=NaN),new ke(e,t,r,n)}function Ve(e,t,r,n){return 1===arguments.length?((a=e)instanceof pe||(a=De(a)),a?new ke((a=a.rgb()).r,a.g,a.b,a.opacity):new ke):new ke(e,t,r,null==n?1:n);var a}function ke(e,t,r,n){this.r=+e,this.g=+t,this.b=+r,this.opacity=+n}function Le(){return`#${Ge(this.r)}${Ge(this.g)}${Ge(this.b)}`}function Re(){const e=Ne(this.opacity);return`${1===e?"rgb(":"rgba("}${Ue(this.r)}, ${Ue(this.g)}, ${Ue(this.b)}${1===e?")":`, ${e})`}`}function Ne(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function Ue(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function Ge(e){return((e=Ue(e))<16?"0":"")+e.toString(16)}function Ee(e,t,r,n){return n<=0?e=t=r=NaN:r<=0||r>=1?e=t=NaN:t<=0&&(e=NaN),new ze(e,t,r,n)}function _e(e){if(e instanceof ze)return new ze(e.h,e.s,e.l,e.opacity);if(e instanceof pe||(e=De(e)),!e)return new ze;if(e instanceof ze)return e;var t=(e=e.rgb()).r/255,r=e.g/255,n=e.b/255,a=Math.min(t,r,n),o=Math.max(t,r,n),i=NaN,s=o-a,l=(o+a)/2;return s?(i=t===o?(r-n)/s+6*(r<n):r===o?(n-t)/s+2:(t-r)/s+4,s/=l<.5?o+a:2-o-a,i*=60):s=l>0&&l<1?0:i,new ze(i,s,l,e.opacity)}function ze(e,t,r,n){this.h=+e,this.s=+t,this.l=+r,this.opacity=+n}function Fe(e){return(e=(e||0)%360)<0?e+360:e}function We(e){return Math.max(0,Math.min(1,e||0))}function He(e,t,r){return 255*(e<60?t+(r-t)*e/60:e<180?r:e<240?t+(r-t)*(240-e)/60:t)}function $e(e,t,r,n,a){var o=e*e,i=o*e;return((1-3*e+3*o-i)*t+(4-6*o+3*i)*r+(1+3*e+3*o-3*i)*n+i*a)/6}de(pe,De,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:we,formatHex:we,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return _e(this).formatHsl()},formatRgb:Oe,toString:Oe}),de(ke,Ve,ge(pe,{brighter(e){return e=null==e?fe:Math.pow(fe,e),new ke(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=null==e?me:Math.pow(me,e),new ke(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new ke(Ue(this.r),Ue(this.g),Ue(this.b),Ne(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:Le,formatHex:Le,formatHex8:function(){return`#${Ge(this.r)}${Ge(this.g)}${Ge(this.b)}${Ge(255*(isNaN(this.opacity)?1:this.opacity))}`},formatRgb:Re,toString:Re})),de(ze,(function(e,t,r,n){return 1===arguments.length?_e(e):new ze(e,t,r,null==n?1:n)}),ge(pe,{brighter(e){return e=null==e?fe:Math.pow(fe,e),new ze(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=null==e?me:Math.pow(me,e),new ze(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,r=this.l,n=r+(r<.5?r:1-r)*t,a=2*r-n;return new ke(He(e>=240?e-240:e+120,a,n),He(e,a,n),He(e<120?e+240:e-120,a,n),this.opacity)},clamp(){return new ze(Fe(this.h),We(this.s),We(this.l),Ne(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=Ne(this.opacity);return`${1===e?"hsl(":"hsla("}${Fe(this.h)}, ${100*We(this.s)}%, ${100*We(this.l)}%${1===e?")":`, ${e})`}`}}));const Ke=e=>()=>e;function je(e,t){return function(r){return e+r*t}}function qe(e){return 1==(e=+e)?Ye:function(t,r){return r-t?function(e,t,r){return e=Math.pow(e,r),t=Math.pow(t,r)-e,r=1/r,function(n){return Math.pow(e+n*t,r)}}(t,r,e):Ke(isNaN(t)?r:t)}}function Ye(e,t){var r=t-e;return r?je(e,r):Ke(isNaN(e)?t:e)}const Xe=function e(t){var r=qe(t);function n(e,t){var n=r((e=Ve(e)).r,(t=Ve(t)).r),a=r(e.g,t.g),o=r(e.b,t.b),i=Ye(e.opacity,t.opacity);return function(t){return e.r=n(t),e.g=a(t),e.b=o(t),e.opacity=i(t),e+""}}return n.gamma=e,n}(1);function Ze(e){return function(t){var r,n,a=t.length,o=new Array(a),i=new Array(a),s=new Array(a);for(r=0;r<a;++r)n=Ve(t[r]),o[r]=n.r||0,i[r]=n.g||0,s[r]=n.b||0;return o=e(o),i=e(i),s=e(s),n.opacity=1,function(e){return n.r=o(e),n.g=i(e),n.b=s(e),n+""}}}Ze((function(e){var t=e.length-1;return function(r){var n=r<=0?r=0:r>=1?(r=1,t-1):Math.floor(r*t),a=e[n],o=e[n+1],i=n>0?e[n-1]:2*a-o,s=n<t-1?e[n+2]:2*o-a;return $e((r-n/t)*t,i,a,o,s)}})),Ze((function(e){var t=e.length;return function(r){var n=Math.floor(((r%=1)<0?++r:r)*t),a=e[(n+t-1)%t],o=e[n%t],i=e[(n+1)%t],s=e[(n+2)%t];return $e((r-n/t)*t,a,o,i,s)}}));function Qe(e,t){var r,n=t?t.length:0,a=e?Math.min(n,e.length):0,o=new Array(a),i=new Array(n);for(r=0;r<a;++r)o[r]=it(e[r],t[r]);for(;r<n;++r)i[r]=t[r];return function(e){for(r=0;r<a;++r)i[r]=o[r](e);return i}}function Je(e,t){var r=new Date;return e=+e,t=+t,function(n){return r.setTime(e*(1-n)+t*n),r}}function et(e,t){return e=+e,t=+t,function(r){return e*(1-r)+t*r}}function tt(e,t){var r,n={},a={};for(r in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)r in e?n[r]=it(e[r],t[r]):a[r]=t[r];return function(e){for(r in n)a[r]=n[r](e);return a}}var rt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,nt=new RegExp(rt.source,"g");function at(e,t){var r,n,a,o=rt.lastIndex=nt.lastIndex=0,i=-1,s=[],l=[];for(e+="",t+="";(r=rt.exec(e))&&(n=nt.exec(t));)(a=n.index)>o&&(a=t.slice(o,a),s[i]?s[i]+=a:s[++i]=a),(r=r[0])===(n=n[0])?s[i]?s[i]+=n:s[++i]=n:(s[++i]=null,l.push({i,x:et(r,n)})),o=nt.lastIndex;return o<t.length&&(a=t.slice(o),s[i]?s[i]+=a:s[++i]=a),s.length<2?l[0]?function(e){return function(t){return e(t)+""}}(l[0].x):function(e){return function(){return e}}(t):(t=l.length,function(e){for(var r,n=0;n<t;++n)s[(r=l[n]).i]=r.x(e);return s.join("")})}function ot(e,t){t||(t=[]);var r,n=e?Math.min(t.length,e.length):0,a=t.slice();return function(o){for(r=0;r<n;++r)a[r]=e[r]*(1-o)+t[r]*o;return a}}function it(e,t){var r,n,a=typeof t;return null==t||"boolean"===a?Ke(t):("number"===a?et:"string"===a?(r=De(t))?(t=r,Xe):at:t instanceof De?Xe:t instanceof Date?Je:(n=t,!ArrayBuffer.isView(n)||n instanceof DataView?Array.isArray(t)?Qe:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?tt:et:ot))(e,t)}function st(e,t){return e=+e,t=+t,function(r){return Math.round(e*(1-r)+t*r)}}function lt(e){return+e}var ct=[0,1];function ut(e){return e}function dt(e,t){return(t-=e=+e)?function(r){return(r-e)/t}:(r=isNaN(t)?NaN:.5,function(){return r});var r}function gt(e,t,r){var n=e[0],a=e[1],o=t[0],i=t[1];return a<n?(n=dt(a,n),o=r(i,o)):(n=dt(n,a),o=r(o,i)),function(e){return o(n(e))}}function pt(e,t,r){var n=Math.min(e.length,t.length)-1,a=new Array(n),o=new Array(n),i=-1;for(e[n]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++i<n;)a[i]=dt(e[i],e[i+1]),o[i]=r(t[i],t[i+1]);return function(t){var r=ue(e,t,1,n)-1;return o[r](a[r](t))}}function mt(){var e,t,r,n,a,o,i=ct,s=ct,l=it,c=ut;function u(){var e,t,r,l=Math.min(i.length,s.length);return c!==ut&&(e=i[0],t=i[l-1],e>t&&(r=e,e=t,t=r),c=function(r){return Math.max(e,Math.min(t,r))}),n=l>2?pt:gt,a=o=null,d}function d(t){return null==t||isNaN(t=+t)?r:(a||(a=n(i.map(e),s,l)))(e(c(t)))}return d.invert=function(r){return c(t((o||(o=n(s,i.map(e),et)))(r)))},d.domain=function(e){return arguments.length?(i=Array.from(e,lt),u()):i.slice()},d.range=function(e){return arguments.length?(s=Array.from(e),u()):s.slice()},d.rangeRound=function(e){return s=Array.from(e),l=st,u()},d.clamp=function(e){return arguments.length?(c=!!e||ut,u()):c!==ut},d.interpolate=function(e){return arguments.length?(l=e,u()):l},d.unknown=function(e){return arguments.length?(r=e,d):r},function(r,n){return e=r,t=n,u()}}function ft(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}var ht,bt=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function yt(e){if(!(t=bt.exec(e)))throw new Error("invalid format: "+e);var t;return new vt({fill:t[1],align:t[2],sign:t[3],symbol:t[4],zero:t[5],width:t[6],comma:t[7],precision:t[8]&&t[8].slice(1),trim:t[9],type:t[10]})}function vt(e){this.fill=void 0===e.fill?" ":e.fill+"",this.align=void 0===e.align?">":e.align+"",this.sign=void 0===e.sign?"-":e.sign+"",this.symbol=void 0===e.symbol?"":e.symbol+"",this.zero=!!e.zero,this.width=void 0===e.width?void 0:+e.width,this.comma=!!e.comma,this.precision=void 0===e.precision?void 0:+e.precision,this.trim=!!e.trim,this.type=void 0===e.type?"":e.type+""}function xt(e,t){if((r=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var r,n=e.slice(0,r);return[n.length>1?n[0]+n.slice(2):n,+e.slice(r+1)]}function Tt(e){return(e=xt(Math.abs(e)))?e[1]:NaN}function At(e,t){var r=xt(e,t);if(!r)return e+"";var n=r[0],a=r[1];return a<0?"0."+new Array(-a).join("0")+n:n.length>a+1?n.slice(0,a+1)+"."+n.slice(a+1):n+new Array(a-n.length+2).join("0")}yt.prototype=vt.prototype,vt.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};const St={"%":(e,t)=>(100*e).toFixed(t),b:e=>Math.round(e).toString(2),c:e=>e+"",d:function(e){return Math.abs(e=Math.round(e))>=1e21?e.toLocaleString("en").replace(/,/g,""):e.toString(10)},e:(e,t)=>e.toExponential(t),f:(e,t)=>e.toFixed(t),g:(e,t)=>e.toPrecision(t),o:e=>Math.round(e).toString(8),p:(e,t)=>At(100*e,t),r:At,s:function(e,t){var r=xt(e,t);if(!r)return e+"";var n=r[0],a=r[1],o=a-(ht=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,i=n.length;return o===i?n:o>i?n+new Array(o-i+1).join("0"):o>0?n.slice(0,o)+"."+n.slice(o):"0."+new Array(1-o).join("0")+xt(e,Math.max(0,t+o-1))[0]},X:e=>Math.round(e).toString(16).toUpperCase(),x:e=>Math.round(e).toString(16)};function Ct(e){return e}var Pt,It,wt,Ot=Array.prototype.map,Dt=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];function Mt(e){var t,r,n=void 0===e.grouping||void 0===e.thousands?Ct:(t=Ot.call(e.grouping,Number),r=e.thousands+"",function(e,n){for(var a=e.length,o=[],i=0,s=t[0],l=0;a>0&&s>0&&(l+s+1>n&&(s=Math.max(1,n-l)),o.push(e.substring(a-=s,a+s)),!((l+=s+1)>n));)s=t[i=(i+1)%t.length];return o.reverse().join(r)}),a=void 0===e.currency?"":e.currency[0]+"",o=void 0===e.currency?"":e.currency[1]+"",i=void 0===e.decimal?".":e.decimal+"",s=void 0===e.numerals?Ct:function(e){return function(t){return t.replace(/[0-9]/g,(function(t){return e[+t]}))}}(Ot.call(e.numerals,String)),l=void 0===e.percent?"%":e.percent+"",c=void 0===e.minus?"−":e.minus+"",u=void 0===e.nan?"NaN":e.nan+"";function d(e){var t=(e=yt(e)).fill,r=e.align,d=e.sign,g=e.symbol,p=e.zero,m=e.width,f=e.comma,h=e.precision,b=e.trim,y=e.type;"n"===y?(f=!0,y="g"):St[y]||(void 0===h&&(h=12),b=!0,y="g"),(p||"0"===t&&"="===r)&&(p=!0,t="0",r="=");var v="$"===g?a:"#"===g&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",x="$"===g?o:/[%p]/.test(y)?l:"",T=St[y],A=/[defgprs%]/.test(y);function S(e){var a,o,l,g=v,S=x;if("c"===y)S=T(e)+S,e="";else{var C=(e=+e)<0||1/e<0;if(e=isNaN(e)?u:T(Math.abs(e),h),b&&(e=function(e){e:for(var t,r=e.length,n=1,a=-1;n<r;++n)switch(e[n]){case".":a=t=n;break;case"0":0===a&&(a=n),t=n;break;default:if(!+e[n])break e;a>0&&(a=0)}return a>0?e.slice(0,a)+e.slice(t+1):e}(e)),C&&0==+e&&"+"!==d&&(C=!1),g=(C?"("===d?d:c:"-"===d||"("===d?"":d)+g,S=("s"===y?Dt[8+ht/3]:"")+S+(C&&"("===d?")":""),A)for(a=-1,o=e.length;++a<o;)if(48>(l=e.charCodeAt(a))||l>57){S=(46===l?i+e.slice(a+1):e.slice(a))+S,e=e.slice(0,a);break}}f&&!p&&(e=n(e,1/0));var P=g.length+e.length+S.length,I=P<m?new Array(m-P+1).join(t):"";switch(f&&p&&(e=n(I+e,I.length?m-S.length:1/0),I=""),r){case"<":e=g+e+S+I;break;case"=":e=g+I+e+S;break;case"^":e=I.slice(0,P=I.length>>1)+g+e+S+I.slice(P);break;default:e=I+g+e+S}return s(e)}return h=void 0===h?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,h)):Math.max(0,Math.min(20,h)),S.toString=function(){return e+""},S}return{format:d,formatPrefix:function(e,t){var r=d(((e=yt(e)).type="f",e)),n=3*Math.max(-8,Math.min(8,Math.floor(Tt(t)/3))),a=Math.pow(10,-n),o=Dt[8+n/3];return function(e){return r(a*e)+o}}}}function Bt(e,t,r,n){var a,o=function(e,t,r){r=+r;const n=(t=+t)<(e=+e),a=n?ne(t,e,r):ne(e,t,r);return(n?-1:1)*(a<0?1/-a:a)}(e,t,r);switch((n=yt(null==n?",f":n)).type){case"s":var i=Math.max(Math.abs(e),Math.abs(t));return null!=n.precision||isNaN(a=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Tt(t)/3)))-Tt(Math.abs(e)))}(o,i))||(n.precision=a),wt(n,i);case"":case"e":case"g":case"p":case"r":null!=n.precision||isNaN(a=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,Tt(t)-Tt(e))+1}(o,Math.max(Math.abs(e),Math.abs(t))))||(n.precision=a-("e"===n.type));break;case"f":case"%":null!=n.precision||isNaN(a=function(e){return Math.max(0,-Tt(Math.abs(e)))}(o))||(n.precision=a-2*("%"===n.type))}return It(n)}function Vt(e){var t=e.domain;return e.ticks=function(e){var r=t();return function(e,t,r){if(!((r=+r)>0))return[];if((e=+e)==(t=+t))return[e];const n=t<e,[a,o,i]=n?re(t,e,r):re(e,t,r);if(!(o>=a))return[];const s=o-a+1,l=new Array(s);if(n)if(i<0)for(let e=0;e<s;++e)l[e]=(o-e)/-i;else for(let e=0;e<s;++e)l[e]=(o-e)*i;else if(i<0)for(let e=0;e<s;++e)l[e]=(a+e)/-i;else for(let e=0;e<s;++e)l[e]=(a+e)*i;return l}(r[0],r[r.length-1],null==e?10:e)},e.tickFormat=function(e,r){var n=t();return Bt(n[0],n[n.length-1],null==e?10:e,r)},e.nice=function(r){null==r&&(r=10);var n,a,o=t(),i=0,s=o.length-1,l=o[i],c=o[s],u=10;for(c<l&&(a=l,l=c,c=a,a=i,i=s,s=a);u-- >0;){if((a=ne(l,c,r))===n)return o[i]=l,o[s]=c,t(o);if(a>0)l=Math.floor(l/a)*a,c=Math.ceil(c/a)*a;else{if(!(a<0))break;l=Math.ceil(l*a)/a,c=Math.floor(c*a)/a}n=a}return e},e}function kt(){var e=mt()(ut,ut);return e.copy=function(){return t=e,kt().domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp()).unknown(t.unknown());var t},ft.apply(e,arguments),Vt(e)}Pt=Mt({thousands:",",grouping:[3],currency:["$",""]}),It=Pt.format,wt=Pt.formatPrefix;var Lt=r(4502),Rt=r(2878),Nt=r(8488),Ut=r(6618),Gt=r(659),Et=r(5294);const _t={image:null,canvas:null,jsImageData:null,imageLoaded:!1,repeat:!1,interpolate:!1,edgeClamp:!1,mipLevel:0,resizable:!1};function zt(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,_t,r),X.m.obj(e,t),X.m.algo(e,t,6,0),X.m.get(e,t,["canvas","image","jsImageData","imageLoaded","resizable"]),X.m.setGet(e,t,["repeat","edgeClamp","interpolate","mipLevel"]),function(e,t){t.classHierarchy.push("vtkTexture"),e.imageLoaded=()=>{t.image.removeEventListener("load",e.imageLoaded),t.imageLoaded=!0,e.modified()},e.setJsImageData=r=>{t.jsImageData!==r&&(null!==r&&(e.setInputData(null),e.setInputConnection(null),t.image=null,t.canvas=null),t.jsImageData=r,t.imageLoaded=!0,e.modified())},e.setCanvas=r=>{t.canvas!==r&&(null!==r&&(e.setInputData(null),e.setInputConnection(null),t.image=null,t.jsImageData=null),t.canvas=r,e.modified())},e.setImage=r=>{t.image!==r&&(null!==r&&(e.setInputData(null),e.setInputConnection(null),t.canvas=null,t.jsImageData=null),t.image=r,t.imageLoaded=!1,r.complete?e.imageLoaded():r.addEventListener("load",e.imageLoaded),e.modified())},e.getDimensionality=()=>{let r=0,n=0,a=1;if(e.getInputData()){const t=e.getInputData();r=t.getDimensions()[0],n=t.getDimensions()[1],a=t.getDimensions()[2]}return t.jsImageData&&(r=t.jsImageData.width,n=t.jsImageData.height),t.canvas&&(r=t.canvas.width,n=t.canvas.height),t.image&&(r=t.image.width,n=t.image.height),(r>1)+(n>1)+(a>1)},e.getInputAsJsImageData=()=>{if(!t.imageLoaded||e.getInputData())return null;if(t.jsImageData)return t.jsImageData();if(t.canvas)return t.canvas.getContext("2d").getImageData(0,0,t.canvas.width,t.canvas.height);if(t.image){const e=document.createElement("canvas");e.width=t.image.width,e.height=t.image.height;const r=e.getContext("2d");return r.translate(0,e.height),r.scale(1,-1),r.drawImage(t.image,0,0,t.image.width,t.image.height),r.getImageData(0,0,e.width,e.height)}return null}}(e,t)}const Ft={generateMipmaps:(e,t,r,n)=>{const a=[1,2,1],o=e.length/(t*r);let i=t,s=r,l=e;const c=[l];for(let e=0;e<n;e++){const e=[...l];i/=2,s/=2,l=new Uint8ClampedArray(i*s*o);const t=o*i;let r=0;for(let n=0;n<l.length;n+=o){n%t==0&&(r+=2*o*i);for(let a=0;a<o;a++){let i=e[r+a];i+=e[r+o+a],i+=e[r-2*t+a],i+=e[r-2*t+o+a],i/=4,l[n+a]=i}r+=2*o}let n=[...l];for(let e=0;e<l.length;e+=o)for(let r=0;r<o;r++){let i=-(a.length-1)/2,s=4,c=0;for(let l=0;l<a.length;l++){let u=e+r+i*o;const d=u%t-(e+r)%t;d>o&&(u+=t),d<-o&&(u-=t),n[u]?c+=n[u]*a[l]:s-=a[l],i+=1}l[e+r]=c/s}n=[...l];for(let e=0;e<l.length;e+=o)for(let r=0;r<o;r++){let o=-(a.length-1)/2,i=4,s=0;for(let l=0;l<a.length;l++){const c=e+r+o*t;n[c]?s+=n[c]*a[l]:i-=a[l],o+=1}l[e+r]=s/i}c.push(l)}return c}};var Wt={newInstance:X.m.newInstance(zt,"vtkTexture"),extend:zt,...Ft};const Ht=[[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]],$t=[[8,7,11,3],[9,1,10,5],[4,9,0,8],[2,11,6,10],[0,3,2,1],[4,5,6,7]],Kt=[[0,1],[1,3],[2,3],[0,2],[4,5],[5,7],[6,7],[4,6],[0,4],[1,5],[3,7],[2,6]],jt=[0,1,0,1,0,1,0,1,2,2,2,2],qt=[[1,2],[1,2],[0,2],[0,2],[0,1],[0,1]],Yt=new Float64Array(3),Xt=new Float64Array(3),Zt=new Float64Array(3),Qt=new Float64Array(3),Jt=new Float64Array(3),er=new Float64Array(3),tr=new Float64Array(16);function rr(e,t){e.strokeStyle=t.strokeColor,e.lineWidth=t.strokeSize,e.fillStyle=t.fontColor,e.font=`${t.fontStyle} ${t.fontSize}px ${t.fontFamily}`}function nr(e){const t=[],r=[];for(let n=0;n<3;n++){const a=kt().domain([e[2*n],e[2*n+1]]);t[n]=a.ticks(5);const o=a.tickFormat(5);r[n]=t[n].map(o)}return{ticks:t,tickStrings:r}}const ar=X.m.newInstance((function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{renderable:null};Object.assign(t,{},r),X.m.obj(e,t),t.tmPolyData=Et.Ay.newInstance(),t.tmMapper=Gt.Ay.newInstance(),t.tmMapper.setInputData(t.tmPolyData),t.tmActor=Rt.Ay.newInstance({parentProp:e}),t.tmActor.setMapper(t.tmMapper),X.m.setGet(e,t,["renderable"]),X.m.get(e,t,["lastSize","lastAspectRatio","axisTextStyle","tickTextStyle","tmActor","ticks"]),t.forceUpdate=!1,t.lastRedrawTime={},X.m.obj(t.lastRedrawTime,{mtime:0}),t.lastRebuildTime={},X.m.obj(t.lastRebuildTime,{mtime:0}),t.lastSize=[-1,-1],t.lastTickBounds=[],function(e,t){t.classHierarchy.push("vtkCubeAxesActorHelper"),e.setRenderable=r=>{t.renderable!==r&&(t.renderable=r,t.tmActor.addTexture(t.renderable.getTmTexture()),t.tmActor.setProperty(r.getProperty()),t.tmActor.setParentProp(r),e.modified())},e.createPolyDataForOneLabel=(e,r,n,a,o,i,s)=>{const l=t.renderable.get_tmAtlas().get(e);if(!l)return;const c=t.renderable.getTextPolyData().getPoints().getData(),u=t.lastSize;Yt[0]=c[3*r],Yt[1]=c[3*r+1],Yt[2]=c[3*r+2],Z.Z0(Zt,Yt,n),Zt[0]+=.1,Z.Z0(Xt,Zt,a),Z.Re(Jt,Xt,Yt),Zt[0]-=.1,Zt[1]+=.1,Z.Z0(Xt,Zt,a),Z.Re(er,Xt,Yt);for(let e=0;e<3;e++)Jt[e]/=.05*u[0],er[e]/=.05*u[1];let d=s.ptIdx,g=s.cellIdx;Yt[0]=c[3*r],Yt[1]=c[3*r+1],Yt[2]=c[3*r+2],o[0]<-.5?Z.hs(Zt,Jt,o[0]*i-l.width):o[0]>.5?Z.hs(Zt,Jt,o[0]*i):Z.hs(Zt,Jt,o[0]*i-l.width/2),Z.WQ(Yt,Yt,Zt),Z.hs(Zt,er,o[1]*i-l.height/2),Z.WQ(Yt,Yt,Zt),s.points[3*d]=Yt[0],s.points[3*d+1]=Yt[1],s.points[3*d+2]=Yt[2],s.tcoords[2*d]=l.tcoords[0],s.tcoords[2*d+1]=l.tcoords[1],d++,Z.hs(Zt,Jt,l.width),Z.WQ(Yt,Yt,Zt),s.points[3*d]=Yt[0],s.points[3*d+1]=Yt[1],s.points[3*d+2]=Yt[2],s.tcoords[2*d]=l.tcoords[2],s.tcoords[2*d+1]=l.tcoords[3],d++,Z.hs(Zt,er,l.height),Z.WQ(Yt,Yt,Zt),s.points[3*d]=Yt[0],s.points[3*d+1]=Yt[1],s.points[3*d+2]=Yt[2],s.tcoords[2*d]=l.tcoords[4],s.tcoords[2*d+1]=l.tcoords[5],d++,Z.hs(Zt,Jt,l.width),Z.Re(Yt,Yt,Zt),s.points[3*d]=Yt[0],s.points[3*d+1]=Yt[1],s.points[3*d+2]=Yt[2],s.tcoords[2*d]=l.tcoords[6],s.tcoords[2*d+1]=l.tcoords[7],d++,s.polys[4*g]=3,s.polys[4*g+1]=d-4,s.polys[4*g+2]=d-3,s.polys[4*g+3]=d-2,g++,s.polys[4*g]=3,s.polys[4*g+1]=d-4,s.polys[4*g+2]=d-2,s.polys[4*g+3]=d-1,s.ptIdx+=4,s.cellIdx+=2},e.updateTexturePolyData=()=>{const r=t.camera.getCompositeProjectionMatrix(t.lastAspectRatio,-1,1);Q.transpose(r,r);const n=t.renderable.getTextValues().length,a=4*n,o=2*n,i=new Float64Array(3*a),s=new Uint16Array(4*o),l=new Float32Array(2*a);Q.invert(tr,r);const c={ptIdx:0,cellIdx:0,polys:s,points:i,tcoords:l};let u=0,d=0,g=0;const p=t.renderable.getTextPolyData().getPoints().getData(),m=t.renderable.getTextValues();for(;u<p.length/3;){Yt[0]=p[3*u],Yt[1]=p[3*u+1],Yt[2]=p[3*u+2],Z.Z0(Zt,Yt,r),Yt[0]=p[3*u+3],Yt[1]=p[3*u+4],Yt[2]=p[3*u+5],Z.Z0(Qt,Yt,r),Z.Re(Zt,Zt,Qt);const n=[Zt[0],Zt[1]];(0,Lt.Q)(n),e.createPolyDataForOneLabel(m[d],u,r,tr,n,t.renderable.getAxisTitlePixelOffset(),c),u+=2,d++;for(let a=0;a<t.renderable.getTickCounts()[g];a++)e.createPolyDataForOneLabel(m[d],u,r,tr,n,t.renderable.getTickLabelPixelOffset(),c),u++,d++;g++}const f=Ut.Ay.newInstance({numberOfComponents:2,values:l,name:"TextureCoordinates"});t.tmPolyData.getPointData().setTCoords(f),t.tmPolyData.getPoints().setData(i,3),t.tmPolyData.getPoints().modified(),t.tmPolyData.getPolys().setData(s,1),t.tmPolyData.getPolys().modified(),t.tmPolyData.modified()},e.updateAPISpecificData=(r,n,a)=>{t.lastSize[0]===r[0]&&t.lastSize[1]===r[1]||(t.lastSize[0]=r[0],t.lastSize[1]=r[1],t.lastAspectRatio=r[0]/r[1],t.forceUpdate=!0),t.camera=n,e.updateTexturePolyData()}}(e,t)}),"vtkCubeAxesActorHelper");function or(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Rt.Ay.extend(e,t,function(e,t,r){return{boundsScaleFactor:1.3,camera:null,dataBounds:[...Nt.Ay.INIT_BOUNDS],faceVisibilityAngle:8,gridLines:!0,axisLabels:null,axisTitlePixelOffset:35,tickLabelPixelOffset:12,generateTicks:nr,...r,axisTextStyle:{fontColor:"white",fontStyle:"normal",fontSize:18,fontFamily:"serif",...r?.axisTextStyle},tickTextStyle:{fontColor:"white",fontStyle:"normal",fontSize:14,fontFamily:"serif",...r?.tickTextStyle}}}(0,0,r)),t.lastFacesToDraw=[!1,!1,!1,!1,!1,!1],t.axisLabels=["X-Axis","Y-Axis","Z-Axis"],t.tickCounts=[],t.textValues=[],t.lastTickBounds=[],t.tmCanvas=document.createElement("canvas"),t.tmContext=t.tmCanvas.getContext("2d"),t._tmAtlas=new Map,t.tmTexture=Wt.newInstance({resizable:!0}),t.tmTexture.setInterpolate(!1),e.getProperty().setDiffuse(0),e.getProperty().setAmbient(1),t.gridMapper=Gt.Ay.newInstance(),t.polyData=Et.Ay.newInstance(),t.gridMapper.setInputData(t.polyData),t.gridActor=Rt.Ay.newInstance(),t.gridActor.setMapper(t.gridMapper),t.gridActor.setProperty(e.getProperty()),t.gridActor.setParentProp(e),t.textPolyData=Et.Ay.newInstance(),X.m.setGet(e,t,["axisTitlePixelOffset","boundsScaleFactor","faceVisibilityAngle","gridLines","tickLabelPixelOffset","generateTicks"]),X.m.setGetArray(e,t,["dataBounds"],6),X.m.setGetArray(e,t,["axisLabels"],3),X.m.get(e,t,["axisTextStyle","tickTextStyle","camera","tmTexture","textValues","textPolyData","tickCounts","gridActor"]),function(e,t){t.classHierarchy.push("vtkCubeAxesActor"),e.setCamera=r=>{t.camera!==r&&(t.cameraModifiedSub&&(t.cameraModifiedSub.unsubscribe(),t.cameraModifiedSub=null),t.camera=r,r&&(t.cameraModifiedSub=r.onModified(e.update)),e.update(),e.modified())},e.computeFacesToDraw=()=>{const e=t.camera.getViewMatrix();Q.transpose(e,e);let r=!1;const n=Nt.Ay.getDiagonalLength(t.dataBounds),a=Math.sin(t.faceVisibilityAngle*Math.PI/180);for(let o=0;o<6;o++){let i=!1;const s=Math.floor(o/2),l=(s+1)%3,c=(s+2)%3;t.dataBounds[2*l]!==t.dataBounds[2*l+1]&&t.dataBounds[2*c]!==t.dataBounds[2*c+1]&&(Yt[s]=t.dataBounds[o]-.1*n*Ht[o][s],Yt[l]=.5*(t.dataBounds[2*l]+t.dataBounds[2*l+1]),Yt[c]=.5*(t.dataBounds[2*c]+t.dataBounds[2*c+1]),Z.Z0(Zt,Yt,e),Yt[s]=t.dataBounds[o],Z.Z0(Qt,Yt,e),Z.Re(Zt,Qt,Zt),Z.S8(Zt,Zt),i=Zt[2]>a,t.camera.getParallelProjection()||(Z.S8(Qt,Qt),i=Z.Om(Qt,Zt)>a)),i!==t.lastFacesToDraw[o]&&(t.lastFacesToDraw[o]=i,r=!0)}return r},e.updatePolyData=(e,r,n)=>{let a=0,o=0;a+=8;let i=0;for(let e=0;e<12;e++)r[e]>0&&i++;if(o+=i,t.gridLines)for(let t=0;t<6;t++)e[t]&&(a+=2*n[qt[t][0]].length+2*n[qt[t][1]].length,o+=n[qt[t][0]].length+n[qt[t][1]].length);const s=new Float64Array(3*a),l=new Uint32Array(3*o);let c=0,u=0;for(let e=0;e<2;e++)for(let r=0;r<2;r++)for(let n=0;n<2;n++)s[3*c]=t.dataBounds[n],s[3*c+1]=t.dataBounds[2+r],s[3*c+2]=t.dataBounds[4+e],c++;for(let e=0;e<12;e++)r[e]>0&&(l[3*u]=2,l[3*u+1]=Kt[e][0],l[3*u+2]=Kt[e][1],u++);if(t.gridLines)for(let r=0;r<6;r++)if(e[r]){const e=Math.floor(r/2);let a=n[qt[r][0]];for(let n=0;n<a.length;n++)s[3*c+e]=t.dataBounds[r],s[3*c+qt[r][0]]=a[n],s[3*c+qt[r][1]]=t.dataBounds[2*qt[r][1]],c++,s[3*c+e]=t.dataBounds[r],s[3*c+qt[r][0]]=a[n],s[3*c+qt[r][1]]=t.dataBounds[2*qt[r][1]+1],c++,l[3*u]=2,l[3*u+1]=c-2,l[3*u+2]=c-1,u++;a=n[qt[r][1]];for(let n=0;n<a.length;n++)s[3*c+e]=t.dataBounds[r],s[3*c+qt[r][1]]=a[n],s[3*c+qt[r][0]]=t.dataBounds[2*qt[r][0]],c++,s[3*c+e]=t.dataBounds[r],s[3*c+qt[r][1]]=a[n],s[3*c+qt[r][0]]=t.dataBounds[2*qt[r][0]+1],c++,l[3*u]=2,l[3*u+1]=c-2,l[3*u+2]=c-1,u++}t.polyData.getPoints().setData(s,3),t.polyData.getPoints().modified(),t.polyData.getLines().setData(l,1),t.polyData.getLines().modified(),t.polyData.modified()},e.updateTextData=(e,r,n,a)=>{let o=0;for(let e=0;e<12;e++)1===r[e]&&(o+=2,o+=n[jt[e]].length);const i=t.polyData.getPoints().getData(),s=new Float64Array(3*o);let l=0,c=0,u=0;for(let o=0;o<6;o++)if(e[o])for(let e=0;e<4;e++){const d=$t[o][e];if(1===r[d]){const e=jt[d],r=3*Kt[d][0],g=3*Kt[d][1];s[3*l]=.5*(i[r]+i[g]),s[3*l+1]=.5*(i[r+1]+i[g+1]),s[3*l+2]=.5*(i[r+2]+i[g+2]),l++,s[3*l+Math.floor(o/2)]=t.dataBounds[o],s[3*l+qt[o][0]]=.5*(t.dataBounds[2*qt[o][0]]+t.dataBounds[2*qt[o][0]+1]),s[3*l+qt[o][1]]=.5*(t.dataBounds[2*qt[o][1]]+t.dataBounds[2*qt[o][1]+1]),l++,t.textValues[c]=t.axisLabels[e],c++;const p=(e+1)%3,m=(e+2)%3,f=n[e],h=a[e];t.tickCounts[u]=f.length;for(let n=0;n<f.length;n++)s[3*l+e]=f[n],s[3*l+p]=i[r+p],s[3*l+m]=i[r+m],l++,t.textValues[c]=h[n],c++;u++}}t.textPolyData.getPoints().setData(s,3),t.textPolyData.modified()},e.update=()=>{if(!t.camera)return;const r=e.computeFacesToDraw(),n=t.lastFacesToDraw;let a=!1;for(let e=0;e<6;e++)t.dataBounds[e]!==t.lastTickBounds[e]&&(a=!0,t.lastTickBounds[e]=t.dataBounds[e]);if(r||a||t.forceUpdate){const r=new Array(12).fill(0);for(let e=0;e<6;e++)if(n[e])for(let t=0;t<4;t++)r[$t[e][t]]++;const o=t.generateTicks(t.dataBounds);e.updatePolyData(n,r,o.ticks),e.updateTextData(n,r,o.ticks,o.tickStrings),(a||t.forceUpdate)&&e.updateTextureAtlas(o.tickStrings)}t.forceUpdate=!1},e.updateTextureAtlas=e=>{t.tmContext.textBaseline="bottom",t.tmContext.textAlign="left",t._tmAtlas.clear();let r=0,n=1;for(let a=0;a<3;a++){if(!t._tmAtlas.has(t.axisLabels[a])){rr(t.tmContext,t.axisTextStyle);const e=t.tmContext.measureText(t.axisLabels[a]),o={height:e.actualBoundingBoxAscent+2,startingHeight:n,width:e.width+2,textStyle:t.axisTextStyle};t._tmAtlas.set(t.axisLabels[a],o),n+=o.height,r<o.width&&(r=o.width)}rr(t.tmContext,t.tickTextStyle);for(let o=0;o<e[a].length;o++)if(!t._tmAtlas.has(e[a][o])){const i=t.tmContext.measureText(e[a][o]),s={height:i.actualBoundingBoxAscent+2,startingHeight:n,width:i.width+2,textStyle:t.tickTextStyle};t._tmAtlas.set(e[a][o],s),n+=s.height,r<s.width&&(r=s.width)}}r=(0,Lt.R)(r),n=(0,Lt.R)(n),t._tmAtlas.forEach((e=>{e.tcoords=[0,(n-e.startingHeight-e.height)/n,e.width/r,(n-e.startingHeight-e.height)/n,e.width/r,(n-e.startingHeight)/n,0,(n-e.startingHeight)/n]})),t.tmCanvas.width=r,t.tmCanvas.height=n,t.tmContext.textBaseline="bottom",t.tmContext.textAlign="left",t.tmContext.clearRect(0,0,r,n),t._tmAtlas.forEach(((e,r)=>{rr(t.tmContext,e.textStyle),t.tmContext.fillText(r,1,e.startingHeight+e.height-1)})),t.tmTexture.setCanvas(t.tmCanvas),t.tmTexture.modified()},e.onModified((()=>{t.forceUpdate=!0,e.update()})),e.setTickTextStyle=r=>{t.tickTextStyle={...t.tickTextStyle,...r},e.modified()},e.setAxisTextStyle=r=>{t.axisTextStyle={...t.axisTextStyle,...r},e.modified()},e.get_tmAtlas=()=>t._tmAtlas,e.getBounds=()=>(e.update(),Nt.Ay.setBounds(t.bounds,t.gridActor.getBounds()),Nt.Ay.scaleAboutCenter(t.bounds,t.boundsScaleFactor,t.boundsScaleFactor,t.boundsScaleFactor),t.bounds);const r=X.m.chain(e.setProperty,t.gridActor.setProperty);e.setProperty=e=>r(e)[0]}(e,t)}var ir={newInstance:X.m.newInstance(or,"vtkCubeAxesActor"),extend:or,newCubeAxesActorHelper:ar,defaultGenerateTicks:nr},sr=r(6938),lr=r(4573);const cr={};function ur(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,cr,r),sr.A.extend(e,t,r),t.CubeAxesActorHelper=ir.newCubeAxesActorHelper(),function(e,t){t.classHierarchy.push("vtkOpenGLCubeAxesActor"),e.buildPass=r=>{r&&(t._openGLRenderer=e.getFirstAncestorOfType("vtkOpenGLRenderer"),t._openGLRenderWindow=t._openGLRenderer.getParent(),t.CubeAxesActorHelper.getRenderable()||t.CubeAxesActorHelper.setRenderable(t.renderable),e.prepareNodes(),e.addMissingNode(t.CubeAxesActorHelper.getTmActor()),e.addMissingNode(t.renderable.getGridActor()),e.removeUnusedNodes())},e.opaquePass=(e,r)=>{if(e){const e=t._openGLRenderer?t._openGLRenderer.getRenderable().getActiveCamera():null,r=t._openGLRenderer.getTiledSizeAndOrigin();t.CubeAxesActorHelper.updateAPISpecificData([r.usize,r.vsize],e,t._openGLRenderWindow.getRenderable())}}}(e,t)}const dr=(0,X.n)(ur,"vtkOpenGLCubeAxesActor");(0,lr.c9)("vtkCubeAxesActor",dr);r(2281);var gr=r(9684),pr=r(3385),mr=r(1537),fr=r(8689);const{ColorMode:hr,ScalarMode:br,GetArray:yr}=fr.Ay;const vr={static:!1,lookupTable:null,scalarVisibility:!1,scalarRange:[0,1],useLookupTableScalarRange:!1,colorMode:0,scalarMode:0,arrayAccessMode:1,renderTime:0,colorByArrayName:null,transformCoordinate:null,viewSpecificProperties:null,customShaderAttributes:[]};function xr(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,vr,r),pr.A.extend(e,t,r),X.m.get(e,t,["colorMapColors"]),X.m.setGet(e,t,["arrayAccessMode","colorByArrayName","colorMode","lookupTable","renderTime","scalarMode","scalarVisibility","static","transformCoordinate","useLookupTableScalarRange","viewSpecificProperties","customShaderAttributes"]),X.m.setGetArray(e,t,["scalarRange"],2),t.viewSpecificProperties||(t.viewSpecificProperties={}),function(e,t){t.classHierarchy.push("vtkMapper2D"),e.createDefaultLookupTable=()=>{t.lookupTable=mr.Ay.newInstance()},e.getColorModeAsString=()=>X.m.enumToString(hr,t.colorMode),e.setColorModeToDefault=()=>e.setColorMode(0),e.setColorModeToMapScalars=()=>e.setColorMode(1),e.setColorModeToDirectScalars=()=>e.setColorMode(2),e.getScalarModeAsString=()=>X.m.enumToString(br,t.scalarMode),e.setScalarModeToDefault=()=>e.setScalarMode(0),e.setScalarModeToUsePointData=()=>e.setScalarMode(1),e.setScalarModeToUseCellData=()=>e.setScalarMode(2),e.setScalarModeToUsePointFieldData=()=>e.setScalarMode(3),e.setScalarModeToUseCellFieldData=()=>e.setScalarMode(4),e.setScalarModeToUseFieldData=()=>e.setScalarMode(5),e.getAbstractScalars=(e,r,n,a,o)=>{if(!e||!t.scalarVisibility)return{scalars:null,cellFLag:!1};let i=null,s=!1;if(r===br.DEFAULT)i=e.getPointData().getScalars(),i||(i=e.getCellData().getScalars(),s=!0);else if(r===br.USE_POINT_DATA)i=e.getPointData().getScalars();else if(r===br.USE_CELL_DATA)i=e.getCellData().getScalars(),s=!0;else if(r===br.USE_POINT_FIELD_DATA){const t=e.getPointData();i=n===yr.BY_ID?t.getArrayByIndex(a):t.getArrayByName(o)}else if(r===br.USE_CELL_FIELD_DATA){const t=e.getCellData();s=!0,i=n===yr.BY_ID?t.getArrayByIndex(a):t.getArrayByName(o)}else if(r===br.USE_FIELD_DATA){const t=e.getFieldData();i=n===yr.BY_ID?t.getArrayByIndex(a):t.getArrayByName(o)}return{scalars:i,cellFlag:s}},e.getLookupTable=()=>(t.lookupTable||e.createDefaultLookupTable(),t.lookupTable),e.getMTime=()=>{let e=t.mtime;if(null!==t.lookupTable){const r=t.lookupTable.getMTime();e=r>e?r:e}return e},e.mapScalars=(r,n)=>{const a=e.getAbstractScalars(r,t.scalarMode,t.arrayAccessMode,t.arrayId,t.colorByArrayName).scalars;if(!a)return void(t.colorMapColors=null);const o=`${e.getMTime()}${a.getMTime()}${n}`;if(t.colorBuildString===o)return;t.useLookupTableScalarRange||e.getLookupTable().setRange(t.scalarRange[0],t.scalarRange[1]);const i=e.getLookupTable();i&&(i.build(),t.colorMapColors=i.mapScalars(a,t.colorMode,t.fieldDataTupleId)),t.colorBuildString=`${e.getMTime()}${a.getMTime()}${n}`},e.getPrimitiveCount=()=>{const t=e.getInputData();return{points:t.getPoints().getNumberOfValues()/3,verts:t.getVerts().getNumberOfValues()-t.getVerts().getNumberOfCells(),lines:t.getLines().getNumberOfValues()-2*t.getLines().getNumberOfCells(),triangles:t.getPolys().getNumberOfValues()-3*t.getPolys().getNumberOfCells()}}}(e,t)}var Tr={newInstance:X.m.newInstance(xr,"vtkMapper2D"),extend:xr},Ar=r(9424),Sr=r(1544),Cr=r(3463);const Pr={BACKGROUND:0,FOREGROUND:1};var Ir={DisplayLocation:Pr};const{primTypes:wr}=gr.Ay,{ScalarMode:Or}=Tr,{vtkErrorMacro:Dr}=X.c,Mr={type:"StartEvent"},Br={type:"EndEvent"};const Vr={context:null,VBOBuildTime:0,VBOBuildString:null,primitives:null,primTypes:null,shaderRebuildString:null};function kr(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Vr,r),sr.A.extend(e,t,r),Sr.A.implementReplaceShaderCoincidentOffset(e,t,r),Sr.A.implementBuildShadersWithReplacements(e,t,r),t.primitives=[],t.primTypes=wr,t.tmpMat4=Q.identity(new Float64Array(16));for(let e=wr.Start;e<wr.End;e++)t.primitives[e]=gr.Ay.newInstance(),t.primitives[e].setPrimitiveType(e),t.primitives[e].set({lastLightComplexity:0,lastLightCount:0,lastSelectionPass:!1},!0);(0,X.e)(e,t,["context"]),t.VBOBuildTime={},(0,X.o)(t.VBOBuildTime,{mtime:0}),function(e,t){t.classHierarchy.push("vtkOpenGLPolyDataMapper2D"),e.buildPass=r=>{r&&(t.openGLActor2D=e.getFirstAncestorOfType("vtkOpenGLActor2D"),t._openGLRenderer=t.openGLActor2D.getFirstAncestorOfType("vtkOpenGLRenderer"),t._openGLRenderWindow=t._openGLRenderer.getLastAncestorOfType("vtkOpenGLRenderWindow"),t.openGLCamera=t._openGLRenderer.getViewNodeFor(t._openGLRenderer.getRenderable().getActiveCamera()))},e.overlayPass=t=>{t&&e.render()},e.getShaderTemplate=(e,t,r)=>{e.Vertex="//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkPolyData2DVS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n\n// all variables that represent positions or directions have a suffix\n// indicating the coordinate system they are in. The possible values are\n// MC - Model Coordinates\n// WC - WC world coordinates\n// VC - View Coordinates\n// DC - Display Coordinates\n\nin vec4 vertexWC;\n\n// frag position in VC\n//VTK::PositionVC::Dec\n\n// material property values\n//VTK::Color::Dec\n\n// Texture coordinates\n//VTK::TCoord::Dec\n\n// Apple Bug\n//VTK::PrimID::Dec\n\nuniform mat4 WCVCMatrix;  // World to view matrix\n\nvoid main()\n{\n  // Apple Bug\n  //VTK::PrimID::Impl\n\n  gl_Position = WCVCMatrix*vertexWC;\n\n  //VTK::TCoord::Impl\n\n  //VTK::Color::Impl\n\n  //VTK::PositionVC::Impl\n}\n",e.Fragment="//VTK::System::Dec\n\n/*=========================================================================\n\n  Program:   Visualization Toolkit\n  Module:    vtkPolyData2DFS.glsl\n\n  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n  All rights reserved.\n  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n     This software is distributed WITHOUT ANY WARRANTY; without even\n     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n     PURPOSE.  See the above copyright notice for more information.\n\n=========================================================================*/\n\nuniform int PrimitiveIDOffset;\n\n// Texture coordinates\n//VTK::TCoord::Dec\n\n// Scalar coloring\n//VTK::Color::Dec\n\n// Depth Peeling\n//VTK::DepthPeeling::Dec\n\n// picking support\n//VTK::Picking::Dec\n\n// the output of this shader\n//VTK::Output::Dec\n\n// Apple Bug\n//VTK::PrimID::Dec\n\nvoid main()\n{\n  // Apple Bug\n  //VTK::PrimID::Impl\n\n  //VTK::Color::Impl\n  //VTK::TCoord::Impl\n\n  //VTK::DepthPeeling::Impl\n  //VTK::Picking::Impl\n\n  if (gl_FragData[0].a <= 0.0)\n    {\n    discard;\n    }\n}\n",e.Geometry=""},e.render=()=>{const r=t._openGLRenderWindow.getContext();if(t.context!==r){t.context=r;for(let e=wr.Start;e<wr.End;e++)t.primitives[e].setOpenGLRenderWindow(t._openGLRenderWindow)}const n=t.openGLActor2D.getRenderable(),a=t._openGLRenderer.getRenderable();e.renderPiece(a,n)},e.renderPiece=(r,n)=>{e.invokeEvent(Mr),t.renderable.getStatic()||t.renderable.update(),t.currentInput=t.renderable.getInputData(),e.invokeEvent(Br),t.currentInput?t.currentInput.getPoints&&t.currentInput.getPoints().getNumberOfValues()&&(e.renderPieceStart(r,n),e.renderPieceDraw(r,n),e.renderPieceFinish(r,n)):Dr("No input!")},e.renderPieceStart=(r,n)=>{t.primitiveIDOffset=0,t._openGLRenderer.getSelector()&&(t._openGLRenderer.getSelector().getCurrentPass(),t._openGLRenderer.getSelector().renderProp(n)),e.updateBufferObjects(r,n),t.lastBoundBO=null},e.getNeedToRebuildShaders=(e,r,n)=>e.getShaderSourceTime().getMTime()<t.renderable.getMTime()||e.getShaderSourceTime().getMTime()<t.currentInput.getMTime(),e.updateBufferObjects=(t,r)=>{e.getNeedToRebuildBufferObjects(t,r)&&e.buildBufferObjects(t,r)},e.getNeedToRebuildBufferObjects=(r,n)=>{const a=t.VBOBuildTime.getMTime();return!!(a<e.getMTime()||a<t._openGLRenderWindow.getMTime()||a<t.renderable.getMTime()||a<n.getMTime()||a<t.currentInput.getMTime()||t.renderable.getTransformCoordinate()&&a<r.getMTime())},e.buildBufferObjects=(e,r)=>{const n=t.currentInput;if(null===n)return;t.renderable.mapScalars(n,r.getProperty().getOpacity());const a=t.renderable.getColorMapColors();t.haveCellScalars=!1;const o=t.renderable.getScalarMode();t.renderable.getScalarVisibility()&&(o!==Or.USE_CELL_DATA&&o!==Or.USE_CELL_FIELD_DATA&&o!==Or.USE_FIELD_DATA&&n.getPointData().getScalars()||o===Or.USE_POINT_FIELD_DATA||!a||(t.haveCellScalars=!0));const i=r.getProperty().getRepresentation();let s=n.getPointData().getTCoords();t.openGLActor2D.getActiveTextures()||(s=null);const l=t.renderable.getTransformCoordinate(),c=e.getRenderWindow().getViews()[0].getViewportSize(e),u=`${n.getMTime()}A${i}B${n.getMTime()}C${a?a.getMTime():1}D${s?s.getMTime():1}E${l?e.getMTime():1}F${c}`;if(t.VBOBuildString!==u){let r=n.getPoints();if(l){const t=Ar.Ay.newInstance(),n=r.getNumberOfPoints();t.setNumberOfPoints(n);const a=[];for(let o=0;o<n;++o){r.getPoint(o,a),l.setValue(a);const n=l.getComputedDoubleViewportValue(e);t.setPoint(o,n[0],n[1],0)}r=t}const o={points:r,tcoords:s,colors:a,cellOffset:0,haveCellScalars:t.haveCellSCalars,customAttributes:t.renderable.getCustomShaderAttributes().map((e=>n.getPointData().getArrayByName(e)))};o.cellOffset+=t.primitives[wr.Points].getCABO().createVBO(n.getVerts(),"verts",i,o),o.cellOffset+=t.primitives[wr.Lines].getCABO().createVBO(n.getLines(),"lines",i,o),o.cellOffset+=t.primitives[wr.Tris].getCABO().createVBO(n.getPolys(),"polys",i,o),o.cellOffset+=t.primitives[wr.TriStrips].getCABO().createVBO(n.getStrips(),"strips",i,o),t.VBOBuildTime.modified(),t.VBOBuildString=u}},e.renderPieceDraw=(r,n)=>{const a=n.getProperty().getRepresentation();t.context.depthMask(!0);for(let o=wr.Start;o<wr.End;o++)t.primitives[o].getCABO().getElementCount()&&(t.lastBoundBO=t.primitives[o],t.primitiveIDOffset+=t.primitives[o].drawArrays(r,n,a,e))},e.renderPieceFinish=(e,r)=>{t.lastBoundBO&&t.lastBoundBO.getVAO().release()},e.replaceShaderValues=(t,r,n)=>{e.replaceShaderColor(t,r,n),e.replaceShaderTCoord(t,r,n),e.replaceShaderPicking(t,r,n),e.replaceShaderPositionVC(t,r,n)},e.replaceShaderColor=(e,r,n)=>{let a=e.Vertex,o=e.Geometry,i=e.Fragment;t.haveCellScalars&&(i=Cr.A.substitute(i,"//VTK::Color::Dec",["uniform samplerBuffer texture1;"]).result,i=Cr.A.substitute(i,"//VTK::Color::Impl",["gl_FragData[0] = texelFetchBuffer(texture1, gl_PrimitiveID + PrimitiveIDOffset);"]).result),0!==t.lastBoundBO.getCABO().getColorComponents()?(a=Cr.A.substitute(a,"//VTK::Color::Dec",["in vec4 diffuseColor;","out vec4 fcolorVSOutput;"]).result,a=Cr.A.substitute(a,"//VTK::Color::Impl",["fcolorVSOutput = diffuseColor;"]).result,o=Cr.A.substitute(o,"//VTK::Color::Dec",["in vec4 fcolorVSOutput[];\n","out vec4 fcolorGSOutput;"]).result,o=Cr.A.substitute(o,"//VTK::Color::Impl",["fcolorGSOutput = fcolorVSOutput[i];"]).result,i=Cr.A.substitute(i,"//VTK::Color::Dec",["in vec4 fcolorVSOutput;"]).result,i=Cr.A.substitute(i,"//VTK::Color::Impl",["gl_FragData[0] = fcolorVSOutput;"]).result):(i=Cr.A.substitute(i,"//VTK::Color::Dec",["uniform vec4 diffuseColor;"]).result,i=Cr.A.substitute(i,"//VTK::Color::Impl",["gl_FragData[0] = diffuseColor;"]).result),e.Vertex=a,e.Geometry=o,e.Fragment=i},e.replaceShaderTCoord=(e,r,n)=>{if(t.lastBoundBO.getCABO().getTCoordOffset()){let r=e.Vertex,n=e.Geometry,a=e.Fragment;const o=t.lastBoundBO.getCABO().getTCoordComponents();1===o?(r=Cr.A.substitute(r,"//VTK::TCoord::Dec",["in float tcoordMC;","out float tcoordVCVSOutput;"]).result,r=Cr.A.substitute(r,"//VTK::TCoord::Impl",["tcoordVCVSOutput = tcoordMC;"]).result,n=Cr.A.substitute(n,"//VTK::TCoord::Dec",["in float tcoordVCVSOutput[];\n","out float tcoordVCGSOutput;"]).result,n=Cr.A.substitute(n,["//VTK::TCoord::Impl","tcoordVCGSOutput = tcoordVCVSOutput[i];"]).result,a=Cr.A.substitute(a,"//VTK::TCoord::Dec",["in float tcoordVCVSOutput;","uniform sampler2D texture1;"]).result,a=Cr.A.substitute(a,"//VTK::TCoord::Impl",["gl_FragData[0] = gl_FragData[0]*texture2D(texture1, vec2(tcoordVCVSOutput,0));"]).result):2===o&&(r=Cr.A.substitute(r,"//VTK::TCoord::Dec",["in vec2 tcoordMC;","out vec2 tcoordVCVSOutput;"]).result,r=Cr.A.substitute(r,"//VTK::TCoord::Impl",["tcoordVCVSOutput = tcoordMC;"]).result,n=Cr.A.substitute(n,"//VTK::TCoord::Dec",["in vec2 tcoordVCVSOutput[];\n","out vec2 tcoordVCGSOutput;"]).result,n=Cr.A.substitute(n,"//VTK::TCoord::Impl",["tcoordVCGSOutput = tcoordVCVSOutput[i];"]).result,a=Cr.A.substitute(a,"//VTK::TCoord::Dec",["in vec2 tcoordVCVSOutput;","uniform sampler2D texture1;"]).result,a=Cr.A.substitute(a,"//VTK::TCoord::Impl",["gl_FragData[0] = gl_FragData[0]*texture2D(texture1, tcoordVCVSOutput.st);"]).result),t.haveCellScalars&&(n=Cr.A.substitute(n,"//VTK::PrimID::Impl",["gl_PrimitiveID = gl_PrimitiveIDIn;"]).result),e.Vertex=r,e.Geometry=n,e.Fragment=a}},e.replaceShaderPicking=(e,t,r)=>{let n=e.Fragment;n=Cr.A.substitute(n,"//VTK::Picking::Dec",["uniform vec3 mapperIndex;","uniform int picking;"]).result,n=Cr.A.substitute(n,"//VTK::Picking::Impl","  gl_FragData[0] = picking != 0 ? vec4(mapperIndex,1.0) : gl_FragData[0];").result,e.Fragment=n},e.replaceShaderPositionVC=(e,r,n)=>{t.lastBoundBO.replaceShaderPositionVC(e,r,n)},e.invokeShaderCallbacks=(e,r,n)=>{const a=t.renderable.getViewSpecificProperties().ShadersCallbacks;a&&a.forEach((t=>{t.callback(t.userData,e,r,n)}))},e.setMapperShaderParameters=(e,r,n)=>{if(e.getProgram().isUniformUsed("PrimitiveIDOffset")&&e.getProgram().setUniformi("PrimitiveIDOffset",t.primitiveIDOffset),e.getProgram().isAttributeUsed("vertexWC")&&(e.getVAO().addAttributeArray(e.getProgram(),e.getCABO(),"vertexWC",e.getCABO().getVertexOffset(),e.getCABO().getStride(),t.context.FLOAT,3,!1)||Dr("Error setting vertexWC in shader VAO.")),e.getCABO().getElementCount()&&(t.VBOBuildTime.getMTime()>e.getAttributeUpdateTime().getMTime()||e.getShaderSourceTime().getMTime()>e.getAttributeUpdateTime().getMTime())){t.renderable.getCustomShaderAttributes().forEach(((r,n)=>{e.getProgram().isAttributeUsed(`${r}MC`)&&(e.getVAO().addAttributeArray(e.getProgram(),e.getCABO(),`${r}MC`,e.getCABO().getCustomData()[n].offset,e.getCABO().getStride(),t.context.FLOAT,e.getCABO().getCustomData()[n].components,!1)||Dr(`Error setting ${r}MC in shader VAO.`))})),e.getProgram().isAttributeUsed("tcoordMC")&&e.getCABO().getTCoordOffset()?e.getVAO().addAttributeArray(e.getProgram(),e.getCABO(),"tcoordMC",e.getCABO().getTCoordOffset(),e.getCABO().getStride(),t.context.FLOAT,e.getCABO().getTCoordComponents(),!1)||Dr("Error setting tcoordMC in shader VAO."):e.getVAO().removeAttributeArray("tcoordMC"),t.internalColorTexture&&e.getProgram().isUniformUsed("texture1")&&e.getProgram().setUniformi("texture1",t.internalColorTexture.getTextureUnit());const a=t.openGLActor2D.getActiveTextures();if(a)for(let t=0;t<a.length;++t){const r=a[t].getTextureUnit(),n=`texture${r+1}`;e.getProgram().isUniformUsed(n)&&e.getProgram().setUniformi(n,r)}e.setMapperShaderParameters(r,n,t._openGLRenderer.getTiledSizeAndOrigin());const o=t._openGLRenderer.getSelector();e.getProgram().setUniform3fArray("mapperIndex",o?o.getPropColorValue():[0,0,0]),e.getProgram().setUniformi("picking",o?o.getCurrentPass()+1:0)}},e.setPropertyShaderParameters=(e,r,n)=>{const a=t.renderable.getColorMapColors();if(!a||0===a.getNumberOfComponents()){const t=e.getProgram(),r=n.getProperty(),a=r.getOpacity(),o=r.getColor(),i=[o[0],o[1],o[2],a];t.setUniform4f("diffuseColor",i)}},e.setLightingShaderParameters=(e,t,r)=>{},e.setCameraShaderParameters=(e,r,n)=>{const a=e.getProgram(),o=e.getCABO().getCoordShiftAndScaleEnabled()?e.getCABO().getInverseShiftAndScaleMatrix():null,i=r.getRenderWindow().getViews()[0].getViewportSize(r),s=r.getViewport(),l=n.getActualPositionCoordinate().getComputedDoubleViewportValue(r),c=[0,0,1,1],u=[0,0,1,1];if(u[0]=s[0]>=c[0]?s[0]:c[0],u[1]=s[1]>=c[1]?s[1]:c[1],u[2]=s[2]<=c[2]?s[2]:c[2],u[3]=s[3]<=c[3]?s[3]:c[3],u[0]>=u[2])return;if(u[1]>=u[3])return;i[0]=(0,Lt.P)(i[0]*(u[2]-u[0])/(s[2]-s[0])),i[1]=(0,Lt.P)(i[1]*(u[3]-u[1])/(s[3]-s[1]));const d=t._openGLRenderer.getParent().getSize(),g=(0,Lt.P)(l[0]-(u[0]-s[0])*d[0]),p=(0,Lt.P)(l[1]-(u[1]-s[1])*d[1]),m=-g;let f=-g+i[0];const h=-p;let b=-p+i[1];m===f&&(f=m+1),h===b&&(b=h+1);const y=Q.identity(new Float64Array(16));var v,x,T;y[0]=2/(f-m),y[5]=2/(b-h),y[3]=-1*(f+m)/(f-m),y[7]=-1*(b+h)/(b-h),y[10]=0,y[11]=n.getProperty().getDisplayLocation()===Pr.FOREGROUND?-1:1,y[15]=1,Q.transpose(y,y),a.setUniformMatrix("WCVCMatrix",(v=[y,o],x=Q,T=t.tmpMat4,x.identity(T),v.reduce(((e,t,r)=>0===r?t?x.copy(e,t):x.identity(e):t?x.multiply(e,e,t):e),T)))},e.getAllocatedGPUMemoryInBytes=()=>{let e=0;return t.primitives.forEach((t=>{e+=t.getAllocatedGPUMemoryInBytes()})),e}}(e,t)}const Lr=(0,X.n)(kr,"vtkOpenGLPolyDataMapper2D");(0,lr.c9)("vtkMapper2D",Lr);var Rr=r(9347);const{VectorMode:Nr}=Rr.Ay;function Ur(e,t){e.strokeStyle=t.strokeColor,e.lineWidth=t.strokeSize,e.fillStyle=t.fontColor,e.font=`${t.fontStyle} ${t.fontSize}px ${t.fontFamily}`}function Gr(e,t){return e=>{const r=e.getLastSize(),n=(r[0]/700)**.8,a=(r[1]/700)**.8,o=Math.min(n,a),i=e.getAxisTextStyle(),s=e.getTickTextStyle();Object.assign(i,t.axisTextStyle),Object.assign(s,t.tickTextStyle),i.fontSize=Math.max(24*o,12),e.getLastAspectRatio()>1?s.fontSize=Math.max(20*o,10):s.fontSize=Math.max(16*o,10);const l=e.updateTextureAtlas();e.setTopTitle(!1);const c=e.getBoxSizeByReference();if(e.getLastAspectRatio()>1)e.setTickLabelPixelOffset(.3*s.fontSize),l.titleWidth<=l.tickWidth+e.getTickLabelPixelOffset()+.8*s.fontSize?(e.setTopTitle(!0),e.setAxisTitlePixelOffset(.2*s.fontSize),c[0]=2*(l.tickWidth+e.getTickLabelPixelOffset()+.8*s.fontSize)/r[0],e.setBoxPosition([.98-c[0],-.92])):(e.setAxisTitlePixelOffset(.2*s.fontSize),c[0]=2*(l.titleHeight+e.getAxisTitlePixelOffset()+l.tickWidth+e.getTickLabelPixelOffset()+.8*s.fontSize)/r[0],e.setBoxPosition([.99-c[0],-.92])),c[1]=Math.max(1.2,Math.min(1.84/a,1.84));else{e.setAxisTitlePixelOffset(1.2*s.fontSize),e.setTickLabelPixelOffset(.1*s.fontSize);const t=2*(.8*s.fontSize+l.titleHeight+e.getAxisTitlePixelOffset())/r[1],n=2*l.tickWidth/r[0];c[0]=Math.min(1.9,Math.max(1.4,1.4*n*(e.getTicks().length+3))),c[1]=t,e.setBoxPosition([-.5*c[0],-.97])}e.recomputeBarSegments(l)}}function Er(e,t){return e=>{const t=e.getLastTickBounds(),r=kt().domain([t[0],t[1]]),n=r.ticks(5),a=r.tickFormat(5);e.setTicks(n),e.setTickStrings(n.map(a))}}const _r=X.m.newInstance((function(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{renderable:null};Object.assign(t,{},r),X.m.obj(e,t),X.m.setGet(e,t,["axisTitlePixelOffset","tickLabelPixelOffset","renderable","topTitle","ticks","tickStrings"]),X.m.get(e,t,["lastSize","lastAspectRatio","lastTickBounds","axisTextStyle","tickTextStyle","barActor","tmActor"]),X.m.getArray(e,t,["boxPosition","boxSize"]),X.m.setArray(e,t,["boxPosition","boxSize"],2),t.forceUpdate=!1,t.lastRebuildTime={},X.m.obj(t.lastRebuildTime,{mtime:0}),t.lastSize=[-1,-1],t.tmCanvas=document.createElement("canvas"),t.tmContext=t.tmCanvas.getContext("2d"),t._tmAtlas=new Map,t.barMapper=Gt.Ay.newInstance(),t.barMapper.setInterpolateScalarsBeforeMapping(!0),t.barMapper.setUseLookupTableScalarRange(!0),t.polyData=Et.Ay.newInstance(),t.barMapper.setInputData(t.polyData),t.barActor=Rt.Ay.newInstance(),t.barActor.setMapper(t.barMapper),t.tmPolyData=Et.Ay.newInstance(),t.tmMapper=Gt.Ay.newInstance(),t.tmMapper.setInputData(t.tmPolyData),t.tmTexture=Wt.newInstance({resizable:!0}),t.tmTexture.setInterpolate(!1),t.tmActor=Rt.Ay.newInstance({parentProp:e}),t.tmActor.setMapper(t.tmMapper),t.tmActor.addTexture(t.tmTexture),t.barPosition=[0,0],t.barSize=[0,0],t.boxPosition=[.88,-.92],t.boxSize=[.1,1.1],t.lastTickBounds=[],function(e,t){t.classHierarchy.push("vtkScalarBarActorHelper"),e.setRenderable=r=>{t.renderable!==r&&(t.renderable=r,t.barActor.setProperty(r.getProperty()),t.barActor.setParentProp(r),t.barActor.setCoordinateSystemToDisplay(),t.tmActor.setProperty(r.getProperty()),t.tmActor.setParentProp(r),t.tmActor.setCoordinateSystemToDisplay(),t.generateTicks=r.generateTicks,t.axisTextStyle={...r.getAxisTextStyle()},t.tickTextStyle={...r.getTickTextStyle()},e.modified())},e.updateAPISpecificData=(r,n,a)=>{t.lastSize[0]===r[0]&&t.lastSize[1]===r[1]||(t.lastSize[0]=r[0],t.lastSize[1]=r[1],t.lastAspectRatio=r[0]/r[1],t.forceUpdate=!0);const o=t.renderable.getScalarsToColors();if(o&&t.renderable.getVisibility()&&(t.barMapper.setLookupTable(o),t.camera=n,t.renderWindow=a,t.forceUpdate||Math.max(o.getMTime(),e.getMTime(),t.renderable.getMTime())>t.lastRebuildTime.getMTime())){const r=o.getMappingRange();if(t.lastTickBounds=[...r],t.renderable.getGenerateTicks()(e),t.renderable.getAutomated())t.renderable.getAutoLayout()(e);else{t.axisTextStyle={...t.renderable.getAxisTextStyle()},t.tickTextStyle={...t.renderable.getTickTextStyle()},t.barPosition=[...t.renderable.getBarPosition()],t.barSize=[...t.renderable.getBarSize()],t.boxPosition=[...t.renderable.getBoxPosition()],t.boxSize=[...t.renderable.getBoxSize()],t.axisTitlePixelOffset=t.renderable.getAxisTitlePixelOffset(),t.tickLabelPixelOffset=t.renderable.getTickLabelPixelOffset();const r=e.updateTextureAtlas();e.recomputeBarSegments(r)}e.updatePolyDataForLabels(),e.updatePolyDataForBarSegments(),t.lastRebuildTime.modified(),t.forceUpdate=!1}},e.updateTextureAtlas=()=>{t.tmContext.textBaseline="bottom",t.tmContext.textAlign="left";const r={},n=new Map;let a=0,o=1;Ur(t.tmContext,t.axisTextStyle);let i=t.tmContext.measureText(t.renderable.getAxisLabel()),s={height:i.actualBoundingBoxAscent+2,startingHeight:o,width:i.width+2,textStyle:t.axisTextStyle};n.set(t.renderable.getAxisLabel(),s),o+=s.height,a=s.width,r.titleWidth=s.width,r.titleHeight=s.height,r.tickWidth=0,r.tickHeight=0,Ur(t.tmContext,t.tickTextStyle);const l=[...e.getTickStrings(),"NaN","Below","Above"];for(let e=0;e<l.length;e++)n.has(l[e])||(i=t.tmContext.measureText(l[e]),s={height:i.actualBoundingBoxAscent+2,startingHeight:o,width:i.width+2,textStyle:t.tickTextStyle},n.set(l[e],s),o+=s.height,a<s.width&&(a=s.width),r.tickWidth<s.width&&(r.tickWidth=s.width),r.tickHeight<s.height&&(r.tickHeight=s.height));return a=(0,Lt.R)(a),o=(0,Lt.R)(o),n.forEach((e=>{e.tcoords=[0,(o-e.startingHeight-e.height)/o,e.width/a,(o-e.startingHeight-e.height)/o,e.width/a,(o-e.startingHeight)/o,0,(o-e.startingHeight)/o]})),t.tmCanvas.width=a,t.tmCanvas.height=o,t.tmContext.textBaseline="bottom",t.tmContext.textAlign="left",t.tmContext.clearRect(0,0,a,o),n.forEach(((e,r)=>{Ur(t.tmContext,e.textStyle),t.tmContext.fillText(r,1,e.startingHeight+e.height-1)})),t.tmTexture.setCanvas(t.tmCanvas),t.tmTexture.modified(),t._tmAtlas=n,r},e.computeBarSize=e=>{t.vertical=t.boxSize[1]>t.boxSize[0];const r=2*e.tickHeight/t.lastSize[1],n=[1,1];if(t.vertical){const a=2*(e.tickWidth+t.tickLabelPixelOffset)/t.lastSize[0];if(t.topTitle){const r=2*(e.titleHeight+t.axisTitlePixelOffset)/t.lastSize[1];t.barSize[0]=t.boxSize[0]-a,t.barSize[1]=t.boxSize[1]-r}else{const r=2*(e.titleHeight+t.axisTitlePixelOffset)/t.lastSize[0];t.barSize[0]=t.boxSize[0]-r-a,t.barSize[1]=t.boxSize[1]}t.barPosition[0]=t.boxPosition[0]+a,t.barPosition[1]=t.boxPosition[1],n[1]=r}else{const r=(2*e.tickWidth-8)/t.lastSize[0],a=2*(e.titleHeight+t.axisTitlePixelOffset)/t.lastSize[1];t.barSize[0]=t.boxSize[0],t.barPosition[0]=t.boxPosition[0],t.barSize[1]=t.boxSize[1]-a,t.barPosition[1]=t.boxPosition[1],n[0]=r}return n},e.recomputeBarSegments=r=>{const n=e.computeBarSize(r);t.barSegments=[];const a=[0,0],o=t.vertical?1:0,i=t.vertical?.01:.02;function s(e,r){t.barSegments.push({corners:[[...a],[a[0]+n[0],a[1]],[a[0]+n[0],a[1]+n[1]],[a[0],a[1]+n[1]]],scalars:r,title:e}),a[o]+=n[o]+i}t.renderable.getDrawNanAnnotation()&&t.renderable.getScalarsToColors().getNanColor()&&s("NaN",[NaN,NaN,NaN,NaN]),t.renderable.getDrawBelowRangeSwatch()&&t.renderable.getScalarsToColors().getUseBelowRangeColor?.()&&s("Below",[-.1,-.1,-.1,-.1]);const l=t.renderable.getScalarsToColors().getUseAboveRangeColor?.();a[o]+=i;const c=n[o];n[o]=l?1-2*i-n[o]-a[o]:1-i-a[o],s("ticks",t.vertical?[0,0,.995,.995]:[0,.995,.995,0]),t.renderable.getDrawAboveRangeSwatch()&&l&&(n[o]=c,a[o]+=i,s("Above",[1.1,1.1,1.1,1.1]))};const r=new Float64Array(3);e.createPolyDataForOneLabel=(e,n,a,o,i,s)=>{const l=t._tmAtlas.get(e);if(!l)return;let c=s.ptIdx,u=s.cellIdx;r[0]=(.5*n[0]+.5)*t.lastSize[0],r[1]=(.5*n[1]+.5)*t.lastSize[1],r[2]=n[2],r[0]+=i[0],r[1]+=i[1];const d=[],g="vertical"===o?[1,0]:[0,1];"vertical"===o?(d[0]=l.width,d[1]=-l.height,"middle"===a[0]?r[1]-=l.width/2:"right"===a[0]&&(r[1]-=l.width),"middle"===a[1]?r[0]+=l.height/2:"top"===a[1]&&(r[0]+=l.height)):(d[0]=l.width,d[1]=l.height,"middle"===a[0]?r[0]-=l.width/2:"right"===a[0]&&(r[0]-=l.width),"middle"===a[1]?r[1]-=l.height/2:"top"===a[1]&&(r[1]-=l.height)),s.points[3*c]=r[0],s.points[3*c+1]=r[1],s.points[3*c+2]=r[2],s.tcoords[2*c]=l.tcoords[0],s.tcoords[2*c+1]=l.tcoords[1],c++,r[g[0]]+=d[0],s.points[3*c]=r[0],s.points[3*c+1]=r[1],s.points[3*c+2]=r[2],s.tcoords[2*c]=l.tcoords[2],s.tcoords[2*c+1]=l.tcoords[3],c++,r[g[1]]+=d[1],s.points[3*c]=r[0],s.points[3*c+1]=r[1],s.points[3*c+2]=r[2],s.tcoords[2*c]=l.tcoords[4],s.tcoords[2*c+1]=l.tcoords[5],c++,r[g[0]]-=d[0],s.points[3*c]=r[0],s.points[3*c+1]=r[1],s.points[3*c+2]=r[2],s.tcoords[2*c]=l.tcoords[6],s.tcoords[2*c+1]=l.tcoords[7],c++,s.polys[4*u]=3,s.polys[4*u+1]=c-4,s.polys[4*u+2]=c-3,s.polys[4*u+3]=c-2,u++,s.polys[4*u]=3,s.polys[4*u+1]=c-4,s.polys[4*u+2]=c-2,s.polys[4*u+3]=c-1,s.ptIdx+=4,s.cellIdx+=2};const n=new Float64Array(3);e.updatePolyDataForLabels=()=>{const r=e.getTickStrings().length+t.barSegments.length,a=4*r,o=2*r,i=new Float64Array(3*a),s=new Uint16Array(4*o),l=new Float32Array(2*a),c={ptIdx:0,cellIdx:0,polys:s,points:i,tcoords:l},u=t.vertical?0:1,d=t.vertical?1:0;n[2]=-.99;const g=t.vertical?["right","middle"]:["middle","bottom"];let p=[0,1];const m=[0,0];t.vertical?(m[0]=-t.tickLabelPixelOffset,t.topTitle?(n[0]=t.boxPosition[0]+.5*t.boxSize[0],n[1]=t.barPosition[1]+t.barSize[1],e.createPolyDataForOneLabel(t.renderable.getAxisLabel(),n,["middle","bottom"],"horizontal",[0,t.axisTitlePixelOffset],c)):(n[0]=t.barPosition[0]+t.barSize[0],n[1]=t.barPosition[1]+.5*t.barSize[1],e.createPolyDataForOneLabel(t.renderable.getAxisLabel(),n,["middle","top"],"vertical",[t.axisTitlePixelOffset,0],c)),p=[-1,0]):(m[1]=t.tickLabelPixelOffset,n[0]=t.barPosition[0]+.5*t.barSize[0],n[1]=t.barPosition[1]+t.barSize[1],e.createPolyDataForOneLabel(t.renderable.getAxisLabel(),n,["middle","bottom"],"horizontal",[0,t.axisTitlePixelOffset],c)),n[u]=t.barPosition[u]+(.5*p[u]+.5)*t.barSize[u],n[d]=t.barPosition[d]+.5*t.barSize[d];let f=null;for(let r=0;r<t.barSegments.length;r++){const a=t.barSegments[r];"ticks"===a.title?f=a:(n[d]=t.barPosition[d]+.5*t.barSize[d]*(a.corners[2][d]+a.corners[0][d]),e.createPolyDataForOneLabel(a.title,n,g,"horizontal",m,c))}const h=t.barPosition[d]+t.barSize[d]*f.corners[0][d],b=t.barSize[d]*(f.corners[2][d]-f.corners[0][d]),y=e.getTicks(),v=e.getTickStrings();for(let r=0;r<y.length;r++){const a=(y[r]-t.lastTickBounds[0])/(t.lastTickBounds[1]-t.lastTickBounds[0]);n[d]=h+b*a,e.createPolyDataForOneLabel(v[r],n,g,"horizontal",m,c)}const x=Ut.Ay.newInstance({numberOfComponents:2,values:l,name:"TextureCoordinates"});t.tmPolyData.getPointData().setTCoords(x),t.tmPolyData.getPoints().setData(i,3),t.tmPolyData.getPoints().modified(),t.tmPolyData.getPolys().setData(s,1),t.tmPolyData.getPolys().modified(),t.tmPolyData.modified()},e.updatePolyDataForBarSegments=()=>{const e=t.renderable.getScalarsToColors();let r=0;t.renderable.getDrawNanAnnotation()&&e.getNanColor()&&(r+=1),t.renderable.getDrawBelowRangeSwatch()&&e.getUseBelowRangeColor?.()&&(r+=1),t.renderable.getDrawAboveRangeSwatch()&&e.getUseAboveRangeColor?.()&&(r+=1);const a=4*(1+r),o=a;let i=1;e.getVectorMode()===Nr.COMPONENT&&(i=e.getVectorComponent()+1);const s=new Float64Array(3*a),l=new Uint16Array(5*o),c=new Float32Array(a*i);let u=0,d=0;for(let e=0;e<t.barSegments.length;e++){const r=t.barSegments[e];for(let e=0;e<4;e++){n[0]=t.barPosition[0]+r.corners[e][0]*t.barSize[0],n[1]=t.barPosition[1]+r.corners[e][1]*t.barSize[1],s[3*u]=(.5*n[0]+.5)*t.lastSize[0],s[3*u+1]=(.5*n[1]+.5)*t.lastSize[1],s[3*u+2]=n[2];for(let n=0;n<i;n++)c[u*i+n]=t.lastTickBounds[0]+r.scalars[e]*(t.lastTickBounds[1]-t.lastTickBounds[0]);u++}l[5*d]=4,l[5*d+1]=u-4,l[5*d+2]=u-3,l[5*d+3]=u-2,l[5*d+4]=u-1,d++}const g=Ut.Ay.newInstance({numberOfComponents:i,values:c,name:"Scalars"});t.polyData.getPointData().setScalars(g),t.polyData.getPoints().setData(s,3),t.polyData.getPoints().modified(),t.polyData.getPolys().setData(l,1),t.polyData.getPolys().modified(),t.polyData.modified()}}(e,t)}),"vtkScalarBarActorHelper");function zr(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,function(e){return{automated:!0,autoLayout:null,axisLabel:"Scalar Value",barPosition:[0,0],barSize:[0,0],boxPosition:[.88,-.92],boxSize:[.1,1.1],scalarToColors:null,axisTitlePixelOffset:36,axisTextStyle:{fontColor:"white",fontStyle:"normal",fontSize:18,fontFamily:"serif"},tickLabelPixelOffset:14,tickTextStyle:{fontColor:"white",fontStyle:"normal",fontSize:14,fontFamily:"serif"},generateTicks:null,drawNanAnnotation:!0,drawBelowRangeSwatch:!0,drawAboveRangeSwatch:!0,...e}}(r)),t.autoLayout||(t.autoLayout=Gr(0,t)),t.generateTicks||(t.generateTicks=Er()),Rt.Ay.extend(e,t,r),e.getProperty().setDiffuse(0),e.getProperty().setAmbient(1),X.m.setGet(e,t,["automated","autoLayout","axisTitlePixelOffset","axisLabel","scalarsToColors","tickLabelPixelOffset","generateTicks","drawNanAnnotation","drawBelowRangeSwatch","drawAboveRangeSwatch"]),X.m.get(e,t,["axisTextStyle","tickTextStyle"]),X.m.getArray(e,t,["barPosition","barSize","boxPosition","boxSize"]),X.m.setArray(e,t,["barPosition","barSize","boxPosition","boxSize"],2),function(e,t){t.classHierarchy.push("vtkScalarBarActor"),e.setTickTextStyle=r=>{t.tickTextStyle={...t.tickTextStyle,...r},e.modified()},e.setAxisTextStyle=r=>{t.axisTextStyle={...t.axisTextStyle,...r},e.modified()},e.resetAutoLayoutToDefault=()=>{e.setAutoLayout(Gr(0,t))},e.resetGenerateTicksToDefault=()=>{e.setGenerateTicks(Er())}}(e,t)}var Fr={newInstance:X.m.newInstance(zr,"vtkScalarBarActor"),extend:zr,newScalarBarActorHelper:_r};const Wr={};function Hr(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Wr,r),sr.A.extend(e,t,r),t.scalarBarActorHelper=Fr.newScalarBarActorHelper(),function(e,t){t.classHierarchy.push("vtkOpenGLScalarBarActor"),e.buildPass=r=>{r&&(t._openGLRenderer=e.getFirstAncestorOfType("vtkOpenGLRenderer"),t._openGLRenderWindow=t._openGLRenderer.getParent(),t.scalarBarActorHelper.getRenderable()||t.scalarBarActorHelper.setRenderable(t.renderable),e.prepareNodes(),e.addMissingNode(t.scalarBarActorHelper.getBarActor()),e.addMissingNode(t.scalarBarActorHelper.getTmActor()),e.removeUnusedNodes())},e.opaquePass=(e,r)=>{if(e){const e=t._openGLRenderer?t._openGLRenderer.getRenderable().getActiveCamera():null,r=t._openGLRenderer.getTiledSizeAndOrigin();t.scalarBarActorHelper.updateAPISpecificData([r.usize,r.vsize],e,t._openGLRenderWindow.getRenderable())}}}(e,t)}const $r=(0,X.n)(Hr,"vtkOpenGLScalarBarActor");(0,lr.c9)("vtkScalarBarActor",$r);r(7200),r(8960),r(7618),r(8772),r(9372);var Kr=r(2707),jr=r(6874);const{CoordinateSystem:qr}=Kr.Ay;const Yr={keyMatricesTime:null,keyMatrices:null,propID:void 0,bufferShift:void 0};function Xr(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Yr,r),sr.A.extend(e,t,r),t.keyMatricesTime={},X.m.obj(t.keyMatricesTime,{mtime:0}),t.keyMatrices={normalMatrix:new Float64Array(16),bcwc:new Float64Array(16),bcsc:new Float64Array(16)},X.m.get(e,t,["propID","keyMatricesTime"]),t.bufferShift=[0,0,0,0],function(e,t){t.classHierarchy.push("vtkWebGPUActor"),e.buildPass=r=>{r&&(t.WebGPURenderer=e.getFirstAncestorOfType("vtkWebGPURenderer"),t.WebGPURenderWindow=t.WebGPURenderer.getFirstAncestorOfType("vtkWebGPURenderWindow"),void 0===t.propID&&(t.propID=t.WebGPURenderWindow.getUniquePropID()),e.prepareNodes(),e.addMissingNode(t.renderable.getMapper()),e.removeUnusedNodes())},e.traverseOpaquePass=r=>{t.renderable&&t.renderable.getNestedVisibility()&&t.renderable.getIsOpaque()&&(!t.WebGPURenderer.getSelector()||t.renderable.getNestedPickable())&&(e.apply(r,!0),t.children[0]&&t.children[0].traverse(r),e.apply(r,!1))},e.traverseTranslucentPass=r=>{!t.renderable||!t.renderable.getNestedVisibility()||t.renderable.getIsOpaque()||t.WebGPURenderer.getSelector()&&!t.renderable.getNestedPickable()||(e.apply(r,!0),t.children[0]&&t.children[0].traverse(r),e.apply(r,!1))},e.queryPass=(e,r)=>{if(e){if(!t.renderable||!t.renderable.getVisibility())return;t.renderable.getIsOpaque()?r.incrementOpaqueActorCount():r.incrementTranslucentActorCount()}},e.getBufferShift=r=>(e.getKeyMatrices(r),t.bufferShift),e.getKeyMatrices=e=>{if(Math.max(t.renderable.getMTime(),e.getStabilizedTime())>t.keyMatricesTime.getMTime()){t.renderable.computeMatrix();const r=t.renderable.getMatrix();t.bufferShift[0]=r[3],t.bufferShift[1]=r[7],t.bufferShift[2]=r[11];const n=e.getStabilizedCenterByReference();t.renderable.getCoordinateSystem()===qr.WORLD&&(t.bufferShift[0]-=n[0],t.bufferShift[1]-=n[1],t.bufferShift[2]-=n[2]),Q.transpose(t.keyMatrices.bcwc,r),t.renderable.getIsIdentity()?Q.identity(t.keyMatrices.normalMatrix):(Q.copy(t.keyMatrices.normalMatrix,t.keyMatrices.bcwc),t.keyMatrices.normalMatrix[3]=0,t.keyMatrices.normalMatrix[7]=0,t.keyMatrices.normalMatrix[11]=0,Q.invert(t.keyMatrices.normalMatrix,t.keyMatrices.normalMatrix),Q.transpose(t.keyMatrices.normalMatrix,t.keyMatrices.normalMatrix)),Q.translate(t.keyMatrices.bcwc,t.keyMatrices.bcwc,[-t.bufferShift[0],-t.bufferShift[1],-t.bufferShift[2]]),t.renderable.getCoordinateSystem()===qr.WORLD?Q.translate(t.keyMatrices.bcsc,t.keyMatrices.bcwc,[-n[0],-n[1],-n[2]]):Q.copy(t.keyMatrices.bcsc,t.keyMatrices.bcwc),t.keyMatricesTime.modified()}return t.keyMatrices}}(e,t)}const Zr=X.m.newInstance(Xr);(0,jr.c9)("vtkActor",Zr);const{CoordinateSystem:Qr}=Kr.Ay;const Jr={keyMatricesTime:null,keyMatrices:null,propID:void 0,bufferShift:void 0};function en(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Jr,r),sr.A.extend(e,t,r),t.keyMatricesTime={},X.m.obj(t.keyMatricesTime,{mtime:0}),t.keyMatrices={normalMatrix:new Float64Array(16),bcwc:new Float64Array(16),bcsc:new Float64Array(16)},X.m.get(e,t,["propID","keyMatricesTime"]),t.bufferShift=[0,0,0,0],function(e,t){t.classHierarchy.push("vtkWebGPUActor2D"),e.buildPass=r=>{r&&(t.WebGPURenderer=e.getFirstAncestorOfType("vtkWebGPURenderer"),t.WebGPURenderWindow=t.WebGPURenderer.getFirstAncestorOfType("vtkWebGPURenderWindow"),void 0===t.propID&&(t.propID=t.WebGPURenderWindow.getUniquePropID()),e.prepareNodes(),e.addMissingNode(t.renderable.getMapper()),e.removeUnusedNodes())},e.traverseOpaquePass=r=>{t.renderable&&t.renderable.getNestedVisibility()&&t.renderable.getIsOpaque()&&(!t.WebGPURenderer.getSelector()||t.renderable.getNestedPickable())&&(e.apply(r,!0),t.children[0]&&t.children[0].traverse(r),e.apply(r,!1))},e.traverseTranslucentPass=r=>{!t.renderable||!t.renderable.getNestedVisibility()||t.renderable.getIsOpaque()||t.WebGPURenderer.getSelector()&&!t.renderable.getNestedPickable()||(e.apply(r,!0),t.children[0]&&t.children[0].traverse(r),e.apply(r,!1))},e.queryPass=(e,r)=>{if(e){if(!t.renderable||!t.renderable.getVisibility())return;t.renderable.getIsOpaque()?r.incrementOpaqueActorCount():r.incrementTranslucentActorCount()}},e.getBufferShift=r=>(e.getKeyMatrices(r),t.bufferShift),e.getKeyMatrices=e=>{if(Math.max(t.renderable.getMTime(),e.getStabilizedTime())>t.keyMatricesTime.getMTime()){t.bufferShift[0]=0,t.bufferShift[1]=0,t.bufferShift[2]=0;const r=e.getStabilizedCenterByReference();t.renderable.getCoordinateSystem()===Qr.WORLD&&(t.bufferShift[0]-=r[0],t.bufferShift[1]-=r[1],t.bufferShift[2]-=r[2]),Q.identity(t.keyMatrices.bcwc),Q.identity(t.keyMatrices.normalMatrix),Q.translate(t.keyMatrices.bcwc,t.keyMatrices.bcwc,[-t.bufferShift[0],-t.bufferShift[1],-t.bufferShift[2]]),t.renderable.getCoordinateSystem()===Qr.WORLD?Q.translate(t.keyMatrices.bcsc,t.keyMatrices.bcwc,[-r[0],-r[1],-r[2]]):Q.copy(t.keyMatrices.bcsc,t.keyMatrices.bcwc),t.keyMatricesTime.modified()}return t.keyMatrices}}(e,t)}const tn=X.m.newInstance(en);(0,jr.c9)("vtkActor2D",tn);const rn={};function nn(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,rn,r),sr.A.extend(e,t,r),t.CubeAxesActorHelper=ir.newCubeAxesActorHelper(),function(e,t){t.classHierarchy.push("vtkWebGPUCubeAxesActor"),e.buildPass=r=>{r&&(t.WebGPURenderer=e.getFirstAncestorOfType("vtkWebGPURenderer"),t.WebGPURenderWindow=t.WebGPURenderer.getParent(),t.CubeAxesActorHelper.getRenderable()||t.CubeAxesActorHelper.setRenderable(t.renderable),e.prepareNodes(),e.addMissingNode(t.CubeAxesActorHelper.getTmActor()),e.addMissingNode(t.renderable.getGridActor()),e.removeUnusedNodes())},e.opaquePass=(e,r)=>{if(e){const e=t.WebGPURenderer?t.WebGPURenderer.getRenderable().getActiveCamera():null,r=t.WebGPURenderer.getTiledSizeAndOrigin();t.CubeAxesActorHelper.updateAPISpecificData([r.usize,r.vsize],e,t.WebGPURenderWindow.getRenderable())}}}(e,t)}const an=(0,X.n)(nn,"vtkWebGPUCubeAxesActor");(0,jr.c9)("vtkCubeAxesActor",an);var on=r(8197),sn=r(1409),ln=r(2987),cn=r(2169);const{DisplayLocation:un}=Ir;const dn={color:[1,1,1],opacity:1,pointSize:1,lineWidth:1,representation:cn.YL.SURFACE,displayLocation:un.FOREGROUND};function gn(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,dn,r),X.m.obj(e,t),X.m.setGet(e,t,["opacity","lineWidth","pointSize","displayLocation","representation"]),X.m.setGetArray(e,t,["color"],3),function(e,t){t.classHierarchy.push("vtkProperty2D"),e.setDisplayLocationToBackground=()=>e.setDisplayLocation(un.BACKGROUND),e.setDisplayLocationToForeground=()=>e.setDisplayLocation(un.FOREGROUND),e.setRepresentationToWireframe=()=>e.setRepresentation(cn.YL.WIREFRAME),e.setRepresentationToSurface=()=>e.setRepresentation(cn.YL.SURFACE),e.setRepresentationToPoints=()=>e.setRepresentation(cn.YL.POINTS),e.getRepresentationAsString=()=>X.m.enumToString(cn.YL,t.representation)}(e,t)}var pn={newInstance:X.m.newInstance(gn,"vtkProperty2D"),extend:gn,...Ir},mn=r(1032),fn=r(9098),hn=r(1697),bn=r(4858);const{BufferUsage:yn,PrimitiveTypes:vn}=on.Ay,{Representation:xn}=ln.Ay,{ScalarMode:Tn}=Gt.Ay,{CoordinateSystem:An}=Kr.Ay,{DisplayLocation:Sn}=pn;function Cn(e){return e.indexOf("edge")>=0}const Pn={is2D:!1,cellArray:null,currentInput:null,cellOffset:0,primitiveType:0,colorTexture:null,renderEncoder:null,textures:null};function In(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Pn,r),hn.Ay.extend(e,t,r),t.fragmentShaderTemplate='\nstruct PBRData {\n  diffuse: vec3<f32>,\n  specular: vec3<f32>,\n}\n\n// Dot product with the max already in it\nfn mdot(a: vec3<f32>, b: vec3<f32>) -> f32 {\n  return max(0.0, dot(a, b));\n}\n// Dot product with a max in it that does not allow for negative values\n// Physically based rendering is accurate as long as normals are accurate,\n// however this is pretty often not the case. In order to prevent negative\n// values from ruining light calculations and creating zones of zero light,\n// this remapping is used, which smoothly clamps the dot product between\n// zero and one while still maintaining a good amount of accuracy.\nfn cdot(a: vec3<f32>, b: vec3<f32>) -> f32 {\n  var d: f32 = max(0.0, dot(a, b));\n  d = pow((d + 1.0) / 2.0, 2.6);\n  return d;\n}\n\n// Lambertian diffuse model\nfn lambertDiffuse(base: vec3<f32>, N: vec3<f32>, L: vec3<f32>) -> vec3<f32> {\n  var pi: f32 = 3.14159265359; \n  var NdotL: f32 = mdot(N, L);\n  NdotL = pow(NdotL, 1.5);\n  return (base/pi)*NdotL;\n}\n\n// Yasuhiro Fujii improvement on the Oren-Nayar model\n// https://mimosa-pudica.net/improved-oren-nayar.html\n// p is surface color, o is roughness\nfn fujiiOrenNayar(p: vec3<f32>, o: f32, N: vec3<f32>, L: vec3<f32>, V: vec3<f32>) -> vec3<f32> {\n  var invpi: f32 = 0.31830988618; // 1/pi\n\n  var o2 = o*o;\n  var NdotL: f32 = mdot(N, L);\n  NdotL = pow(NdotL, 1.5); // Less physically accurate, but hides the "seams" between lights better\n\n  var NdotV: f32 = mdot(N, V);\n  var LdotV: f32 = mdot(L, V);\n\n  var s: f32 = LdotV - NdotL*NdotV;\n  var t: f32 = mix(1.0, max(NdotL, NdotV), step(0.0, s)); // Mix with step is the equivalent of an if statement\n  var A: vec3<f32> = 0.5*(o2 / (o2 + 0.33)) + 0.17*p*(o2 / (o2 + 0.13));\n  A = invpi*(1 - A);\n  var B: f32 = 0.45*(o2 / (o2 + 0.09));\n  B = invpi*B;\n\n  return p*NdotL*(A + B*(s/t));\n}\n\n// Fresnel portion of BRDF (IOR only, simplified)\nfn schlickFresnelIOR(V: vec3<f32>, N: vec3<f32>, ior: f32, k: f32) -> f32 {\n  var NdotV: f32 = mdot(V, N);\n  var F0: f32 = (pow((ior - 1.0), 2.0) + k*k) / (pow((ior + 1.0), 2.0) + k*k); // This takes into account the roughness, which the other one does not\n  return F0 + (1.0 - F0) * pow((1.0-NdotV), 5.0);\n}\n\n// Fresnel portion of BRDF (Color ior, better)\nfn schlickFresnelRGB(V: vec3<f32>, N: vec3<f32>, F0: vec3<f32>) -> vec3<f32> {\n  var NdotV: f32 = mdot(V, N);\n  return F0 + (1.0 - F0) * pow((1-NdotV), 5.0);\n}\n\n// Normal portion of BRDF\n// https://learnopengl.com/PBR/Theory\n// Trowbridge-Reitz GGX functions: normal, halfway, roughness^2\nfn trGGX(N: vec3<f32>, H: vec3<f32>, a: f32) -> f32 {\n  var pi: f32 = 3.14159265359; \n\n  var a2: f32 = a*a;\n  var NdotH = mdot(N, H);\n  var NdotH2 = NdotH*NdotH;\n  \n  var denom: f32 = NdotH2 * (a2 - 1.0) + 1.0;\n\n  return a2 / max((pi*denom*denom), 0.000001);\n}\n\n// A VERY bad approximation of anisotropy. Real anisotropic calculations require tangent and bitangent\nfn anisotrophicTrGGX(N: vec3<f32>, H: vec3<f32>, O: vec3<f32>, s: f32, a: f32) -> f32 {\n  var Op: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(O) * s, 0.)).xyz;\n\n  var ggx1: f32 = trGGX(N + Op*s, H, a);\n  var ggx2: f32 = trGGX(N - Op*s, H, a);\n  return (0.5 * ggx1 + 0.5 * ggx2);\n}\n\n// Geometry portion of BRDF\nfn schlickGGX(N: vec3<f32>, X: vec3<f32>, k: f32) -> f32 {\n  var NdotX = cdot(N, X);\n  return NdotX / max(0.000001, (NdotX*(1.0-k) + k));\n}\n\nfn smithSurfaceRoughness(N: vec3<f32>, V: vec3<f32>, L: vec3<f32>, k: f32) -> f32 {\n  var ggx1: f32 = min(1.0, schlickGGX(N, V, k));\n  var ggx2: f32 = min(1.0, schlickGGX(N, L, k));\n  return ggx1*ggx2;\n}\n\n// BRDF Combination\nfn cookTorrance(D: f32, F: f32, G: f32, N: vec3<f32>, V: vec3<f32>, L: vec3<f32>) -> f32 {\n  var num: f32 = D*F*G;\n  var denom: f32 = 4*cdot(V, N)*cdot(L, N);\n\n  return num / max(denom, 0.000001);\n}\n\n// Different lighting calculations for different light sources\nfn calcDirectionalLight(N: vec3<f32>, V: vec3<f32>, ior: f32, roughness: f32, metallic: f32, direction: vec3<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {  \n  var L: vec3<f32> = normalize(direction); // Light Vector\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\n\n  var alpha = roughness*roughness;\n  var k: f32 = alpha*alpha / 2;\n\n  var D: f32 = trGGX(N, H, alpha); // Distribution\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\n\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L); // Fresnel term is replaced with 1 because it is added later\n  var incoming: vec3<f32> = color;\n  var angle: f32 = mdot(L, N);\n  angle = pow(angle, 1.5);\n\n  var specular: vec3<f32> = brdf*incoming*angle;\n  // Oren-Nayar gives a clay-like effect when fully rough which some people may not want, so it might be better to give a separate\n  // control property for the diffuse vs specular roughness\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V); \n  // Stores the specular and diffuse separately to allow for finer post processing\n  var out = PBRData(diffuse, specular);\n  \n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\n}\n\n// TODO: find some way to reduce the number of arguments going in here\nfn calcPointLight(N: vec3<f32>, V: vec3<f32>, fragPos: vec3<f32>, ior: f32, roughness: f32, metallic: f32, position: vec3<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {\n  var L: vec3<f32> = normalize(position - fragPos); // Light Vector\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\n  var dist = distance(position, fragPos);\n\n  var alpha = roughness*roughness;\n  var k: f32 = alpha*alpha / 2.0; // could also be pow(alpha + 1.0, 2) / 8\n\n  var D: f32 = trGGX(N, H, alpha); // Distribution\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\n\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L);\n  var incoming: vec3<f32> = color * (1.0 / (dist*dist));\n  var angle: f32 = mdot(L, N);\n  angle = pow(angle, 1.5); // Smoothing factor makes it less accurate, but reduces ugly "seams" bewteen light sources\n\n  var specular: vec3<f32> = brdf*incoming*angle;\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V);\n\n  // Stores the specular and diffuse separately to allow for finer post processing\n  // Could also be done (propably more properly) with a struct\n  var out = PBRData(diffuse, specular);\n  \n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\n}\n\n// For a reason unknown to me, spheres dont seem to behave propperly with head-on spot lights\nfn calcSpotLight(N: vec3<f32>, V: vec3<f32>, fragPos: vec3<f32>, ior: f32, roughness: f32, metallic: f32, position: vec3<f32>, direction: vec3<f32>, cones: vec2<f32>, color: vec3<f32>, base: vec3<f32>) -> PBRData {\n  var L: vec3<f32> = normalize(position - fragPos);\n  var H: vec3<f32> = normalize(L + V); // Halfway Vector\n  var dist = distance(position, fragPos);\n\n  var alpha = roughness*roughness;\n  var k: f32 = alpha*alpha / 2.0; // could also be pow(alpha + 1.0, 2) / 8\n\n  var D: f32 = trGGX(N, H, alpha); // Distribution\n  // var F: f32 = schlickFresnelIOR(V, N, ior, k); // Fresnel\n  var G: f32 = smithSurfaceRoughness(N, V, L, k); // Geometry\n\n  var brdf: f32 = cookTorrance(D, 1.0, G, N, V, L);\n  \n  // Cones.x is the inner phi and cones.y is the outer phi\n  var theta: f32 = mdot(normalize(direction), L);\n  var epsilon: f32 = cones.x - cones.y;\n  var intensity: f32 = (theta - cones.y) / epsilon;\n  intensity = clamp(intensity, 0.0, 1.0);\n  intensity /= dist*dist;\n\n  var incoming: vec3<f32> = color * intensity;\n\n  var angle: f32 = mdot(L, N);\n  angle = pow(angle, 1.5); // Smoothing factor makes it less accurate, but reduces ugly "seams" bewteen light sources\n\n  var specular: vec3<f32> = brdf*incoming*angle;\n  var diffuse: vec3<f32> = incoming*fujiiOrenNayar(base, roughness, N, L, V);\n\n  // Stores the specular and diffuse separately to allow for finer post processing\n  // Could also be done (propably more properly) with a struct\n  var out = PBRData(diffuse, specular);\n  \n  return out; // Returns angle along with color of light so the final color can be multiplied by angle as well (creates black areas)\n}\n\n// Environment mapping stuff\n// Takes in a vector and converts it to an equivalent coordinate in a rectilinear texture. Should be replaced with cubemaps at some point\nfn vecToRectCoord(dir: vec3<f32>) -> vec2<f32> {\n  var tau: f32 = 6.28318530718;\n  var pi: f32 = 3.14159265359;\n  var out: vec2<f32> = vec2<f32>(0.0);\n\n  out.x = atan2(dir.z, dir.x) / tau;\n  out.x += 0.5;\n\n  var phix: f32 = length(vec2(dir.x, dir.z));\n  out.y = atan2(dir.y, phix) / pi + 0.5;\n\n  return out;\n}\n\n//VTK::Renderer::Dec\n\n//VTK::Color::Dec\n\n//VTK::TCoord::Dec\n\n// optional surface normal declaration\n//VTK::Normal::Dec\n\n//VTK::Select::Dec\n\n//VTK::RenderEncoder::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::IOStructs::Dec\n\n@fragment\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output : fragmentOutput;\n\n  // Temporary ambient, diffuse, and opacity\n  var ambientColor: vec4<f32> = mapperUBO.AmbientColor;\n  var diffuseColor: vec4<f32> = mapperUBO.DiffuseColor;\n  var opacity: f32 = mapperUBO.Opacity;\n\n  // This should be declared somewhere else\n  var _diffuseMap: vec4<f32> = vec4<f32>(1.0);\n  var _roughnessMap: vec4<f32> = vec4<f32>(1.0);\n  var _metallicMap: vec4<f32> = vec4<f32>(1.0);\n  var _normalMap: vec4<f32> = vec4<f32>(0.0, 0.0, 1.0, 0.0); // normal map was setting off the normal vector detection in fragment\n  var _ambientOcclusionMap: vec4<f32> = vec4<f32>(1.);\n  var _emissionMap: vec4<f32> = vec4<f32>(0.);\n\n  //VTK::Color::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Normal::Impl\n\n  var computedColor: vec4<f32> = vec4<f32>(diffuseColor.rgb, 1.0);\n\n  //VTK::Light::Impl\n\n  //VTK::Select::Impl\n\n  if (computedColor.a == 0.0) { discard; };\n\n  //VTK::Position::Impl\n\n  //VTK::RenderEncoder::Impl\n\n  return output;\n}\n',t.vertexShaderTemplate="\n//VTK::Renderer::Dec\n\n//VTK::Color::Dec\n\n//VTK::Normal::Dec\n\n//VTK::TCoord::Dec\n\n//VTK::Select::Dec\n\n//VTK::Mapper::Dec\n\n//VTK::IOStructs::Dec\n\n@vertex\nfn main(\n//VTK::IOStructs::Input\n)\n//VTK::IOStructs::Output\n{\n  var output : vertexOutput;\n\n  var vertex: vec4<f32> = vertexBC;\n\n  //VTK::Color::Impl\n\n  //VTK::Normal::Impl\n\n  //VTK::TCoord::Impl\n\n  //VTK::Select::Impl\n\n  //VTK::Position::Impl\n\n  return output;\n}\n",t._tmpMat3=sn.identity(new Float64Array(9)),t._tmpMat4=Q.identity(new Float64Array(16)),t.UBO=fn.Ay.newInstance({label:"mapperUBO"}),t.UBO.addEntry("BCWCMatrix","mat4x4<f32>"),t.UBO.addEntry("BCSCMatrix","mat4x4<f32>"),t.UBO.addEntry("MCWCNormals","mat4x4<f32>"),t.UBO.addEntry("AmbientColor","vec4<f32>"),t.UBO.addEntry("DiffuseColor","vec4<f32>"),t.UBO.addEntry("EdgeColor","vec4<f32>"),t.UBO.addEntry("SpecularColor","vec4<f32>"),t.UBO.addEntry("AmbientIntensity","f32"),t.UBO.addEntry("DiffuseIntensity","f32"),t.UBO.addEntry("Roughness","f32"),t.UBO.addEntry("Metallic","f32"),t.UBO.addEntry("Ambient","f32"),t.UBO.addEntry("Normal","f32"),t.UBO.addEntry("Emission","f32"),t.UBO.addEntry("NormalStrength","f32"),t.UBO.addEntry("BaseIOR","f32"),t.UBO.addEntry("SpecularIntensity","f32"),t.UBO.addEntry("LineWidth","f32"),t.UBO.addEntry("Opacity","f32"),t.UBO.addEntry("ZValue","f32"),t.UBO.addEntry("PropID","u32"),t.UBO.addEntry("ClipNear","f32"),t.UBO.addEntry("ClipFar","f32"),t.UBO.addEntry("Time","u32"),(0,X.e)(e,t,["cellArray","currentInput","cellOffset","is2D","primitiveType","renderEncoder"]),t.textures=[],function(e,t){t.classHierarchy.push("vtkWebGPUCellArrayMapper"),e.buildPass=r=>{r&&(t.is2D?(t.WebGPUActor=e.getFirstAncestorOfType("vtkWebGPUActor2D"),t.forceZValue=!0):(t.WebGPUActor=e.getFirstAncestorOfType("vtkWebGPUActor"),t.forceZValue=!1),t.coordinateSystem=t.WebGPUActor.getRenderable().getCoordinateSystem(),t.useRendererMatrix=t.coordinateSystem!==An.DISPLAY,t.WebGPURenderer=t.WebGPUActor.getFirstAncestorOfType("vtkWebGPURenderer"),t.WebGPURenderWindow=t.WebGPURenderer.getParent(),t.device=t.WebGPURenderWindow.getDevice())},e.translucentPass=r=>{r&&(e.prepareToDraw(t.WebGPURenderer.getRenderEncoder()),t.renderEncoder.registerDrawCallback(t.pipeline,e.draw))},e.opaquePass=r=>{r&&(e.prepareToDraw(t.WebGPURenderer.getRenderEncoder()),t.renderEncoder.registerDrawCallback(t.pipeline,e.draw))},e.updateUBO=()=>{const r=t.WebGPUActor.getRenderable().getProperty(),n=t.UBO.getSendTime();if(e.getMTime()>n||r.getMTime()>n||t.renderable.getMTime()>n){const e=t.WebGPUActor.getKeyMatrices(t.WebGPURenderer);if(t.UBO.setArray("BCWCMatrix",e.bcwc),t.UBO.setArray("BCSCMatrix",e.bcsc),t.UBO.setArray("MCWCNormals",e.normalMatrix),t.is2D){t.UBO.setValue("ZValue",t.WebGPUActor.getRenderable().getProperty().getDisplayLocation()===Sn.FOREGROUND?1:0);const e=r.getColorByReference();t.UBO.setValue("AmbientIntensity",1),t.UBO.setArray("DiffuseColor",[e[0],e[1],e[2],1]),t.UBO.setValue("DiffuseIntensity",0),t.UBO.setValue("SpecularIntensity",0)}else{let e=r.getAmbientColorByReference();t.UBO.setValue("AmbientIntensity",r.getAmbient()),t.UBO.setArray("AmbientColor",[e[0],e[1],e[2],1]),t.UBO.setValue("DiffuseIntensity",r.getDiffuse()),e=r.getDiffuseColorByReference(),t.UBO.setArray("DiffuseColor",[e[0],e[1],e[2],1]),t.UBO.setValue("Roughness",r.getRoughness()),t.UBO.setValue("BaseIOR",r.getBaseIOR()),t.UBO.setValue("Metallic",r.getMetallic()),t.UBO.setValue("NormalStrength",r.getNormalStrength()),t.UBO.setValue("Emission",r.getEmission()),t.UBO.setValue("SpecularIntensity",r.getSpecular()),e=r.getSpecularColorByReference(),t.UBO.setArray("SpecularColor",[e[0],e[1],e[2],1])}const n=r.getEdgeColorByReference?.();n&&t.UBO.setArray("EdgeColor",[n[0],n[1],n[2],1]),t.UBO.setValue("LineWidth",r.getLineWidth()),t.UBO.setValue("Opacity",r.getOpacity()),t.UBO.setValue("PropID",t.WebGPUActor.getPropID());const a=t.WebGPURenderWindow.getDevice();t.UBO.sendIfNeeded(a)}},e.haveWideLines=()=>{const e=t.WebGPUActor.getRenderable(),r=e.getProperty().getRepresentation();return!(e.getProperty().getLineWidth()<=1)&&t.primitiveType!==vn.Verts&&(t.primitiveType!==vn.Triangles&&t.primitiveType!==vn.TriangleStrips||r===xn.WIREFRAME)},e.replaceShaderPosition=(r,n,a)=>{const o=n.getShaderDescription("vertex");o.addBuiltinOutput("vec4<f32>","@builtin(position) Position"),o.hasOutput("vertexVC")||o.addOutput("vec4<f32>","vertexVC");let i=o.getCode();t.useRendererMatrix?(i=mn.Ay.substitute(i,"//VTK::Position::Impl",["    var pCoord: vec4<f32> = rendererUBO.SCPCMatrix*mapperUBO.BCSCMatrix*vertexBC;","    output.vertexVC = rendererUBO.SCVCMatrix * mapperUBO.BCSCMatrix * vec4<f32>(vertexBC.xyz, 1.0);","//VTK::Position::Impl"]).result,t.forceZValue&&(i=mn.Ay.substitute(i,"//VTK::Position::Impl",["pCoord = vec4<f32>(pCoord.xyz/pCoord.w, 1.0);","pCoord.z = mapperUBO.ZValue;","//VTK::Position::Impl"]).result)):(i=mn.Ay.substitute(i,"//VTK::Position::Impl",["    var pCoord: vec4<f32> = mapperUBO.BCSCMatrix*vertexBC;","    pCoord.x = 2.0* pCoord.x / rendererUBO.viewportSize.x - 1.0;","    pCoord.y = 2.0* pCoord.y / rendererUBO.viewportSize.y - 1.0;","    pCoord.z = 0.5 - 0.5 * pCoord.z;","//VTK::Position::Impl"]).result,t.forceZValue&&(i=mn.Ay.substitute(i,"//VTK::Position::Impl",["    pCoord.z = mapperUBO.ZValue;","//VTK::Position::Impl"]).result)),e.haveWideLines()&&(o.addBuiltinInput("u32","@builtin(instance_index) instanceIndex"),i=mn.Ay.substitute(i,"//VTK::Position::Impl",["    var tmpPos: vec4<f32> = pCoord;","    var numSteps: f32 = ceil(mapperUBO.LineWidth - 1.0);","    var offset: f32 = (mapperUBO.LineWidth - 1.0) * (f32(input.instanceIndex / 2u) - numSteps/2.0) / numSteps;","    var tmpPos2: vec3<f32> = tmpPos.xyz / tmpPos.w;","    tmpPos2.x = tmpPos2.x + 2.0 * (f32(input.instanceIndex) % 2.0) * offset / rendererUBO.viewportSize.x;","    tmpPos2.y = tmpPos2.y + 2.0 * (f32(input.instanceIndex + 1u) % 2.0) * offset / rendererUBO.viewportSize.y;","    tmpPos2.z = min(1.0, tmpPos2.z + 0.00001);","    pCoord = vec4<f32>(tmpPos2.xyz * tmpPos.w, tmpPos.w);","//VTK::Position::Impl"]).result),i=mn.Ay.substitute(i,"//VTK::Position::Impl",["    output.Position = pCoord;"]).result,o.setCode(i)},t.shaderReplacements.set("replaceShaderPosition",e.replaceShaderPosition),e.replaceShaderNormal=(e,r,n)=>{const a=n.getBuffer("normalMC"),o=t.WebGPUActor.getRenderable();if(a){const e=r.getShaderDescription("vertex");e.hasOutput("normalVC")||e.addOutput("vec3<f32>","normalVC",a.getArrayInformation()[0].interpolation),e.hasOutput("tangentVC")||e.addOutput("vec3<f32>","tangentVC",a.getArrayInformation()[0].interpolation),e.hasOutput("bitangentVC")||e.addOutput("vec3<f32>","bitangentVC",a.getArrayInformation()[0].interpolation);let t=e.getCode();t=mn.Ay.substitute(t,"//VTK::Normal::Impl",["  output.normalVC = normalize((rendererUBO.WCVCNormals * mapperUBO.MCWCNormals * normalMC).xyz);","  var c1: vec3<f32> = cross(output.normalVC, vec3<f32>(0, 0, 1));","  var c2: vec3<f32> = cross(output.normalVC, vec3<f32>(0, 1, 0));","  var tangent: vec3<f32> = mix(c1, c2, distance(c1, c2));","  output.tangentVC = normalize(tangent);","  output.bitangentVC = normalize(cross(output.normalVC, tangent));"]).result,e.setCode(t);const n=r.getShaderDescription("fragment");t=n.getCode(),t=o.getProperty().getNormalTexture()?mn.Ay.substitute(t,"//VTK::Normal::Impl",["  var normal: vec3<f32> = input.normalVC;","  if (!input.frontFacing) { normal = -normal; }","  var tangent: vec3<f32> = input.tangentVC;","  var bitangent: vec3<f32> = input.bitangentVC;","  var TCVCMatrix: mat3x3<f32> = mat3x3<f32>(","    tangent.x, bitangent.x, normal.x,","    tangent.y, bitangent.y, normal.y,","    tangent.z, bitangent.z, normal.z,","  );","  var mappedNormal: vec3<f32> = TCVCMatrix * (_normalMap.xyz * 2 - 1);","  normal = mix(normal, mappedNormal, mapperUBO.NormalStrength);","  normal = normalize(normal);"]).result:mn.Ay.substitute(t,"//VTK::Normal::Impl",["  var normal: vec3<f32> = input.normalVC;","  if (!input.frontFacing) { normal = -normal; }","  normal = normalize(normal);"]).result,n.setCode(t)}},t.shaderReplacements.set("replaceShaderNormal",e.replaceShaderNormal),e.replaceShaderLight=(e,r,n)=>{if(e.includes("sel"))return;const a=r.getShaderDescription("vertex");a.hasOutput("vertexVC")||a.addOutput("vec4<f32>","vertexVC");const o=t.WebGPURenderer.getRenderable(),i=r.getShaderDescription("fragment");let s=i.getCode();if(!s.includes("var normal:")||!t.useRendererMatrix||Cn(e)||t.is2D||e.includes("sel"))s=mn.Ay.substitute(s,"//VTK::Light::Impl",["  var diffuse: vec3<f32> = diffuseColor.rgb;","  var specular: vec3<f32> = mapperUBO.SpecularColor.rgb * mapperUBO.SpecularColor.a;","  computedColor = vec4<f32>(diffuse * _diffuseMap.rgb, mapperUBO.Opacity);"]).result,i.setCode(s);else{const e=["  var pi: f32 = 3.14159265359;","  var fragPos: vec3<f32> = vec3<f32>(input.vertexVC.xyz);","  var V: vec3<f32> = mix(normalize(-fragPos), vec3<f32>(0, 0, 1), f32(rendererUBO.cameraParallel)); // View Vector","  var baseColor: vec3<f32> = _diffuseMap.rgb * diffuseColor.rgb;","  var roughness: f32 = max(0.000001, mapperUBO.Roughness * _roughnessMap.r);","  var metallic: f32 = mapperUBO.Metallic * _metallicMap.r;","  var alpha: f32 = roughness*roughness;","  var ior: f32 = mapperUBO.BaseIOR;","  var k: f32 = alpha*alpha / 2;","  var diffuse: vec3<f32> = vec3<f32>(0.);","  var specular: vec3<f32> = vec3<f32>(0.);","  var emission: vec3<f32> = _emissionMap.rgb * mapperUBO.Emission;","  {","    var i: i32 = 0;","    loop {","      if !(i < rendererUBO.LightCount) { break; }","      switch (i32(rendererLightSSBO.values[i].LightData.x)) {","         // Point Light","         case 0 {","           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;","           var pos: vec3<f32> = (rendererLightSSBO.values[i].LightPos).xyz;","           var calculated: PBRData = calcPointLight(normal, V, fragPos, ior, roughness, metallic, pos, color, baseColor);","           diffuse += max(vec3<f32>(0), calculated.diffuse);","           specular += max(vec3<f32>(0), calculated.specular);","          }","         // Directional light","         case 1 {","           var dir: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(rendererLightSSBO.values[i].LightDir.xyz), 0.)).xyz;","           dir = normalize(dir);","           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;","           var calculated: PBRData = calcDirectionalLight(normal, V, ior, roughness, metallic, dir, color, baseColor); // diffuseColor.rgb needs to be fixed with a more dynamic diffuse color","           diffuse += max(vec3<f32>(0), calculated.diffuse);","           specular += max(vec3<f32>(0), calculated.specular);","         }","         // Spot Light","         case 2 {","           var color: vec3<f32> = rendererLightSSBO.values[i].LightColor.rgb * rendererLightSSBO.values[i].LightColor.w;","           var pos: vec3<f32> = (rendererLightSSBO.values[i].LightPos).xyz;","           var dir: vec3<f32> = (rendererUBO.WCVCNormals * vec4<f32>(normalize(rendererLightSSBO.values[i].LightDir.xyz), 0.)).xyz;","           dir = normalize(dir);","           var cones: vec2<f32> = vec2<f32>(rendererLightSSBO.values[i].LightData.y, rendererLightSSBO.values[i].LightData.z);","           var calculated: PBRData = calcSpotLight(normal, V, fragPos, ior, roughness, metallic, pos, dir, cones, color, baseColor);","           diffuse += max(vec3<f32>(0), calculated.diffuse);","           specular += max(vec3<f32>(0), calculated.specular);","         }","         default { continue; }","       }","      continuing { i++; }","    }","  }","  var fresnel: f32 = schlickFresnelIOR(V, normal, ior, k); // Fresnel","  fresnel = min(1.0, fresnel);","  // This could be controlled with its own variable (that isnt base color) for better artistic control","  var fresnelMetallic: vec3<f32> = schlickFresnelRGB(V, normal, baseColor); // Fresnel for metal, takes color into account","  var kS: vec3<f32> = mix(vec3<f32>(fresnel), fresnelMetallic, metallic);","  kS = min(vec3<f32>(1.0), kS);","  var kD: vec3<f32> = (1.0 - kS) * (1.0 - metallic);","  var PBR: vec3<f32> = mapperUBO.DiffuseIntensity*kD*diffuse + kS*specular;","  PBR += emission;","  computedColor = vec4<f32>(PBR, mapperUBO.Opacity);"];o.getEnvironmentTexture()?.getImageLoaded()&&e.push("  // To get diffuse IBL, the texture is sampled with normals in worldspace","  var diffuseIBLCoords: vec3<f32> = (transpose(rendererUBO.WCVCNormals) * vec4<f32>(normal, 1.)).xyz;","  var diffuseCoords: vec2<f32> = vecToRectCoord(diffuseIBLCoords);","  // To get specular IBL, the texture is sampled as the worldspace reflection between the normal and view vectors","  // Reflections are first calculated in viewspace, then converted to worldspace to sample the environment","  var VreflN: vec3<f32> = normalize(reflect(-V, normal));","  var reflectionIBLCoords = (transpose(rendererUBO.WCVCNormals) * vec4<f32>(VreflN, 1.)).xyz;","  var specularCoords: vec2<f32> = vecToRectCoord(reflectionIBLCoords);","  var diffuseIBL = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, diffuseCoords, rendererUBO.MaxEnvironmentMipLevel);","  var level = roughness * rendererUBO.MaxEnvironmentMipLevel;","  var specularIBL = textureSampleLevel(EnvironmentTexture, EnvironmentTextureSampler, specularCoords, level);","  var specularIBLContribution: vec3<f32> = specularIBL.rgb*rendererUBO.BackgroundSpecularStrength;","  computedColor += vec4<f32>(specularIBLContribution*kS, 0);","  var diffuseIBLContribution: vec3<f32> = diffuseIBL.rgb*rendererUBO.BackgroundDiffuseStrength;","  diffuseIBLContribution *= baseColor * _ambientOcclusionMap.rgb;","  computedColor += vec4<f32>(diffuseIBLContribution*kD, 0);"),s=mn.Ay.substitute(s,"//VTK::Light::Impl",e).result,i.setCode(s)}},t.shaderReplacements.set("replaceShaderLight",e.replaceShaderLight),e.replaceShaderColor=(e,t,r)=>{if(Cn(e)){const e=t.getShaderDescription("fragment");let r=e.getCode();return r=mn.Ay.substitute(r,"//VTK::Color::Impl",["ambientColor = mapperUBO.EdgeColor;","diffuseColor = mapperUBO.EdgeColor;"]).result,void e.setCode(r)}const n=r.getBuffer("colorVI");if(!n)return;const a=t.getShaderDescription("vertex");a.addOutput("vec4<f32>","color",n.getArrayInformation()[0].interpolation);let o=a.getCode();o=mn.Ay.substitute(o,"//VTK::Color::Impl",["  output.color = colorVI;"]).result,a.setCode(o);const i=t.getShaderDescription("fragment");o=i.getCode(),o=mn.Ay.substitute(o,"//VTK::Color::Impl",["ambientColor = input.color;","diffuseColor = input.color;","opacity = mapperUBO.Opacity * input.color.a;"]).result,i.setCode(o)},t.shaderReplacements.set("replaceShaderColor",e.replaceShaderColor),e.replaceShaderTCoord=(e,r,n)=>{if(!n.hasAttribute("tcoord"))return;const a=r.getShaderDescription("vertex"),o=n.getBuffer("tcoord"),i=bn.A.getNumberOfComponentsFromBufferFormat(o.getArrayInformation()[0].format);let s=a.getCode();a.addOutput(`vec${i}<f32>`,"tcoordVS"),s=mn.Ay.substitute(s,"//VTK::TCoord::Impl",["  output.tcoordVS = tcoord;"]).result,a.setCode(s);const l=r.getShaderDescription("fragment");s=l.getCode();const c=t.WebGPUActor.getRenderable(),u=e=>!!e&&e.getDimensionality()===i,d=[];(c.getProperty().getDiffuseTexture?.()?.getImageLoaded()||c.getTextures()[0]||t.colorTexture)&&(u(c.getProperty().getDiffuseTexture?.())||u(c.getTextures()[0])||u(t.colorTexture))&&d.push("_diffuseMap = textureSample(DiffuseTexture, DiffuseTextureSampler, input.tcoordVS);"),c.getProperty().getRoughnessTexture?.()?.getImageLoaded()&&u(c.getProperty().getRoughnessTexture())&&d.push("_roughnessMap = textureSample(RoughnessTexture, RoughnessTextureSampler, input.tcoordVS);"),c.getProperty().getMetallicTexture?.()?.getImageLoaded()&&u(c.getProperty().getMetallicTexture())&&d.push("_metallicMap = textureSample(MetallicTexture, MetallicTextureSampler, input.tcoordVS);"),c.getProperty().getNormalTexture?.()?.getImageLoaded()&&u(c.getProperty().getNormalTexture())&&d.push("_normalMap = textureSample(NormalTexture, NormalTextureSampler, input.tcoordVS);"),c.getProperty().getAmbientOcclusionTexture?.()?.getImageLoaded()&&u(c.getProperty().getAmbientOcclusionTexture())&&d.push("_ambientOcclusionMap = textureSample(AmbientOcclusionTexture, AmbientOcclusionTextureSampler, input.tcoordVS);"),c.getProperty().getEmissionTexture?.()?.getImageLoaded()&&u(c.getProperty().getEmissionTexture())&&d.push("_emissionMap = textureSample(EmissionTexture, EmissionTextureSampler, input.tcoordVS);"),s=mn.Ay.substitute(s,"//VTK::TCoord::Impl",d).result,l.setCode(s)},t.shaderReplacements.set("replaceShaderTCoord",e.replaceShaderTCoord),e.replaceShaderSelect=(e,t,r)=>{if(e.includes("sel")){const e=t.getShaderDescription("fragment");let r=e.getCode();r=mn.Ay.substitute(r,"//VTK::Select::Impl",["  var compositeID: u32 = 0u;"]).result,e.setCode(r)}},t.shaderReplacements.set("replaceShaderSelect",e.replaceShaderSelect),e.getUsage=(e,t)=>e===xn.POINTS||t===vn.Points?yn.Verts:t===vn.Lines?yn.Lines:e===xn.WIREFRAME?t===vn.Triangles?yn.LinesFromTriangles:yn.LinesFromStrips:t===vn.Triangles?yn.Triangles:t===vn.TriangleStrips?yn.Strips:t===vn.TriangleEdges?yn.LinesFromTriangles:yn.LinesFromStrips,e.getHashFromUsage=e=>`pt${e}`,e.getTopologyFromUsage=e=>{switch(e){case yn.Triangles:return"triangle-list";case yn.Verts:return"point-list";case yn.Lines:default:return"line-list"}},e.buildVertexInput=()=>{const r=t.currentInput,n=t.cellArray,a=t.primitiveType;let o=t.WebGPUActor.getRenderable().getProperty().getRepresentation();const i=t.WebGPURenderWindow.getDevice();let s=!1;a===vn.TriangleEdges&&(s=!0,o=xn.WIREFRAME);const l=t.vertexInput,c=r.getPoints();let u;if(n){const e={hash:`R${o}P${a}${n.getMTime()}`,usage:yn.Index,cells:n,numberOfPoints:c.getNumberOfPoints(),primitiveType:a,representation:o};u=i.getBufferManager().getBuffer(e),l.setIndexBuffer(u)}else l.setIndexBuffer(null);if(c){const e=t.WebGPUActor.getBufferShift(t.WebGPURenderer),r={hash:`${c.getMTime()}I${u.getMTime()}${e.join()}float32x4`,usage:yn.PointArray,format:"float32x4",dataArray:c,indexBuffer:u,shift:e,packExtra:!0},n=i.getBufferManager().getBuffer(r);l.addBuffer(n,["vertexBC"])}else l.removeBufferIfPresent("vertexBC");const d=e.getUsage(o,a);if(t._usesCellNormals=!1,t.is2D||d!==yn.Triangles&&d!==yn.Strips)l.removeBufferIfPresent("normalMC");else{const e=r.getPointData().getNormals(),o={format:"snorm8x4",indexBuffer:u,packExtra:!0,shift:0,scale:127};if(e){o.hash=`${e.getMTime()}I${u.getMTime()}snorm8x4`,o.dataArray=e,o.usage=yn.PointArray;const t=i.getBufferManager().getBuffer(o);l.addBuffer(t,["normalMC"])}else if(a===vn.Triangles){t._usesCellNormals=!0,o.hash=`PFN${c.getMTime()}I${u.getMTime()}snorm8x4`,o.dataArray=c,o.cells=n,o.usage=yn.NormalsFromPoints;const e=i.getBufferManager().getBuffer(o);l.addBuffer(e,["normalMC"])}else l.removeBufferIfPresent("normalMC")}let g=!1;if(t.renderable.getScalarVisibility()){const e=t.renderable.getColorMapColors();if(e&&!s){const n=t.renderable.getScalarMode();let a=!1;n!==Tn.USE_CELL_DATA&&n!==Tn.USE_CELL_FIELD_DATA&&n!==Tn.USE_FIELD_DATA&&r.getPointData().getScalars()||n===Tn.USE_POINT_FIELD_DATA||!e||(a=!0);const o={usage:yn.PointArray,format:"unorm8x4",hash:`${a}${e.getMTime()}I${u.getMTime()}unorm8x4`,dataArray:e,indexBuffer:u,cellData:a,cellOffset:0},s=i.getBufferManager().getBuffer(o);l.addBuffer(s,["colorVI"]),g=!0}}g||l.removeBufferIfPresent("colorVI");let p=null;if(p=t.renderable.getInterpolateScalarsBeforeMapping?.()&&t.renderable.getColorCoordinates()?t.renderable.getColorCoordinates():r.getPointData().getTCoords(),p&&!s){const e=i.getBufferManager().getBufferForPointArray(p,l.getIndexBuffer());l.addBuffer(e,["tcoord"])}else l.removeBufferIfPresent("tcoord")},e.updateTextures=()=>{const e=[],r=[],n=t.renderable.getColorTextureMap?.();n&&(t.colorTexture||(t.colorTexture=Wt.newInstance({label:"polyDataColor"})),t.colorTexture.setInputData(n),r.push(["Diffuse",t.colorTexture]));const a=t.WebGPUActor.getRenderable(),o=t.WebGPURenderer.getRenderable(),i=[];if(a.getProperty().getDiffuseTexture?.()){const e=["Diffuse",a.getProperty().getDiffuseTexture()];i.push(e)}if(a.getTextures()[0]){const e=["Diffuse",a.getTextures()[0]];i.push(e)}if(t.colorTexture){const e=["Diffuse",t.colorTexture];i.push(e)}if(a.getProperty().getRoughnessTexture?.()){const e=["Roughness",a.getProperty().getRoughnessTexture()];i.push(e)}if(a.getProperty().getMetallicTexture?.()){const e=["Metallic",a.getProperty().getMetallicTexture()];i.push(e)}if(a.getProperty().getNormalTexture?.()){const e=["Normal",a.getProperty().getNormalTexture()];i.push(e)}if(a.getProperty().getAmbientOcclusionTexture?.()){const e=["AmbientOcclusion",a.getProperty().getAmbientOcclusionTexture()];i.push(e)}if(a.getProperty().getEmissionTexture?.()){const e=["Emission",a.getProperty().getEmissionTexture()];i.push(e)}if(o.getEnvironmentTexture?.()){const e=["Environment",o.getEnvironmentTexture()];i.push(e)}for(let e=0;e<i.length;e++)(i[e][1].getInputData()||i[e][1].getJsImageData()||i[e][1].getCanvas())&&r.push(i[e]),i[e][1].getImage()&&i[e][1].getImageLoaded()&&r.push(i[e]);for(let n=0;n<r.length;n++){const a=r[n][1],o=r[n][0],i=t.device.getTextureManager().getTextureForVTKTexture(a);if(i.getReady()){let r=!1;for(let n=0;n<t.textures.length;n++)t.textures[n]===i&&(r=!0,e[n]=!0);if(!r){e[t.textures.length]=!0;const r=i.createView(`${o}Texture`);t.textures.push(i),t.textureViews.push(r);const n=a.getInterpolate()?"linear":"nearest";let s=null;!s&&a.getEdgeClamp()&&a.getRepeat()&&(s="mirror-repeat"),!s&&a.getEdgeClamp()&&(s="clamp-to-edge"),!s&&a.getRepeat()&&(s="repeat"),"Environment"!==o?r.addSampler(t.device,{addressModeU:s,addressModeV:s,addressModeW:s,minFilter:n,magFilter:n}):r.addSampler(t.device,{addressModeU:"repeat",addressModeV:"clamp-to-edge",addressModeW:"repeat",minFilter:n,magFilter:n,mipmapFilter:"linear"})}}}for(let r=t.textures.length-1;r>=0;r--)e[r]||(t.textures.splice(r,1),t.textureViews.splice(r,1))},e.computePipelineHash=()=>{let r=`pd${t.useRendererMatrix?"r":""}${t.forceZValue?"z":""}`;if(t.primitiveType===vn.TriangleEdges||t.primitiveType===vn.TriangleStripEdges)r+="edge";else{if(t.vertexInput.hasAttribute("normalMC")&&(r+="n"),t.vertexInput.hasAttribute("colorVI")&&(r+="c"),t.vertexInput.hasAttribute("tcoord")){const e=t.vertexInput.getBuffer("tcoord");r+=`t${bn.A.getNumberOfComponentsFromBufferFormat(e.getArrayInformation()[0].format)}`}t.textures.length&&(r+=`tx${t.textures.length}`)}t._usesCellNormals&&(r+="cn"),t.SSBO&&(r+="ssbo"),r+=e.getHashFromUsage(t.usage),r+=t.renderEncoder.getPipelineHash(),t.pipelineHash=r},e.updateBuffers=()=>{t.primitiveType!==vn.TriangleEdges&&t.primitiveType!==vn.TriangleStripEdges&&e.updateTextures();const r=t.WebGPUActor.getRenderable(),n=r.getProperty().getRepresentation();t.usage=e.getUsage(n,t.primitiveType),e.buildVertexInput();const a=t.vertexInput.getBuffer("vertexBC");if(e.setNumberOfVertices(a.getSizeInBytes()/a.getStrideInBytes()),e.setTopology(e.getTopologyFromUsage(t.usage)),e.updateUBO(),e.haveWideLines()){const t=r.getProperty();e.setNumberOfInstances(Math.ceil(2*t.getLineWidth()))}else e.setNumberOfInstances(1)}}(e,t)}var wn={newInstance:(0,X.n)(In,"vtkWebGPUCellArrayMapper"),extend:In};const{PrimitiveTypes:On}=on.Ay;const Dn={primitives:null};function Mn(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Dn,r),sr.A.extend(e,t,r),t.primitives=[],function(e,t){t.classHierarchy.push("vtkWebGPUPolyDataMapper"),e.createCellArrayMapper=()=>wn.newInstance(),e.buildPass=r=>{if(r){t.WebGPUActor=e.getFirstAncestorOfType("vtkWebGPUActor"),t.renderable.getStatic()||t.renderable.update();const r=t.renderable.getInputData();t.renderable.mapScalars(r,1),e.updateCellArrayMappers(r)}},e.updateCellArrayMappers=r=>{const n=[r.getVerts(),r.getLines(),r.getPolys(),r.getStrips()],a=[];let o=0;for(let i=On.Points;i<=On.Triangles;i++)if(n[i].getNumberOfValues()>0){t.primitives[i]||(t.primitives[i]=e.createCellArrayMapper());const s=t.primitives[i];s.setCellArray(n[i]),s.setCurrentInput(r),s.setCellOffset(o),s.setPrimitiveType(i),s.setRenderable(t.renderable),o+=n[i].getNumberOfCells(),a.push(s)}else t.primitives[i]=null;if(t.WebGPUActor.getRenderable().getProperty().getEdgeVisibility())for(let o=On.TriangleEdges;o<=On.TriangleStripEdges;o++)if(n[o-2].getNumberOfValues()>0){t.primitives[o]||(t.primitives[o]=e.createCellArrayMapper());const i=t.primitives[o];i.setCellArray(n[o-2]),i.setCurrentInput(r),i.setCellOffset(t.primitives[o-2].getCellOffset()),i.setPrimitiveType(o),i.setRenderable(t.renderable),a.push(i)}else t.primitives[o]=null;e.prepareNodes(),e.addMissingChildren(a),e.removeUnusedNodes()}}(e,t)}const Bn=(0,X.n)(Mn,"vtkWebGPUPolyDataMapper");(0,jr.c9)("vtkMapper",Bn);const{PrimitiveTypes:Vn}=on.Ay;function kn(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,function(e){return{primitives:[],...e}}(r)),sr.A.extend(e,t,r),t.primitives=[],function(e,t){t.classHierarchy.push("vtkWebGPUPolyDataMapper2D"),e.createCellArrayMapper=()=>wn.newInstance(),e.buildPass=r=>{if(r){t.WebGPUActor=e.getFirstAncestorOfType("vtkWebGPUActor2D"),t.renderable.getStatic()||t.renderable.update();const r=t.renderable.getInputData();t.renderable.mapScalars(r,1),e.updateCellArrayMappers(r)}},e.updateCellArrayMappers=r=>{const n=[r.getVerts(),r.getLines(),r.getPolys(),r.getStrips()],a=[];let o=0;for(let i=Vn.Points;i<=Vn.Triangles;i++)if(n[i].getNumberOfValues()>0){t.primitives[i]||(t.primitives[i]=e.createCellArrayMapper());const s=t.primitives[i];s.setCellArray(n[i]),s.setCurrentInput(r),s.setCellOffset(o),s.setPrimitiveType(i),s.setRenderable(t.renderable),s.setIs2D(!0),o+=n[i].getNumberOfCells(),a.push(s)}else t.primitives[i]=null;e.prepareNodes(),e.addMissingChildren(a),e.removeUnusedNodes()}}(e,t)}const Ln=(0,X.n)(kn,"vtkWebGPUPolyDataMapper2D");(0,jr.c9)("vtkMapper2D",Ln);const Rn={};function Nn(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Rn,r),sr.A.extend(e,t,r),t.scalarBarActorHelper=Fr.newScalarBarActorHelper(),function(e,t){t.classHierarchy.push("vtkWebGPUScalarBarActor"),e.buildPass=r=>{r&&(t.WebGPURenderer=e.getFirstAncestorOfType("vtkWebGPURenderer"),t.WebGPURenderWindow=t.WebGPURenderer.getParent(),t.scalarBarActorHelper.getRenderable()||t.scalarBarActorHelper.setRenderable(t.renderable),e.prepareNodes(),e.addMissingNode(t.scalarBarActorHelper.getBarActor()),e.addMissingNode(t.scalarBarActorHelper.getTmActor()),e.removeUnusedNodes())},e.opaquePass=(e,r)=>{if(e){const e=t.WebGPURenderer?t.WebGPURenderer.getRenderable().getActiveCamera():null,r=t.WebGPURenderer.getTiledSizeAndOrigin();t.scalarBarActorHelper.updateAPISpecificData([r.usize,r.vsize],e,t.WebGPURenderWindow.getRenderable())}}}(e,t)}const Un=(0,X.n)(Nn,"vtkWebGPUScalarBarActor");(0,jr.c9)("vtkScalarBarActor",Un);var Gn=r(1534),En=r(8823);const _n={texture:null,handle:null,sampler:null,label:null};function zn(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,_n,r),X.m.obj(e,t),t.bindGroupLayoutEntry={visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,texture:{sampleType:"float",viewDimension:"2d"}},t.bindGroupTime={},X.m.obj(t.bindGroupTime,{mtime:0}),X.m.get(e,t,["bindGroupTime","texture"]),X.m.setGet(e,t,["bindGroupLayoutEntry","label","sampler"]),function(e,t){t.classHierarchy.push("vtkWebGPUTextureView"),e.create=(e,r)=>{t.texture=e,t.options=r,t.options.dimension=t.options.dimension||"2d",t.options.label=t.label,t.textureHandle=e.getHandle(),t.handle=t.textureHandle.createView(t.options),t.bindGroupLayoutEntry.texture.viewDimension=t.options.dimension;const n=bn.A.getDetailsFromTextureFormat(t.texture.getFormat());t.bindGroupLayoutEntry.texture.sampleType=n.sampleType},e.createFromTextureHandle=(e,r)=>{t.texture=null,t.options=r,t.options.dimension=t.options.dimension||"2d",t.options.label=t.label,t.textureHandle=e,t.handle=t.textureHandle.createView(t.options),t.bindGroupLayoutEntry.texture.viewDimension=t.options.dimension;const n=bn.A.getDetailsFromTextureFormat(r.format);t.bindGroupLayoutEntry.texture.sampleType=n.sampleType,t.bindGroupTime.modified()},e.getBindGroupEntry=()=>({resource:e.getHandle()}),e.getShaderCode=(e,r)=>{let n="f32";"sint"===t.bindGroupLayoutEntry.texture.sampleType?n="i32":"uint"===t.bindGroupLayoutEntry.texture.sampleType&&(n="u32");let a=`@binding(${e}) @group(${r}) var ${t.label}: texture_${t.options.dimension}<${n}>;`;return"depth"===t.bindGroupLayoutEntry.texture.sampleType&&(a=`@binding(${e}) @group(${r}) var ${t.label}: texture_depth_${t.options.dimension};`),a},e.addSampler=(r,n)=>{const a=En.Ay.newInstance({label:`${t.label}Sampler`});a.create(r,n),e.setSampler(a)},e.getBindGroupTime=()=>(t.texture&&t.texture.getHandle()!==t.textureHandle&&(t.textureHandle=t.texture.getHandle(),t.handle=t.textureHandle.createView(t.options),t.bindGroupTime.modified()),t.bindGroupTime),e.getHandle=()=>(t.texture&&t.texture.getHandle()!==t.textureHandle&&(t.textureHandle=t.texture.getHandle(),t.handle=t.textureHandle.createView(t.options),t.bindGroupTime.modified()),t.handle)}(e,t)}var Fn={newInstance:X.m.newInstance(zn),extend:zn};const{BufferUsage:Wn}=on.Ay;const Hn={device:null,handle:null,buffer:null,ready:!1,label:null};function $n(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Object.assign(t,Hn,r),X.m.obj(e,t),X.m.get(e,t,["handle","ready","width","height","depth","format","usage"]),X.m.setGet(e,t,["device","label"]),function(e,t){t.classHierarchy.push("vtkWebGPUTexture"),e.create=(e,r)=>{t.device=e,t.width=r.width,t.height=r.height,t.depth=r.depth?r.depth:1;const n=1===t.depth?"2d":"3d";t.format=r.format?r.format:"rgba8unorm",t.mipLevel=r.mipLevel?r.mipLevel:0,t.usage=r.usage?r.usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST,t.handle=t.device.getHandle().createTexture({size:[t.width,t.height,t.depth],format:t.format,usage:t.usage,label:t.label,dimension:n,mipLevelCount:t.mipLevel+1})},e.assignFromHandle=(e,r,n)=>{t.device=e,t.handle=r,t.width=n.width,t.height=n.height,t.depth=n.depth?n.depth:1,t.format=n.format?n.format:"rgba8unorm",t.usage=n.usage?n.usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST},e.writeImageData=r=>{let n=[];if(r.canvas)return t.device.getHandle().queue.copyExternalImageToTexture({source:r.canvas,flipY:r.flip},{texture:t.handle,premultipliedAlpha:!0},[t.width,t.height,t.depth]),void(t.ready=!0);r.jsImageData&&!r.nativeArray&&(r.width=r.jsImageData.width,r.height=r.jsImageData.height,r.depth=1,r.format="rgba8unorm",r.flip=!0,r.nativeArray=r.jsImageData.data);const a=bn.A.getDetailsFromTextureFormat(t.format);let o=t.width*a.stride;const i=(e,t,r)=>{const n=e.length/(t*r)*e.BYTES_PER_ELEMENT,o=2===a.elementSize&&"float"===a.sampleType;if(o||n%256){const i=e,s=n/i.BYTES_PER_ELEMENT,l=a.elementSize,c=256*Math.floor((s*l+255)/256),u=c/l,d=X.m.newTypedArray(o?"Uint16Array":i.constructor.name,u*t*r);for(let e=0;e<t*r;e++)if(o)for(let t=0;t<s;t++)d[e*u+t]=Gn.A.toHalf(i[e*s+t]);else d.set(i.subarray(e*s,(e+1)*s),e*u);return[d,c]}return[e,n]};if(r.nativeArray&&(n=r.nativeArray),r.image){const e=document.createElement("canvas");e.width=r.image.width,e.height=r.image.height;const t=e.getContext("2d");t.translate(0,e.height),t.scale(1,-1),t.drawImage(r.image,0,0,r.image.width,r.image.height,0,0,e.width,e.height),n=t.getImageData(0,0,r.image.width,r.image.height).data}const s=t.device.createCommandEncoder();if(3!==e.getDimensionality()){const e=Wt.generateMipmaps(n,t.width,t.height,t.mipLevel);let a=t.width,l=t.height;for(let n=0;n<=t.mipLevel;n++){const c=i(e[n],l,1);o=c[1];const u={dataArray:r.dataArray?r.dataArray:null,nativeArray:c[0],usage:Wn.Texture},d=t.device.getBufferManager().getBuffer(u);s.copyBufferToTexture({buffer:d.getHandle(),offset:0,bytesPerRow:o,rowsPerImage:l},{texture:t.handle,mipLevel:n},[a,l,1]),a/=2,l/=2}t.device.submitCommandEncoder(s),t.ready=!0}else{const e=i(n,t.height,t.depth);o=e[1];const a={dataArray:r.dataArray?r.dataArray:null,usage:Wn.Texture};a.nativeArray=e[0];const l=t.device.getBufferManager().getBuffer(a);s.copyBufferToTexture({buffer:l.getHandle(),offset:0,bytesPerRow:o,rowsPerImage:t.height},{texture:t.handle},[t.width,t.height,t.depth]),t.device.submitCommandEncoder(s),t.ready=!0}},e.getScale=()=>{const e=bn.A.getDetailsFromTextureFormat(t.format);return 2===e.elementSize&&"float"===e.sampleType?1:255},e.getNumberOfComponents=()=>bn.A.getDetailsFromTextureFormat(t.format).numComponents,e.getDimensionality=()=>{let e=0;return t.width>1&&e++,t.height>1&&e++,t.depth>1&&e++,e},e.resizeToMatch=e=>{e.getWidth()===t.width&&e.getHeight()===t.height&&e.getDepth()===t.depth||(t.width=e.getWidth(),t.height=e.getHeight(),t.depth=e.getDepth(),t.handle=t.device.getHandle().createTexture({size:[t.width,t.height,t.depth],format:t.format,usage:t.usage,label:t.label}))},e.resize=function(e,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;e===t.width&&r===t.height&&n===t.depth||(t.width=e,t.height=r,t.depth=n,t.handle=t.device.getHandle().createTexture({size:[t.width,t.height,t.depth],format:t.format,usage:t.usage,label:t.label}))},e.createView=function(r){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};n.dimension||(n.dimension=1===t.depth?"2d":"3d");const a=Fn.newInstance({label:r});return a.create(e,n),a}}(e,t)}X.m.newInstance($n),r(771);var Kn=r(8652);const jn=class{constructor(e){const{points:t,type:r}=e.data;this.id=e.id,this._points=t,this._type=r,this._color=e.color,this._segmentIndex=e.segmentIndex,this.sizeInBytes=this._getSizeInBytes()}_getSizeInBytes(){return 3*this._points.length}get points(){return this._points}set points(e){this._points=e}get color(){return this._color}set color(e){this._color=e}get type(){return this._type}set type(e){this._type=e}get segmentIndex(){return this._segmentIndex}set segmentIndex(e){this._segmentIndex=e}get flatPointsArray(){return this._points.map((e=>[...e])).flat()}};class qn{constructor(e){this._color=[200,0,0],this.id=e.id,this._contours=[],this._color=e.color??this._color,this.frameOfReferenceUID=e.frameOfReferenceUID,this._segmentIndex=e.segmentIndex,this._createEachContour(e.data),this.sizeInBytes=this._getSizeInBytes()}_createEachContour(e){e.forEach((e=>{const{points:t,type:r,color:n}=e,a=new jn({id:`${this.id}-segment-${this._segmentIndex}`,data:{points:t,type:r,segmentIndex:this._segmentIndex,color:n??this._color},segmentIndex:this._segmentIndex,color:n??this._color});this._contours.push(a)})),this._updateContourSetCentroid()}_updateContourSetCentroid(){const e=this.totalNumberOfPoints,t=this.flatPointsArray,r=t.reduce(((e,t)=>[e[0]+t[0],e[1]+t[1],e[2]+t[2]]),[0,0,0]),n=[r[0]/e,r[1]/e,r[2]/e],a=t.reduce(((e,t)=>this._getDistance(n,t)<this._getDistance(n,e)?t:e),t[0]);this._centroid=a}_getSizeInBytes(){return this._contours.reduce(((e,t)=>e+t.sizeInBytes),0)}_getDistance(e,t){return Math.sqrt((e[0]-t[0])**2+(e[1]-t[1])**2+(e[2]-t[2])**2)}get centroid(){return this._centroid}get segmentIndex(){return this._segmentIndex}get color(){return this._color}set color(e){this._color=e,this._contours.forEach((t=>{t instanceof jn&&(t.color=e)}))}get contours(){return this._contours}get flatPointsArray(){return this._contours.flatMap((e=>e.points))}get numberOfContours(){return this._contours.length}get totalNumberOfPoints(){return this._contours.reduce(((e,t)=>e+t.points.length),0)}get numberOfPointsArray(){return this._contours.map((e=>e.points.length))}getPointsInContour(e){return this._contours[e].points}getNumberOfPointsInAContour(e){return this.getPointsInContour(e).length}}function Yn(e,t){!function(e){if(!e||0===e.data.length)throw new Error("Invalid contour set data, see publicContourSetData type for more info");if(!e.id)throw new Error("Invalid contour set data, each contour set must have an id");if(!e.data||!Array.isArray(e.data))throw new Error("Invalid contour set data, each contour set must have an array of contours");e.data.forEach((e=>{if(!e.points||!Array.isArray(e.points))throw new Error("Invalid contour set data, each contour must have an array of points");e.points.forEach((e=>{if(!e||!Array.isArray(e)||3!==e.length)throw new Error("Invalid contour set data, each point must be an array of length 3")}))}))}(t);const r=new qn({id:t.id,data:t.data,color:t.color,frameOfReferenceUID:t.frameOfReferenceUID,segmentIndex:t.segmentIndex??1});return{id:e,type:Kn.A.CONTOUR,data:r,sizeInBytes:r.sizeInBytes}}function Xn(e,t){!function(e){if(!e.id)throw new Error("Surface must have an id");if(0===e.points?.length)throw new Error("Surface must have non-empty points array");if(0===e.polys?.length)throw new Error("Surface must have non-empty polys array");if(!e.frameOfReferenceUID)throw new Error("Surface must have a frameOfReferenceUID")}(t);const r=new I({id:t.id,points:t.points,polys:t.polys,color:t.color,frameOfReferenceUID:t.frameOfReferenceUID,segmentIndex:t.segmentIndex??1});return{id:e,type:Kn.A.SURFACE,data:r,sizeInBytes:r.sizeInBytes}}const Zn={};let Qn;function Jn(e,t){const r=e.indexOf(":"),n=e.substring(0,r);let a=Zn[n];if(null==a){if(null==Qn||"function"!=typeof Qn)throw new Error(`No geometry loader for scheme ${n} has been registered`);a=Qn}const o=a(e,t);return o.promise.then((function(e){(0,O.A)(C.A,g.A.GEOMETRY_LOADED,{geometry:e})}),(function(t){const r={geometryId:e,error:t};(0,O.A)(C.A,g.A.GEOMETRY_LOADED_FAILED,r)})),o}function ea(e,t){if(void 0===e)throw new Error("loadGeometry: parameter geometryId must not be undefined");let r=k.Ay.getGeometryLoadObject(e);return void 0!==r||(r=Jn(e,t)),r.promise}async function ta(e,t){if(void 0===e)throw new Error("createAndCacheGeometry: parameter geometryId must not be undefined");let r=k.Ay.getGeometryLoadObject(e);return void 0!==r||(r=Jn(e,t),await k.Ay.putGeometryLoadObject(e,r)),r.promise}function ra(e,t){if(void 0===e)throw new Error("createAndCacheGeometry: parameter geometryId must not be undefined");let r=k.Ay.getGeometry(e);if(r)return r;if(t.type===Kn.A.CONTOUR)r=Yn(e,t.geometryData);else{if(t.type!==Kn.A.SURFACE)throw new Error("Unknown geometry type");r=Xn(e,t.geometryData)}return k.Ay.putGeometrySync(e,r),r}function na(e,t){Zn[e]=t}function aa(e){const t=Qn;return Qn=e,t}var oa=r(736),ia=r(9295),sa=r(7326),la=r(749),ca=r(8008),ua=r(5467),da=r(669);function ga(e,t){if(!t||!t.imageIds||!t.imageIds.length)throw new Error("ImageIds must be provided to create a 4D streaming image volume");const{imageIds:r}=t,{splittingTag:n,imageIdGroups:a}=(0,la.A)(r),o=Math.floor(a.length/2),i=(0,ca.D)(a[o],e),{metadata:s,dimensions:l,spacing:c,direction:u,sizeInBytes:d,origin:g,numberOfComponents:p,dataType:m}=i,f=u.slice(6,9),h=a.map((e=>(0,ua.A)(e,f).sortedImageIds)),b=h.flat(),y=da.A.createScalarDynamicVolumeVoxelManager({dimensions:l,imageIdGroups:h,dimensionGroupNumber:1,numberOfComponents:p});let v=new M({volumeId:e,metadata:s,dimensions:l,spacing:c,origin:g,direction:u,sizeInBytes:d,imageIds:b,imageIdGroups:h,splittingTag:n,voxelManager:y,numberOfComponents:p,dataType:m},{imageIds:b,loadStatus:{loaded:!1,loading:!1,cancelled:!1,cachedFrames:[],callbacks:[]}});return{promise:Promise.resolve(v),decache:()=>{v.destroy(),v=null},cancel:()=>{v.cancelLoading()}}}const pa=async function(e,t,r,n=!1,a=!1){for(const t of r){const r=e.getViewport(t);if(!r)throw new Error(`Viewport with Id ${t} does not exist`);if(!(r instanceof v.A))return void console.warn(`Viewport with Id ${t} is not a BaseVolumeViewport. Cannot add volume to this viewport.`)}const o=r.map((async r=>{const o=e.getViewport(r);await o.addVolumes(t,n,a)}));await Promise.all(o)};const ma=function(e,t,r){for(const t of r){const r=e.getViewport(t);if(!r)throw new Error(`Viewport with Id ${t} does not exist`);if(!r.addImages)return void console.warn(`Viewport with Id ${t} does not have addImages. Cannot add image segmentation to this viewport.`)}r.forEach((r=>{e.getViewport(r).addImages(t)}))};var fa=r(7723)}}]);