"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[4256,7116],{50249:(e,t,i)=>{i.d(t,{NIFTIView:()=>s});var r=i(81094),a=i(42109),n=i(15287),o=(i(92507),i(91625));class s extends n.P{constructor(e){super(e,"nifti"),this._imageIds=null,this._volume=null,this._viewports={axial:null,sagittal:null,coronal:null},this._frameDelay=250,this._frameIndex=0,this._frameTime=33.333,this._listenerKeyNav=null,this._timer=0}_buildControls(){const e=a.UI.build(`\n\t\t\t<div class="viewports">\n\t\t\t\t<div class="image-container image-container-axial"></div>\n\t\t\t\t<div class="image-container image-container-sagittal"></div>\n\t\t\t\t<div class="image-container image-container-coronal"></div>\n\t\t\t</div>\n\t\t\t<div class="actions">\n\t\t\t\t<input type="range" min="1" max="${this._numFrames}" value="1" />\n\t\t\t\t<div class="line">\n\t\t\t\t\t<div class="wrap wrap-frame-controls"></div>\n\t\t\t\t\t<div class="wrap wrap-playback">\n\t\t\t\t\t\t<select class="speed">\n\t\t\t\t\t\t\t<option value="${this._frameTime}">Default: ${this._frameTime} ms</option>\n\t\t\t\t\t\t\t<option value="16.7">16.7 ms</option>\n\t\t\t\t\t\t\t<option value="33.3">33.3 ms</option>\n\t\t\t\t\t\t\t<option value="66.7">66.7 ms</option>\n\t\t\t\t\t\t\t<option value="133.3">133.3 ms</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`),t=new r.$({classes:"frame-prev",icon:o.F.arrow_prev}),i=new r.$({classes:"frame-next",icon:o.F.arrow_next}),n=new r.$({classes:"play-pause",icon:o.F.play});if(e.querySelector(".wrap-frame-controls").append(t.render(),a.UI.build('<span class="counter"></span>'),i.render()),e.querySelector(".wrap-playback").append(n.render()),this._frameIndex=0,this._numFrames<=2)e.querySelector(".actions").remove();else{this._slider=e.querySelector('input[type="range"]'),this._slider.addEventListener("change",e=>{let t=e.target.valueAsNumber-1-this._frameIndex;this._controlGoto(t)}),t.on("click",e=>{this._controlGoto(-1)}),i.on("click",e=>{this._controlGoto(1)});const r=e.querySelector("select.speed");r.addEventListener("change",e=>{this._frameTime=Number(r.value)}),n.on("click",e=>{this._timer?(n.update({icon:o.F.play}),clearTimeout(this._timer),this._timer=0):(n.update({icon:o.F.pause}),this._playback(this._slider))}),this._listenerKeyNav=e=>{const t=document.activeElement;t&&"range"===t.type||("ArrowLeft"===e.key?this._controlGoto(-1):"ArrowRight"===e.key&&this._controlGoto(1))},document.body.addEventListener("keyup",this._listenerKeyNav),this._counter=e.querySelector(".counter")}this.nodeView.append(e)}_controlGoto(e){this._frameIndex=this.showImage(e),this._updateControls()}async _initViewport(e){const{Enums:t,RenderingEngine:r,setVolumesForViewports:a,volumeLoader:n}=await Promise.all([i.e(764),i.e(2388),i.e(3537),i.e(8483)]).then(i.bind(i,63537)),o=this.nodeView.querySelector(".image-container-axial"),s=this.nodeView.querySelector(".image-container-sagittal"),l=this.nodeView.querySelector(".image-container-coronal"),c=[{viewportId:"nifti_ortho_axial",type:t.ViewportType.ORTHOGRAPHIC,element:o,defaultOptions:{orientation:t.OrientationAxis.AXIAL}},{viewportId:"nifti_ortho_sagittal",type:t.ViewportType.ORTHOGRAPHIC,element:s,defaultOptions:{orientation:t.OrientationAxis.SAGITTAL}},{viewportId:"nifti_ortho_coronal",type:t.ViewportType.ORTHOGRAPHIC,element:l,defaultOptions:{orientation:t.OrientationAxis.CORONAL}}];this._renderingEngine=new r,this._renderingEngine.setViewports(c);let h="cornerstoneStreamingImageVolume:"+this.parser._objectURL;this._volume=await n.createAndCacheVolumeFromImages(h,this._imageIds),this._volume.load(async()=>{await a(this._renderingEngine,[{volumeId:h}],c.map(e=>e.viewportId)),this._viewports={axial:this._renderingEngine.getViewport("nifti_ortho_axial"),sagittal:this._renderingEngine.getViewport("nifti_ortho_sagittal"),coronal:this._renderingEngine.getViewport("nifti_ortho_coronal")},this._renderingEngine.render(),e()})}_playback(e){if(this._timer)return;const t=0===this._frameIndex?this._frameDelay:0;this._timer=setTimeout(()=>{this._controlGoto(1),e.value=this._frameIndex+1,this._timer=0,this._playback(e)},this._frameTime+t)}_updateControls(){this._counter&&(this._counter.textContent=this._frameIndex+1+"/"+this._numFrames),this._slider&&(this._slider.value=this._frameIndex+1)}destroy(){super.destroy(),this._renderingEngine?.destroy(),this._volume?.destroy(),this._renderingEngine=null,this._volume=null,this._viewports=null,clearTimeout(this._timer),document.body.removeEventListener("keyup",this._listenerKeyNav)}async load(){const e=await this.parser.parse();this._imageIds=e,this._numFrames=e.length,this.buildMetaNode(),this._buildControls(),this._openWindow({destroyOrder:[this,this.parser]}),this._initViewport(()=>{this._frameIndex=this._viewports.axial.getCurrentImageIdIndex(),this.mdAdd("Photometric Interpretation",this._volume.metadata.PhotometricInterpretation||""),this.buildMetaNode(),this._updateControls()})}showImage(e){let t=this._frameIndex+e;t>=this._numFrames?(t-=this._numFrames,e-=this._numFrames):t<0&&(t+=this._numFrames,e+=this._numFrames);for(const t in this._viewports){const i=this._viewports[t];i.scroll(e),i.render()}return t}}},60531:(e,t,i)=>{i.d(t,{DICOMParser:()=>n});var r=i(62845),a=i(92507);class n extends r.V{static numInstances=0;constructor(e){super(e,!!e.dir),this.file=e.dir||e.file,e.fileList&&(this.entries=e.fileList),this._fileManagerIds=[],n.numInstances++}async _loadFromDicomdirFile(e){const t=await e.arrayBuffer(),r=(await Promise.all([i.e(5915),i.e(4995)]).then(i.t.bind(i,35915,23))).parseDicom(new Uint8Array(t),{TransferSyntaxUID:"1.2.840.10008.1.2"}).elements.x00041220;return r&&Array.isArray(r.items)||console.error("[DICOMParser._parseHandlerDir] Record is either not set or has no entries.",r),r}async _parseHandlerDir(){const e=this.entries,t=e.find(e=>e.isFile&&"dicomdir"===e.name.toLowerCase());return t?new Promise((e,i)=>{t.file(async t=>{const i=await this._loadFromDicomdirFile(t);e(i)},e=>{console.error("[DICOMParser._parseHandlerDir]",e),i(e)})}):e}async addAndLoadFile(e){const t=this.wadouri.fileManager.add(e);return this._fileManagerIds.push(t),await this.wadouri.loadImage(t).promise}destroy(){if(1===n.numInstances){console.log("[DICOMParser.destroy] Purging cornerstone caches.");try{0===a.NIFTIParser.numInstances&&this.cache.purgeCache(),this.wadouri.dataSetCacheManager.purge(),this.wadouri.fileManager.purge()}catch(e){console.error("[DICOMParser.destroy]",e)}}n.numInstances--}static getModalityName(e){if(!e)return e;e=String(e).toUpperCase();let t=n.MODALITY_MAP[e];return t&&(t+=` [${e}]`),t||e}static getPregnancyStatus(e){if(isNaN(Number(e)))return e;return["not pregnant","possibly pregnant","definitely pregnant","unknown"][(e=Number(e))+1]||e}getFilepathsFromRecord(e){const t=[];return e.items.forEach(e=>{let i=e.dataSet.string("x00041500");i&&(i=i.replace(/\\/g,"/"),t.push(i))}),t}loadDICOMDIRFiles(e,t){const i=[];if(Array.isArray(e)){const r=a=>{if(a>=e.length)return void t(null,i);e[a].file(async e=>{const t=await this.addAndLoadFile(e);i.push(t),r(a+1)})};r(0)}else{const r=this.getFilepathsFromRecord(e),a=e=>{if(e>=r.length)return void t(null,i);const n=r[e];this.file.getFile(n,{},t=>{t.file(async t=>{const r=await this.addAndLoadFile(t);i.push(r),a(e+1)})},t=>{console.error(`[DICOMParser.loadDICOMDIRFiles] getFile "${n}": `+t.message),a(e+1)})};a(0)}}async parse(){const e=await Promise.all([i.e(764),i.e(2388),i.e(3537),i.e(8483)]).then(i.bind(i,63537)),t=await Promise.all([i.e(764),i.e(1612),i.e(2388),i.e(5915),i.e(8728),i.e(8146)]).then(i.bind(i,88728));if(e.init(),t.init(),this.cache=e.cache,this.wadouri=t.wadouri,this.isDir)return await this._parseHandlerDir();if("dicomdir"===this.file.name.toLowerCase()){const e=await this._loadFromDicomdirFile(this.file);return this.getFilepathsFromRecord(e)}return await this.addAndLoadFile(this.file)}}n.MODALITY_MAP={AR:"Autorefraction",AS:"Angioscopy",ASMT:"Content Assessment Results",AU:"Audio",BDUS:"Bone Densitometry (ultrasound)",BI:"Biomagnetic imaging",BMD:"Bone Densitometry (X-Ray)",CD:"Color flow Doppler",CF:"Cinefluorography",CP:"Colposcopy",CR:"Computed Radiography",CS:"Cystoscopy",CT:"Computed Tomography",DD:"Duplex Doppler",DF:"Digital fluoroscopy",DG:"Diaphanography",DM:"Digital microscopy",DOC:"Document",DS:"Digital Subtraction Angiography",DX:"Digital Radiography",EC:"Echocardiography",ECG:"Electrocardiography",EPS:"Cardiac Electrophysiology",ES:"Endoscopy",FA:"Fluorescein angiography",FID:"Fiducials",FS:"Fundoscopy",GM:"General Microscopy",HC:"Hard Copy",HD:"Hemodynamic Waveform",IO:"Intra-Oral Radiography",IOL:"Intraocular Lens Data",IVOCT:"Intravascular Optical Coherence Tomography",IVUS:"Intravascular Ultrasound",KER:"Keratometry",KO:"Key Object Selection",LEN:"Lensometry",LP:"Laparoscopy",LS:"Laser surface scan",MA:"Magnetic resonance angiography",MG:"Mammography",MR:"Magnetic Resonance",MS:"Magnetic resonance spectroscopy",NM:"Nuclear Medicine",OAM:"Ophthalmic Axial Measurements",OCT:"Optical Coherence Tomography (non-Ophthalmic)",OP:"Ophthalmic Photography",OPM:"Ophthalmic Mapping",OPR:"Ophthalmic Refraction",OPT:"Ophthalmic Tomography",OPV:"Ophthalmic Visual Field",OSS:"Optical Surface Scan",OT:"Other",PLAN:"Plan",PR:"Presentation State",PT:"Positron emission tomography (PET)",PX:"Panoramic X-Ray",REG:"Registration",RESP:"Respiratory Waveform",RF:"Radio Fluoroscopy",RG:"Radiographic imaging (conventional film/screen)",RTDOSE:"Radiotherapy Dose",RTIMAGE:"Radiotherapy Image",RTPLAN:"Radiotherapy Plan",RTRECORD:"RT Treatment Record",RTSTRUCT:"Radiotherapy Structure Set",RWV:"Real World Value Map",SEG:"Segmentation",SM:"Slide Microscopy",SMR:"Stereometric Relationship",SR:"SR Document",SRF:"Subjective Refraction",ST:"Single-photon emission computed tomography (SPECT)",STAIN:"Automated Slide Stainer",TG:"Thermography",US:"Ultrasound",VA:"Visual Acuity",VF:"Videofluorography",XA:"X-Ray Angiography",XC:"External-camera Photography"}},92507:(e,t,i)=>{i.d(t,{NIFTIParser:()=>n});var r=i(62845),a=i(60531);class n extends r.V{static numInstances=0;constructor(e){super(e,!!e.dir),this.file=e.dir||e.file,n.numInstances++}destroy(){if(URL.revokeObjectURL(this._objectURL),n.numInstances+a.DICOMParser.numInstances===1){console.log("[NIFTIParser.destroy] Purging cornerstone caches.");try{this.cache.purgeCache()}catch(e){console.error("[NIFTIParser.destroy]",e)}}n.numInstances--}async parse(){const e=await Promise.all([i.e(764),i.e(2388),i.e(3537),i.e(8483)]).then(i.bind(i,63537)),t=await Promise.all([i.e(764),i.e(5693)]).then(i.bind(i,59753));return e.init(),t.init(),e.imageLoader.registerImageLoader("nifti",t.cornerstoneNiftiImageLoader),this.cache=e.cache,this._objectURL=URL.createObjectURL(this.file),await t.createNiftiImageIdsAndCacheMetadata({url:this._objectURL})}}}}]);