"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[6996],{6996:(s,t,e)=>{e.d(t,{OBJFileLoader:()=>b});var i=e(14037),r=e(998),a=e(15909),n=e(97762),o=e(22412),l=e(26041),h=e(82781),_=e(2093);class p{constructor(){this.materials=[]}parseMTL(s,t,e,i){if(t instanceof ArrayBuffer)return;const r=t.split("\n"),a=/\s+/;let n,o=null;for(let t=0;t<r.length;t++){const h=r[t].trim();if(0===h.length||"#"===h.charAt(0))continue;const d=h.indexOf(" ");let m=d>=0?h.substring(0,d):h;m=m.toLowerCase();const u=d>=0?h.substring(d+1).trim():"";if("newmtl"===m)o&&this.materials.push(o),s._blockEntityCollection=!!i,o=new _.F(u,s),o._parentContainer=i,s._blockEntityCollection=!1;else if("kd"===m&&o)n=u.split(a,3).map(parseFloat),o.diffuseColor=l.v9.FromArray(n);else if("ka"===m&&o)n=u.split(a,3).map(parseFloat),o.ambientColor=l.v9.FromArray(n);else if("ks"===m&&o)n=u.split(a,3).map(parseFloat),o.specularColor=l.v9.FromArray(n);else if("ke"===m&&o)n=u.split(a,3).map(parseFloat),o.emissiveColor=l.v9.FromArray(n);else if("ns"===m&&o)o.specularPower=parseFloat(u);else if("d"===m&&o)o.alpha=parseFloat(u);else if("map_ka"===m&&o)o.ambientTexture=p._GetTexture(e,u,s);else if("map_kd"===m&&o)o.diffuseTexture=p._GetTexture(e,u,s);else if("map_ks"===m&&o)o.specularTexture=p._GetTexture(e,u,s);else if("map_ns"===m);else if("map_bump"===m&&o){const t=u.split(a),i=t.indexOf("-bm");let r=null;i>=0&&(r=t[i+1],t.splice(i,2)),o.bumpTexture=p._GetTexture(e,t.join(" "),s),o.bumpTexture&&null!==r&&(o.bumpTexture.level=parseFloat(r))}else"map_d"===m&&o&&(o.opacityTexture=p._GetTexture(e,u,s))}o&&this.materials.push(o)}static _GetTexture(s,t,e){if(!t)return null;let i=s;if("file:"===s){let s=t.lastIndexOf("\\");-1===s&&(s=t.lastIndexOf("/")),i+=s>-1?t.substring(s+1):t}else i+=t;return new h.g(i,e,!1,p.INVERT_TEXTURE_Y)}}p.INVERT_TEXTURE_Y=!0;var d=e(95616),m=e(27050),u=e(85530),c=e(36803),g=e(51137);class F{constructor(s,t,e){this._positions=[],this._normals=[],this._uvs=[],this._colors=[],this._extColors=[],this._meshesFromObj=[],this._indicesForBabylon=[],this._wrappedPositionForBabylon=[],this._wrappedUvsForBabylon=[],this._wrappedColorsForBabylon=[],this._wrappedNormalsForBabylon=[],this._tuplePosNorm=[],this._curPositionInIndices=0,this._hasMeshes=!1,this._unwrappedPositionsForBabylon=[],this._unwrappedColorsForBabylon=[],this._unwrappedNormalsForBabylon=[],this._unwrappedUVForBabylon=[],this._triangles=[],this._materialNameFromObj="",this._objMeshName="",this._increment=1,this._isFirstMaterial=!0,this._grayColor=new l.ov(.5,.5,.5,1),this._hasLineData=!1,this._materialToUse=s,this._babylonMeshesArray=t,this._loadingOptions=e}_isInArray(s,t){s[t[0]]||(s[t[0]]={normals:[],idx:[]});const e=s[t[0]].normals.indexOf(t[1]);return-1===e?-1:s[t[0]].idx[e]}_isInArrayUV(s,t){s[t[0]]||(s[t[0]]={normals:[],idx:[],uv:[]});const e=s[t[0]].normals.indexOf(t[1]);return 1!=e&&t[2]===s[t[0]].uv[e]?s[t[0]].idx[e]:-1}_setData(s,t,e,r,a,n,o){let l;l=this._loadingOptions.optimizeWithUV?this._isInArrayUV(this._tuplePosNorm,[s,e,t]):this._isInArray(this._tuplePosNorm,[s,e]),-1===l?(this._indicesForBabylon.push(this._wrappedPositionForBabylon.length),this._wrappedPositionForBabylon.push(r),a=a??new i.I9(0,0),this._wrappedUvsForBabylon.push(a),this._wrappedNormalsForBabylon.push(n),void 0!==o&&this._wrappedColorsForBabylon.push(o),this._tuplePosNorm[s].normals.push(e),this._tuplePosNorm[s].idx.push(this._curPositionInIndices++),this._loadingOptions.optimizeWithUV&&this._tuplePosNorm[s].uv.push(t)):this._indicesForBabylon.push(l)}_unwrapData(){try{for(let s=0;s<this._wrappedPositionForBabylon.length;s++)this._unwrappedPositionsForBabylon.push(this._wrappedPositionForBabylon[s].x*this._handednessSign,this._wrappedPositionForBabylon[s].y,this._wrappedPositionForBabylon[s].z),this._unwrappedNormalsForBabylon.push(this._wrappedNormalsForBabylon[s].x*this._handednessSign,this._wrappedNormalsForBabylon[s].y,this._wrappedNormalsForBabylon[s].z),this._unwrappedUVForBabylon.push(this._wrappedUvsForBabylon[s].x,this._wrappedUvsForBabylon[s].y),this._loadingOptions.importVertexColors&&this._unwrappedColorsForBabylon.push(this._wrappedColorsForBabylon[s].r,this._wrappedColorsForBabylon[s].g,this._wrappedColorsForBabylon[s].b,this._wrappedColorsForBabylon[s].a);this._wrappedPositionForBabylon.length=0,this._wrappedNormalsForBabylon.length=0,this._wrappedUvsForBabylon.length=0,this._wrappedColorsForBabylon.length=0,this._tuplePosNorm.length=0,this._curPositionInIndices=0}catch(s){throw new Error("Unable to unwrap data while parsing OBJ data.")}}_getTriangles(s,t){for(let e=t;e<s.length-1;e++)this._pushTriangle(s,e)}_getColor(s){return this._loadingOptions.importVertexColors?this._extColors[s]??this._colors[s]:void 0}_setDataForCurrentFaceWithPattern1(s,t){this._getTriangles(s,t);for(let s=0;s<this._triangles.length;s++){const t=parseInt(this._triangles[s])-1;this._setData(t,0,0,this._positions[t],i.I9.Zero(),i.Pq.Up(),this._getColor(t))}this._triangles.length=0}_setDataForCurrentFaceWithPattern2(s,t){this._getTriangles(s,t);for(let s=0;s<this._triangles.length;s++){const t=this._triangles[s].split("/"),e=parseInt(t[0])-1,r=parseInt(t[1])-1;this._setData(e,r,0,this._positions[e],this._uvs[r]??i.I9.Zero(),i.Pq.Up(),this._getColor(e))}this._triangles.length=0}_setDataForCurrentFaceWithPattern3(s,t){this._getTriangles(s,t);for(let s=0;s<this._triangles.length;s++){const t=this._triangles[s].split("/"),e=parseInt(t[0])-1,r=parseInt(t[1])-1,a=parseInt(t[2])-1;this._setData(e,r,a,this._positions[e],this._uvs[r]??i.I9.Zero(),this._normals[a]??i.Pq.Up())}this._triangles.length=0}_setDataForCurrentFaceWithPattern4(s,t){this._getTriangles(s,t);for(let s=0;s<this._triangles.length;s++){const t=this._triangles[s].split("//"),e=parseInt(t[0])-1,r=parseInt(t[1])-1;this._setData(e,1,r,this._positions[e],i.I9.Zero(),this._normals[r],this._getColor(e))}this._triangles.length=0}_setDataForCurrentFaceWithPattern5(s,t){this._getTriangles(s,t);for(let s=0;s<this._triangles.length;s++){const t=this._triangles[s].split("/"),e=this._positions.length+parseInt(t[0]),i=this._uvs.length+parseInt(t[1]),r=this._normals.length+parseInt(t[2]);this._setData(e,i,r,this._positions[e],this._uvs[i],this._normals[r],this._getColor(e))}this._triangles.length=0}_addPreviousObjMesh(){this._meshesFromObj.length>0&&(this._handledMesh=this._meshesFromObj[this._meshesFromObj.length-1],this._unwrapData(),this._loadingOptions.useLegacyBehavior&&this._indicesForBabylon.reverse(),this._handledMesh.indices=this._indicesForBabylon.slice(),this._handledMesh.positions=this._unwrappedPositionsForBabylon.slice(),this._handledMesh.normals=this._unwrappedNormalsForBabylon.slice(),this._handledMesh.uvs=this._unwrappedUVForBabylon.slice(),this._handledMesh.hasLines=this._hasLineData,this._loadingOptions.importVertexColors&&(this._handledMesh.colors=this._unwrappedColorsForBabylon.slice()),this._indicesForBabylon.length=0,this._unwrappedPositionsForBabylon.length=0,this._unwrappedColorsForBabylon.length=0,this._unwrappedNormalsForBabylon.length=0,this._unwrappedUVForBabylon.length=0,this._hasLineData=!1)}_optimizeNormals(s){const t=s.getVerticesData(d.R.PositionKind),e=s.getVerticesData(d.R.NormalKind),r={};if(!t||!e)return;for(let s=0;s<t.length/3;s++){const e=t[3*s+0]+"_"+t[3*s+1]+"_"+t[3*s+2];let i=r[e];i||(i=[],r[e]=i),i.push(s)}const a=new i.Pq;for(const s in r){const t=r[s];if(t.length<2)continue;const i=t[0];for(let s=1;s<t.length;++s){const r=t[s];e[3*i+0]+=e[3*r+0],e[3*i+1]+=e[3*r+1],e[3*i+2]+=e[3*r+2]}a.copyFromFloats(e[3*i+0],e[3*i+1],e[3*i+2]),a.normalize();for(let s=0;s<t.length;++s){const i=t[s];e[3*i+0]=a.x,e[3*i+1]=a.y,e[3*i+2]=a.z}}s.setVerticesData(d.R.NormalKind,e)}static _IsLineElement(s){return s.startsWith("l")}static _IsObjectElement(s){return s.startsWith("o")}static _IsGroupElement(s){return s.startsWith("g")}static _GetZbrushMRGB(s,t){if(!s.startsWith("mrgb"))return null;if(s=s.replace("mrgb","").trim(),t)return[];const e=s.match(/[a-z0-9]/g);if(!e||e.length%8!=0)return[];const i=[];for(let s=0;s<e.length/8;s++){const t=e[8*s+2]+e[8*s+3],r=e[8*s+4]+e[8*s+5],a=e[8*s+6]+e[8*s+7];i.push(new l.ov(parseInt(t,16)/255,parseInt(r,16)/255,parseInt(a,16)/255,1))}return i}parse(s,t,e,r,a){t=(t=t.replace(/#MRGB/g,"mrgb")).replace(/#.*$/gm,"").trim(),this._loadingOptions.useLegacyBehavior?(this._pushTriangle=(s,t)=>this._triangles.push(s[0],s[t],s[t+1]),this._handednessSign=1):e.useRightHandedSystem?(this._pushTriangle=(s,t)=>this._triangles.push(s[0],s[t+1],s[t]),this._handednessSign=1):(this._pushTriangle=(s,t)=>this._triangles.push(s[0],s[t],s[t+1]),this._handednessSign=-1);const n=t.split("\n"),o=[];let h=[];o.push(h);for(let s=0;s<n.length;s++){const t=n[s].trim().replace(/\s\s/g," ");if(0!==t.length&&"#"!==t.charAt(0))if((F._IsGroupElement(t)||F._IsObjectElement(t))&&(h=[],o.push(h)),F._IsLineElement(t)){const s=t.split(" ");for(let t=1;t<s.length-1;t++)h.push(`l ${s[t]} ${s[t+1]}`)}else h.push(t)}const p=o.flat();for(let s=0;s<p.length;s++){const t=p[s].trim().replace(/\s\s/g," ");let e;if(0!==t.length&&"#"!==t.charAt(0))if(F.VertexPattern.test(t)){if(e=t.match(/[^ ]+/g),this._positions.push(new i.Pq(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]))),this._loadingOptions.importVertexColors)if(e.length>=7){const s=parseFloat(e[4]),t=parseFloat(e[5]),i=parseFloat(e[6]);this._colors.push(new l.ov(s>1?s/255:s,t>1?t/255:t,i>1?i/255:i,7===e.length||void 0===e[7]?1:parseFloat(e[7])))}else this._colors.push(this._grayColor)}else if(null!==(e=F.NormalPattern.exec(t)))this._normals.push(new i.Pq(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3])));else if(null!==(e=F.UVPattern.exec(t)))this._uvs.push(new i.I9(parseFloat(e[1])*this._loadingOptions.UVScaling.x,parseFloat(e[2])*this._loadingOptions.UVScaling.y));else if(null!==(e=F.FacePattern3.exec(t)))this._setDataForCurrentFaceWithPattern3(e[1].trim().split(" "),1);else if(null!==(e=F.FacePattern4.exec(t)))this._setDataForCurrentFaceWithPattern4(e[1].trim().split(" "),1);else if(null!==(e=F.FacePattern5.exec(t)))this._setDataForCurrentFaceWithPattern5(e[1].trim().split(" "),1);else if(null!==(e=F.FacePattern2.exec(t)))this._setDataForCurrentFaceWithPattern2(e[1].trim().split(" "),1);else if(null!==(e=F.FacePattern1.exec(t)))this._setDataForCurrentFaceWithPattern1(e[1].trim().split(" "),1);else if(null!==(e=F.LinePattern1.exec(t)))this._setDataForCurrentFaceWithPattern1(e[1].trim().split(" "),0),this._hasLineData=!0;else if(null!==(e=F.LinePattern2.exec(t)))this._setDataForCurrentFaceWithPattern2(e[1].trim().split(" "),0),this._hasLineData=!0;else if(e=F._GetZbrushMRGB(t,!this._loadingOptions.importVertexColors))for(const s of e)this._extColors.push(s);else if(null!==(e=F.LinePattern3.exec(t)))this._setDataForCurrentFaceWithPattern3(e[1].trim().split(" "),0),this._hasLineData=!0;else if(F.GroupDescriptor.test(t)||F.ObjectDescriptor.test(t)){const s={name:t.substring(2).trim(),indices:null,positions:null,normals:null,uvs:null,colors:null,materialName:this._materialNameFromObj,isObject:F.ObjectDescriptor.test(t)};this._addPreviousObjMesh(),this._meshesFromObj.push(s),this._hasMeshes=!0,this._isFirstMaterial=!0,this._increment=1}else if(F.UseMtlDescriptor.test(t)){if(this._materialNameFromObj=t.substring(7).trim(),!this._isFirstMaterial||!this._hasMeshes){this._addPreviousObjMesh();const s={name:(this._objMeshName||"mesh")+"_mm"+this._increment.toString(),indices:null,positions:null,normals:null,uvs:null,colors:null,materialName:this._materialNameFromObj,isObject:!1};this._increment++,this._meshesFromObj.push(s),this._hasMeshes=!0}this._hasMeshes&&this._isFirstMaterial&&(this._meshesFromObj[this._meshesFromObj.length-1].materialName=this._materialNameFromObj,this._isFirstMaterial=!1)}else F.MtlLibGroupDescriptor.test(t)?a(t.substring(7).trim()):F.SmoothDescriptor.test(t)||g.V.Log("Unhandled expression at line : "+t)}if(this._hasMeshes&&(this._handledMesh=this._meshesFromObj[this._meshesFromObj.length-1],this._loadingOptions.useLegacyBehavior&&this._indicesForBabylon.reverse(),this._unwrapData(),this._handledMesh.indices=this._indicesForBabylon,this._handledMesh.positions=this._unwrappedPositionsForBabylon,this._handledMesh.normals=this._unwrappedNormalsForBabylon,this._handledMesh.uvs=this._unwrappedUVForBabylon,this._handledMesh.hasLines=this._hasLineData,this._loadingOptions.importVertexColors&&(this._handledMesh.colors=this._unwrappedColorsForBabylon)),!this._hasMeshes){let s=null;if(this._indicesForBabylon.length)this._loadingOptions.useLegacyBehavior&&this._indicesForBabylon.reverse(),this._unwrapData();else{for(const s of this._positions)this._unwrappedPositionsForBabylon.push(s.x,s.y,s.z);if(this._normals.length)for(const s of this._normals)this._unwrappedNormalsForBabylon.push(s.x,s.y,s.z);if(this._uvs.length)for(const s of this._uvs)this._unwrappedUVForBabylon.push(s.x,s.y);if(this._extColors.length)for(const s of this._extColors)this._unwrappedColorsForBabylon.push(s.r,s.g,s.b,s.a);else if(this._colors.length)for(const s of this._colors)this._unwrappedColorsForBabylon.push(s.r,s.g,s.b,s.a);this._materialNameFromObj||(s=new _.F(m.V.RandomId(),e),s.pointsCloud=!0,this._materialNameFromObj=s.name,this._normals.length||(s.disableLighting=!0,s.emissiveColor=l.v9.White()))}this._meshesFromObj.push({name:m.V.RandomId(),indices:this._indicesForBabylon,positions:this._unwrappedPositionsForBabylon,colors:this._unwrappedColorsForBabylon,normals:this._unwrappedNormalsForBabylon,uvs:this._unwrappedUVForBabylon,materialName:this._materialNameFromObj,directMaterial:s,isObject:!0,hasLines:this._hasLineData})}for(let t=0;t<this._meshesFromObj.length;t++){if(s&&this._meshesFromObj[t].name)if(s instanceof Array){if(-1===s.indexOf(this._meshesFromObj[t].name))continue}else if(this._meshesFromObj[t].name!==s)continue;this._handledMesh=this._meshesFromObj[t],e._blockEntityCollection=!!r;const i=new u.e(this._meshesFromObj[t].name,e);if(i._parentContainer=r,e._blockEntityCollection=!1,this._handledMesh._babylonMesh=i,!this._handledMesh.isObject)for(let s=t-1;s>=0;--s)if(this._meshesFromObj[s].isObject&&this._meshesFromObj[s]._babylonMesh){i.parent=this._meshesFromObj[s]._babylonMesh;break}if(this._materialToUse.push(this._meshesFromObj[t].materialName),this._handledMesh.hasLines&&(i._internalMetadata??(i._internalMetadata={}),i._internalMetadata._isLine=!0),0===this._handledMesh.positions?.length){this._babylonMeshesArray.push(i);continue}const a=new c.P;if(a.uvs=this._handledMesh.uvs,a.indices=this._handledMesh.indices,a.positions=this._handledMesh.positions,this._loadingOptions.computeNormals){const s=new Array;c.P.ComputeNormals(this._handledMesh.positions,this._handledMesh.indices,s),a.normals=s}else a.normals=this._handledMesh.normals;this._loadingOptions.importVertexColors&&(a.colors=this._handledMesh.colors),a.applyToMesh(i),this._loadingOptions.invertY&&(i.scaling.y*=-1),this._loadingOptions.optimizeNormals&&this._optimizeNormals(i),this._babylonMeshesArray.push(i),this._handledMesh.directMaterial&&(i.material=this._handledMesh.directMaterial)}}}F.ObjectDescriptor=/^o/,F.GroupDescriptor=/^g/,F.MtlLibGroupDescriptor=/^mtllib /,F.UseMtlDescriptor=/^usemtl /,F.SmoothDescriptor=/^s /,F.VertexPattern=/^v(\s+[\d|.|+|\-|e|E]+){3,7}/,F.NormalPattern=/^vn(\s+[\d|.|+|\-|e|E]+)( +[\d|.|+|\-|e|E]+)( +[\d|.|+|\-|e|E]+)/,F.UVPattern=/^vt(\s+[\d|.|+|\-|e|E]+)( +[\d|.|+|\-|e|E]+)/,F.FacePattern1=/^f\s+(([\d]{1,}[\s]?){3,})+/,F.FacePattern2=/^f\s+((([\d]{1,}\/[\d]{1,}[\s]?){3,})+)/,F.FacePattern3=/^f\s+((([\d]{1,}\/[\d]{1,}\/[\d]{1,}[\s]?){3,})+)/,F.FacePattern4=/^f\s+((([\d]{1,}\/\/[\d]{1,}[\s]?){3,})+)/,F.FacePattern5=/^f\s+(((-[\d]{1,}\/-[\d]{1,}\/-[\d]{1,}[\s]?){3,})+)/,F.LinePattern1=/^l\s+(([\d]{1,}[\s]?){2,})+/,F.LinePattern2=/^l\s+((([\d]{1,}\/[\d]{1,}[\s]?){2,})+)/,F.LinePattern3=/^l\s+((([\d]{1,}\/[\d]{1,}\/[\d]{1,}[\s]?){2,})+)/;class b{static get INVERT_TEXTURE_Y(){return p.INVERT_TEXTURE_Y}static set INVERT_TEXTURE_Y(s){p.INVERT_TEXTURE_Y=s}constructor(s){this.name=o.M.name,this.extensions=o.M.extensions,this._assetContainer=null,this._loadingOptions={...b._DefaultLoadingOptions,...s??{}}}static get _DefaultLoadingOptions(){return{computeNormals:b.COMPUTE_NORMALS,optimizeNormals:b.OPTIMIZE_NORMALS,importVertexColors:b.IMPORT_VERTEX_COLORS,invertY:b.INVERT_Y,invertTextureY:b.INVERT_TEXTURE_Y,UVScaling:b.UV_SCALING,materialLoadingFailsSilently:b.MATERIAL_LOADING_FAILS_SILENTLY,optimizeWithUV:b.OPTIMIZE_WITH_UV,skipMaterials:b.SKIP_MATERIALS,useLegacyBehavior:b.USE_LEGACY_BEHAVIOR}}_loadMTL(s,t,e,i){const a=t+s;r.S0.LoadFile(a,e,void 0,void 0,!1,(s,t)=>{i(a,t)})}createPlugin(s){return new b(s[o.M.name])}canDirectLoad(){return!1}importMeshAsync(s,t,e,i){return this._parseSolidAsync(s,t,e,i).then(s=>({meshes:s,particleSystems:[],skeletons:[],animationGroups:[],transformNodes:[],geometries:[],lights:[],spriteManagers:[]}))}loadAsync(s,t,e){return this.importMeshAsync(null,s,t,e).then(()=>{})}loadAssetContainerAsync(s,t,e){const i=new n.WZ(s);return this._assetContainer=i,this.importMeshAsync(null,s,t,e).then(s=>(s.meshes.forEach(s=>i.meshes.push(s)),s.meshes.forEach(s=>{const t=s.material;if(t&&-1==i.materials.indexOf(t)){i.materials.push(t);t.getActiveTextures().forEach(s=>{-1==i.textures.indexOf(s)&&i.textures.push(s)})}}),this._assetContainer=null,i)).catch(s=>{throw this._assetContainer=null,s})}_parseSolidAsync(s,t,e,i){let a="";const n=new p,o=[],l=[];e=e.replace(/#.*$/gm,"").trim();new F(o,l,this._loadingOptions).parse(s,e,t,this._assetContainer,s=>{a=s});const h=[];return""===a||this._loadingOptions.skipMaterials||h.push(new Promise((s,e)=>{this._loadMTL(a,i,h=>{try{n.parseMTL(t,h,i,this._assetContainer);for(let s=0;s<n.materials.length;s++){let t=0;const e=[];let i;for(;(i=o.indexOf(n.materials[s].name,t))>-1;)e.push(i),t=i+1;if(-1===i&&0===e.length)n.materials[s].dispose();else for(let t=0;t<e.length;t++){const i=l[e[t]],r=n.materials[s];i.material=r,i.getTotalIndices()||(r.pointsCloud=!0)}}s()}catch(t){r.S0.Warn(`Error processing MTL file: '${a}'`),this._loadingOptions.materialLoadingFailsSilently?s():e(t)}},(t,i)=>{r.S0.Warn(`Error downloading MTL file: '${a}'`),this._loadingOptions.materialLoadingFailsSilently?s():e(i)})})),Promise.all(h).then(()=>{const s=s=>Boolean(s._internalMetadata?._isLine??!1);return l.forEach(e=>{if(s(e)){let i=e.material??new _.F(e.name+"_line",t);i.getBindedMeshes().filter(t=>!s(t)).length>0&&(i=i.clone(i.name+"_line")??i),i.wireframe=!0,e.material=i,e._internalMetadata&&(e._internalMetadata._isLine=void 0)}}),l})}}b.OPTIMIZE_WITH_UV=!0,b.INVERT_Y=!1,b.IMPORT_VERTEX_COLORS=!1,b.COMPUTE_NORMALS=!1,b.OPTIMIZE_NORMALS=!1,b.UV_SCALING=new i.I9(1,1),b.SKIP_MATERIALS=!1,b.MATERIAL_LOADING_FAILS_SILENTLY=!0,b.USE_LEGACY_BEHAVIOR=!1,(0,a.qS)(new b)}}]);