"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[481],{481:(t,e,o)=>{o.r(e),o.d(e,{FlowGraphSetPropertyBlock:()=>i});var r=o(33006),n=o(4720),s=o(56552);class i extends r.w{constructor(t){super(t),this.config=t,this.object=this.registerDataInput("object",n.Vv,t.target),this.value=this.registerDataInput("value",n.Vv),this.propertyName=this.registerDataInput("propertyName",n.Vv,t.propertyName),this.customSetFunction=this.registerDataInput("customSetFunction",n.Vv)}_execute(t,e){try{const e=this.object.getValue(t),o=this.value.getValue(t),r=this.propertyName.getValue(t);this._stopRunningAnimations(t,e,r);const n=this.customSetFunction.getValue(t);n?n(e,r,o,t):this._setPropertyValue(e,r,o)}catch(e){this._reportError(t,e)}this.out._activateSignal(t)}_stopRunningAnimations(t,e,o){const r=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const n of r){const s=t.assetsContext.animationGroups.find(t=>t.uniqueId===n);if(s)for(const i of s.targetedAnimations)if(i.target===e&&i.animation.targetProperty===o){s.stop(!0),s.dispose();const e=r.indexOf(n);-1!==e&&(r.splice(e,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",r))}}}_setPropertyValue(t,e,o){const r=e.split(".");let n=t;for(let t=0;t<r.length-1;t++){const e=r[t];void 0===n[e]&&(n[e]={}),n=n[e]}n[r[r.length-1]]=o}getClassName(){return"FlowGraphSetPropertyBlock"}}(0,s.Y5)("FlowGraphSetPropertyBlock",i)}}]);