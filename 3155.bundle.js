"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[3155],{53155:(s,e,r)=>{r.d(e,{KHR_materials_diffuse_transmission:()=>t});var i=r(98556),n=r(26041),a=r(37812);const o="KHR_materials_diffuse_transmission";class t{constructor(s){this.name=o,this.order=174,this._loader=s,this.enabled=this._loader.isExtensionUsed(o),this.enabled&&(s.parent.transparencyAsCoverage=!0)}dispose(){this._loader=null}loadMaterialPropertiesAsync(s,e,r){return i.BT.LoadExtensionAsync(s,e,this.name,async(i,n)=>{const a=new Array;return a.push(this._loader.loadMaterialPropertiesAsync(s,e,r)),a.push(this._loadTranslucentPropertiesAsync(i,e,r,n)),await Promise.all(a).then(()=>{})})}_loadTranslucentPropertiesAsync(s,e,r,i){const a=this._loader._getOrCreateMaterialAdapter(r);a.configureSubsurface(),a.subsurfaceWeight=i.diffuseTransmissionFactor??0,a.subsurfaceColor=void 0!==i.diffuseTransmissionColorFactor?n.v9.FromArray(i.diffuseTransmissionColorFactor):n.v9.White();const o=new Array;return i.diffuseTransmissionTexture&&(i.diffuseTransmissionTexture.nonColorData=!0,o.push(this._loader.loadTextureInfoAsync(`${s}/diffuseTransmissionTexture`,i.diffuseTransmissionTexture).then(s=>{s.name=`${r.name} (Diffuse Transmission)`,a.subsurfaceWeightTexture=s}))),i.diffuseTransmissionColorTexture&&o.push(this._loader.loadTextureInfoAsync(`${s}/diffuseTransmissionColorTexture`,i.diffuseTransmissionColorTexture).then(s=>{s.name=`${r.name} (Diffuse Transmission Color)`,a.subsurfaceColorTexture=s})),Promise.all(o).then(()=>{})}}(0,a.Hg)(o),(0,a.Ye)(o,!0,s=>new t(s))}}]);