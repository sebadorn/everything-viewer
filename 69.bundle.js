"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[69],{339:(e,t,n)=>{n.d(t,{$Q:()=>u,X5:()=>c,wk:()=>h});var a=n(26041),o=n(79923),i=n(90868),r=n(4720),s=n(57565);function l(e){return"Vector2"===e||"Vector3"===e||"Vector4"===e||"Quaternion"===e||"Color3"===e||"Color4"===e}function c(e,t,n){const a=t?.getClassName?.()??"";if(l(a)||function(e){return"Matrix"===e||"Matrix2D"===e||"Matrix3D"===e}(a))n[e]={value:t.asArray(),className:a};else if("FlowGraphInteger"===a)n[e]={value:t.value,className:a};else if(a&&(t.id||t.name))n[e]={id:t.id,name:t.name,className:a};else{if("object"==typeof t)throw new Error(`Could not serialize value ${t}`);n[e]=t}}function h(e,t,n,c){const u=t[e];let p;const d=u?.type??u?.className;if(function(e){return"Mesh"===e||"AbstractMesh"===e||"GroundMesh"===e||"InstanceMesh"===e||"LinesMesh"===e||"GoldbergMesh"===e||"GreasedLineMesh"===e||"TrailMesh"===e}(d)){let e=c.meshes.filter(e=>u.id?e.id===u.id:e.name===u.name);0===e.length&&(e=c.transformNodes.filter(e=>u.id?e.id===u.id:e.name===u.name)),p=u.uniqueId?e.find(e=>e.uniqueId===u.uniqueId):e[0]}else if(l(d))p=function(e,t,n=!1){if("Vector2"===e)return o.I9.FromArray(t);if("Vector3"===e)return n&&(t[2]*=-1),o.Pq.FromArray(t);if("Vector4"===e)return o.IU.FromArray(t);if("Quaternion"===e)return n&&(t[2]*=-1,t[3]*=-1),o.PT.FromArray(t);if("Color3"===e)return new a.v9(t[0],t[1],t[2]);if("Color4"===e)return new a.ov(t[0],t[1],t[2],t[3]);throw new Error(`Unknown vector class name ${e}`)}(d,u.value);else if(function(e){return"AnimationGroup"===e}(d)){const e=c.animationGroups.filter(e=>e.name===u.name);p=1===e.length?e[0]:e.find(e=>e.uniqueId===u.uniqueId)}else p="Matrix"===d?o.uq.FromArray(u.value):"Matrix2D"===d?new s.K(u.value):"Matrix3D"===d?new s.z(u.value):"FlowGraphInteger"===d?i.P.FromValue(u.value):"number"===d||"string"===d||"boolean"===d?u.value[0]:u&&void 0!==u.value?u.value:Array.isArray(u)?u.reduce((e,t)=>t.eventData?(e[t.id]={type:(0,r.Yd)(t.type)},void 0!==t.value&&(e[t.id].value=h("value",t,n,c)),e):e,{}):u;return p}function u(e){return"FlowGraphJsonPointerParserBlock"===e}},4686:(e,t,n)=>{function a(e,t){return!(!e.parent||e.parent!==t&&!a(e.parent,t))}function o(e){if(e.getClassName)return e.getClassName()}function i(e,t){return e===t&&("Vector2"===e||"Vector3"===e||"Vector4"===e||"Quaternion"===e)}function r(e,t){return e===t&&("Matrix"===e||"Matrix2D"===e||"Matrix3D"===e)}function s(e,t){return"FlowGraphInteger"===e&&"FlowGraphInteger"===t}function l(e,t){const n="number"==typeof e||"number"==typeof e?.value;return n&&!t?!isNaN(c(e)):n}function c(e){return"number"==typeof e?e:e.value}n.d(t,{$w:()=>c,Ah:()=>a,An:()=>s,I$:()=>o,VW:()=>r,a2:()=>i,kf:()=>l})},10403:(e,t,n)=>{var a;function o(e,t,n,a){switch(t){case"Animation":return a?e.animations.find(e=>e.uniqueId===n)??null:e.animations[n]??null;case"AnimationGroup":return a?e.animationGroups.find(e=>e.uniqueId===n)??null:e.animationGroups[n]??null;case"Mesh":return a?e.meshes.find(e=>e.uniqueId===n)??null:e.meshes[n]??null;case"Material":return a?e.materials.find(e=>e.uniqueId===n)??null:e.materials[n]??null;case"Camera":return a?e.cameras.find(e=>e.uniqueId===n)??null:e.cameras[n]??null;case"Light":return a?e.lights.find(e=>e.uniqueId===n)??null:e.lights[n]??null;default:return null}}n.d(t,{N:()=>o}),function(e){e.Animation="Animation",e.AnimationGroup="AnimationGroup",e.Mesh="Mesh",e.Material="Material",e.Camera="Camera",e.Light="Light"}(a||(a={}))},22086:(e,t,n)=>{n.d(t,{i:()=>o});var a=n(51e3);class o extends a.M{constructor(){super(...arguments),this.initPriority=0,this.type="NoTrigger"}_execute(e){e._notifyExecuteNode(this),this.done._activateSignal(e)}}},33006:(e,t,n)=>{n.d(t,{w:()=>o});var a=n(33138);class o extends a.u{constructor(e){super(e),this.out=this._registerSignalOutput("out")}}},33138:(e,t,n)=>{n.d(t,{u:()=>s});var a=n(42851),o=n(54011),i=n(56552);class r extends o.X{constructor(){super(...arguments),this.priority=0}_isSingularConnection(){return!1}connectTo(e){super.connectTo(e),this._connectedPoint.sort((e,t)=>t.priority-e.priority)}_activateSignal(e){if(e.logger?.addLogItem({action:"ActivateSignal",className:this._ownerBlock.getClassName(),uniqueId:this._ownerBlock.uniqueId,payload:{connectionType:this.connectionType,name:this.name}}),0===this.connectionType)e._notifyExecuteNode(this._ownerBlock),this._ownerBlock._execute(e,this),e._increaseExecutionId();else for(const t of this._connectedPoint)t._activateSignal(e)}}(0,i.Y5)("FlowGraphSignalConnection",r);class s extends a.e{constructor(e){super(e),this.priority=0,this.signalInputs=[],this.signalOutputs=[],this.in=this._registerSignalInput("in"),this.error=this._registerSignalOutput("error")}_registerSignalInput(e){const t=new r(e,0,this);return this.signalInputs.push(t),t}_registerSignalOutput(e){const t=new r(e,1,this);return this.signalOutputs.push(t),t}_unregisterSignalInput(e){const t=this.signalInputs.findIndex(t=>t.name===e);-1!==t&&(this.signalInputs[t].dispose(),this.signalInputs.splice(t,1))}_unregisterSignalOutput(e){const t=this.signalOutputs.findIndex(t=>t.name===e);-1!==t&&(this.signalOutputs[t].dispose(),this.signalOutputs.splice(t,1))}_reportError(e,t){this.error.payload="string"==typeof t?new Error(t):t,this.error._activateSignal(e)}getSignalInput(e){return this.signalInputs.find(t=>t.name===e)}getSignalOutput(e){return this.signalOutputs.find(t=>t.name===e)}serialize(e={}){super.serialize(e),e.signalInputs=[],e.signalOutputs=[];for(const t of this.signalInputs){const n={};t.serialize(n),e.signalInputs.push(n)}for(const t of this.signalOutputs){const n={};t.serialize(n),e.signalOutputs.push(n)}}deserialize(e){for(let t=0;t<e.signalInputs.length;t++){const n=this.getSignalInput(e.signalInputs[t].name);if(!n)throw new Error("Could not find signal input with name "+e.signalInputs[t].name+" in block "+e.className);n.deserialize(e.signalInputs[t])}for(let t=0;t<e.signalOutputs.length;t++){const n=this.getSignalOutput(e.signalOutputs[t].name);if(!n)throw new Error("Could not find signal output with name "+e.signalOutputs[t].name+" in block "+e.className);n.deserialize(e.signalOutputs[t])}}getClassName(){return"FlowGraphExecutionBlock"}}},42851:(e,t,n)=>{n.d(t,{e:()=>c});var a=n(38688),o=n(56552),i=n(54011),r=n(99848),s=n(339);class l extends i.X{constructor(e,t,n,a,o=a.defaultValue,i=!1){super(e,t,n),this.richType=a,this._defaultValue=o,this._optional=i,this._isDisabled=!1,this._lastValue=null,this.dataTransformer=null,this.onValueChangedObservable=new r.cP}get optional(){return this._optional}get isDisabled(){return this._isDisabled}set isDisabled(e){this._isDisabled!==e&&(this._isDisabled=e,this._isDisabled&&this.disconnectFromAll())}_isSingularConnection(){return 0===this.connectionType}setValue(e,t){t._getConnectionValue(this)!==e&&(t._setConnectionValue(this,e),this.onValueChangedObservable.notifyObservers(e))}resetToDefaultValue(e){e._setConnectionValue(this,this._defaultValue)}connectTo(e){this._isDisabled||super.connectTo(e)}_getValueOrDefault(e){const t=e._getConnectionValue(this)??this._defaultValue;return this.dataTransformer?this.dataTransformer(t):t}getValue(e){if(1===this.connectionType){e._notifyExecuteNode(this._ownerBlock),this._ownerBlock._updateOutputs(e);const t=this._getValueOrDefault(e);return this._lastValue=t,this.richType.typeTransformer?this.richType.typeTransformer(t):t}const t=this.isConnected()?this._connectedPoint[0].getValue(e):this._getValueOrDefault(e);return this._lastValue=t,this.richType.typeTransformer?this.richType.typeTransformer(t):t}_getLastValue(){return this._lastValue}getClassName(){return"FlowGraphDataConnection"}serialize(e={}){super.serialize(e),e.richType={},this.richType.serialize(e.richType),e.optional=this._optional,(0,s.X5)("defaultValue",this._defaultValue,e)}}(0,o.Y5)("FlowGraphDataConnection",l);class c{constructor(e){this.config=e,this.uniqueId=(0,a.z)(),this.name=this.config?.name??this.getClassName(),this.dataInputs=[],this.dataOutputs=[]}_updateOutputs(e){}registerDataInput(e,t,n){const a=new l(e,0,this,t,n);return this.dataInputs.push(a),a}registerDataOutput(e,t,n){const a=new l(e,1,this,t,n);return this.dataOutputs.push(a),a}getDataInput(e){return this.dataInputs.find(t=>t.name===e)}getDataOutput(e){return this.dataOutputs.find(t=>t.name===e)}serialize(e={},t=s.X5){if(e.uniqueId=this.uniqueId,e.config={},this.config){const n=this.config,a=Object.keys(n);for(const o of a)t(o,n[o],e.config)}e.dataInputs=[],e.dataOutputs=[],e.className=this.getClassName();for(const t of this.dataInputs){const n={};t.serialize(n),e.dataInputs.push(n)}for(const t of this.dataOutputs){const n={};t.serialize(n),e.dataOutputs.push(n)}}deserialize(e){}_log(e,t,n){e.logger?.addLogItem({action:t,payload:n,className:this.getClassName(),uniqueId:this.uniqueId})}getClassName(){return"FlowGraphBlock"}}},51e3:(e,t,n)=>{n.d(t,{M:()=>o});var a=n(33006);class o extends a.w{constructor(e,t){if(super(e),this._eventsSignalOutputs={},this.done=this._registerSignalOutput("done"),t)for(const e of t)this._eventsSignalOutputs[e]=this._registerSignalOutput(e+"Event")}_executeOnTick(e){}_startPendingTasks(e){e._getExecutionVariable(this,"_initialized",!1)&&(this._cancelPendingTasks(e),this._resetAfterCanceled(e)),this._preparePendingTasks(e),e._addPendingBlock(this),this.out._activateSignal(e),e._setExecutionVariable(this,"_initialized",!0)}_resetAfterCanceled(e){e._deleteExecutionVariable(this,"_initialized"),e._removePendingBlock(this)}}},54011:(e,t,n)=>{n.d(t,{X:()=>i});var a,o=n(38688);!function(e){e[e.Input=0]="Input",e[e.Output=1]="Output"}(a||(a={}));class i{constructor(e,t,n){this._ownerBlock=n,this._connectedPoint=[],this.uniqueId=(0,o.z)(),this.connectedPointIds=[],this.name=e,this._connectionType=t}get connectionType(){return this._connectionType}_isSingularConnection(){return!0}isConnected(){return this._connectedPoint.length>0}connectTo(e){if(this._connectionType===e._connectionType)throw new Error(`Cannot connect two points of type ${this.connectionType}`);if(this._isSingularConnection()&&this._connectedPoint.length>0||e._isSingularConnection()&&e._connectedPoint.length>0)throw new Error("Max number of connections for point reached");this._connectedPoint.push(e),e._connectedPoint.push(this)}disconnectFrom(e,t=!0){const n=this._connectedPoint.indexOf(e),a=e._connectedPoint.indexOf(this);-1!==n&&-1!==a&&(t&&this._connectedPoint.splice(n,1),e._connectedPoint.splice(a,1))}disconnectFromAll(){for(const e of this._connectedPoint)this.disconnectFrom(e,!1);this._connectedPoint.length=0}dispose(){for(const e of this._connectedPoint)this.disconnectFrom(e)}serialize(e={}){e.uniqueId=this.uniqueId,e.name=this.name,e._connectionType=this._connectionType,e.connectedPointIds=[],e.className=this.getClassName();for(const t of this._connectedPoint)e.connectedPointIds.push(t.uniqueId)}getClassName(){return"FGConnection"}deserialize(e){this.uniqueId=e.uniqueId,this.name=e.name,this._connectionType=e._connectionType,this.connectedPointIds=e.connectedPointIds}}},62031:(e,t,n)=>{n.d(t,{x:()=>y});var a,o=n(99848),i=n(75524),r=n(79259),s=n(38688),l=n(339),c=n(10403),h=n(51137);!function(e){e.ExecuteBlock="ExecuteBlock",e.ExecuteEvent="ExecuteEvent",e.TriggerConnection="TriggerConnection",e.ContextVariableSet="ContextVariableSet",e.GlobalVariableSet="GlobalVariableSet",e.GlobalVariableDelete="GlobalVariableDelete",e.GlobalVariableGet="GlobalVariableGet",e.AddConnection="AddConnection",e.GetConnectionValue="GetConnectionValue",e.SetConnectionValue="SetConnectionValue",e.ActivateSignal="ActivateSignal",e.ContextVariableGet="ContextVariableGet"}(a||(a={}));class u{constructor(){this.logToConsole=!1,this.log=[]}addLogItem(e){if(e.time||(e.time=Date.now()),this.log.push(e),this.logToConsole){const t=e.payload?.value;"object"==typeof t&&t.getClassName?h.V.Log(`[FGLog] ${e.className}:${e.uniqueId.split("-")[0]} ${e.action} - ${JSON.stringify(t.getClassName())}: ${t.toString()}`):h.V.Log(`[FGLog] ${e.className}:${e.uniqueId.split("-")[0]} ${e.action} - ${JSON.stringify(e.payload)}`)}}getItemsOfType(e){return this.log.filter(t=>t.action===e)}}class p{get enableLogging(){return this._enableLogging}set enableLogging(e){this._enableLogging!==e&&(this._enableLogging=e,this._enableLogging?(this.logger=new u,this.logger.logToConsole=!0):this.logger=null)}constructor(e){this.uniqueId=(0,s.z)(),this._userVariables={},this._executionVariables={},this._globalContextVariables={},this._connectionValues={},this._pendingBlocks=[],this._executionId=0,this.onNodeExecutedObservable=new o.cP,this.treatDataAsRightHanded=!1,this._enableLogging=!1,this._configuration=e,this.assetsContext=e.assetsContext??e.scene}hasVariable(e){return e in this._userVariables}setVariable(e,t){this._userVariables[e]=t,this.logger?.addLogItem({time:Date.now(),className:this.getClassName(),uniqueId:this.uniqueId,action:"ContextVariableSet",payload:{name:e,value:t}})}getAsset(e,t){return(0,c.N)(this.assetsContext,e,t)}getVariable(e){return this.logger?.addLogItem({time:Date.now(),className:this.getClassName(),uniqueId:this.uniqueId,action:"ContextVariableGet",payload:{name:e,value:this._userVariables[e]}}),this._userVariables[e]}get userVariables(){return this._userVariables}getScene(){return this._configuration.scene}_getUniqueIdPrefixedName(e,t){return`${e.uniqueId}_${t}`}_getGlobalContextVariable(e,t){return this.logger?.addLogItem({time:Date.now(),className:this.getClassName(),uniqueId:this.uniqueId,action:"GlobalVariableGet",payload:{name:e,defaultValue:t,possibleValue:this._globalContextVariables[e]}}),this._hasGlobalContextVariable(e)?this._globalContextVariables[e]:t}_setGlobalContextVariable(e,t){this.logger?.addLogItem({time:Date.now(),className:this.getClassName(),uniqueId:this.uniqueId,action:"GlobalVariableSet",payload:{name:e,value:t}}),this._globalContextVariables[e]=t}_deleteGlobalContextVariable(e){this.logger?.addLogItem({time:Date.now(),className:this.getClassName(),uniqueId:this.uniqueId,action:"GlobalVariableDelete",payload:{name:e}}),delete this._globalContextVariables[e]}_hasGlobalContextVariable(e){return e in this._globalContextVariables}_setExecutionVariable(e,t,n){this._executionVariables[this._getUniqueIdPrefixedName(e,t)]=n}_getExecutionVariable(e,t,n){return this._hasExecutionVariable(e,t)?this._executionVariables[this._getUniqueIdPrefixedName(e,t)]:n}_deleteExecutionVariable(e,t){delete this._executionVariables[this._getUniqueIdPrefixedName(e,t)]}_hasExecutionVariable(e,t){return this._getUniqueIdPrefixedName(e,t)in this._executionVariables}_hasConnectionValue(e){return e.uniqueId in this._connectionValues}_setConnectionValue(e,t){this._connectionValues[e.uniqueId]=t,this.logger?.addLogItem({time:Date.now(),className:this.getClassName(),uniqueId:this.uniqueId,action:"SetConnectionValue",payload:{connectionPointId:e.uniqueId,value:t}})}_setConnectionValueByKey(e,t){this._connectionValues[e]=t}_getConnectionValue(e){return this.logger?.addLogItem({time:Date.now(),className:this.getClassName(),uniqueId:this.uniqueId,action:"GetConnectionValue",payload:{connectionPointId:e.uniqueId,value:this._connectionValues[e.uniqueId]}}),this._connectionValues[e.uniqueId]}get configuration(){return this._configuration}get hasPendingBlocks(){return this._pendingBlocks.length>0}_addPendingBlock(e){this._pendingBlocks.includes(e)||(this._pendingBlocks.push(e),this._pendingBlocks.sort((e,t)=>e.priority-t.priority))}_removePendingBlock(e){const t=this._pendingBlocks.indexOf(e);-1!==t&&this._pendingBlocks.splice(t,1)}_clearPendingBlocks(){for(const e of this._pendingBlocks)e._cancelPendingTasks(this);this._pendingBlocks.length=0}_notifyExecuteNode(e){this.onNodeExecutedObservable.notifyObservers(e),this.logger?.addLogItem({time:Date.now(),className:e.getClassName(),uniqueId:e.uniqueId,action:"ExecuteBlock"})}_notifyOnTick(e){this._setGlobalContextVariable("timeSinceStart",e.timeSinceStart),this._setGlobalContextVariable("deltaTime",e.deltaTime);for(const e of this._pendingBlocks)e._executeOnTick?.(this)}_increaseExecutionId(){this._executionId++}get executionId(){return this._executionId}serialize(e={},t=l.X5){e.uniqueId=this.uniqueId,e._userVariables={};for(const n in this._userVariables)t(n,this._userVariables[n],e._userVariables);e._connectionValues={};for(const n in this._connectionValues)t(n,this._connectionValues[n],e._connectionValues);this.assetsContext!==this.getScene()&&(e._assetsContext={meshes:this.assetsContext.meshes.map(e=>e.id),materials:this.assetsContext.materials.map(e=>e.id),textures:this.assetsContext.textures.map(e=>e.name),animations:this.assetsContext.animations.map(e=>e.name),lights:this.assetsContext.lights.map(e=>e.id),cameras:this.assetsContext.cameras.map(e=>e.id),sounds:this.assetsContext.sounds?.map(e=>e.name),skeletons:this.assetsContext.skeletons.map(e=>e.id),particleSystems:this.assetsContext.particleSystems.map(e=>e.name),geometries:this.assetsContext.geometries.map(e=>e.id),multiMaterials:this.assetsContext.multiMaterials.map(e=>e.id),transformNodes:this.assetsContext.transformNodes.map(e=>e.id)})}getClassName(){return"FlowGraphContext"}}(0,i.Cg)([(0,r.lK)()],p.prototype,"uniqueId",void 0);var d=n(33138),w=n(66240);class g{constructor(e){this.onEventTriggeredObservable=new o.cP,this.sceneReadyTriggered=!1,this._pointerUnderMeshState={},this._startingTime=0,this._scene=e,this._initialize()}_initialize(){this._sceneReadyObserver=this._scene.onReadyObservable.add(()=>{this.sceneReadyTriggered||(this.onEventTriggeredObservable.notifyObservers({type:"SceneReady"}),this.sceneReadyTriggered=!0)}),this._sceneDisposeObserver=this._scene.onDisposeObservable.add(()=>{this.onEventTriggeredObservable.notifyObservers({type:"SceneDispose"})}),this._sceneOnBeforeRenderObserver=this._scene.onBeforeRenderObservable.add(()=>{const e=this._scene.getEngine().getDeltaTime()/1e3;this.onEventTriggeredObservable.notifyObservers({type:"SceneBeforeRender",payload:{timeSinceStart:this._startingTime,deltaTime:e}}),this._startingTime+=e}),this._meshPickedObserver=this._scene.onPointerObservable.add(e=>{this.onEventTriggeredObservable.notifyObservers({type:"MeshPick",payload:e})},w.Zp.POINTERPICK),this._meshUnderPointerObserver=this._scene.onMeshUnderPointerUpdatedObservable.add(e=>{const t=e.pointerId,n=e.mesh,a=this._pointerUnderMeshState[t];!a&&n?this.onEventTriggeredObservable.notifyObservers({type:"PointerOver",payload:{pointerId:t,mesh:n}}):a&&!n?this.onEventTriggeredObservable.notifyObservers({type:"PointerOut",payload:{pointerId:t,mesh:a}}):a&&n&&a!==n&&(this.onEventTriggeredObservable.notifyObservers({type:"PointerOut",payload:{pointerId:t,mesh:a,over:n}}),this.onEventTriggeredObservable.notifyObservers({type:"PointerOver",payload:{pointerId:t,mesh:n,out:a}})),this._pointerUnderMeshState[t]=n},w.Zp.POINTERMOVE)}dispose(){this._sceneDisposeObserver?.remove(),this._sceneReadyObserver?.remove(),this._sceneOnBeforeRenderObserver?.remove(),this._meshPickedObserver?.remove(),this._meshUnderPointerObserver?.remove(),this.onEventTriggeredObservable.clear()}}var f,b=n(4686);!function(e){e[e.Stopped=0]="Stopped",e[e.Started=1]="Started"}(f||(f={}));class m{get state(){return this._state}set state(e){this._state=e,this.onStateChangedObservable.notifyObservers(e)}constructor(e){this.onStateChangedObservable=new o.cP,this._eventBlocks={SceneReady:[],SceneDispose:[],SceneBeforeRender:[],MeshPick:[],PointerDown:[],PointerUp:[],PointerMove:[],PointerOver:[],PointerOut:[],SceneAfterRender:[],NoTrigger:[]},this._executionContexts=[],this._state=0,this._scene=e.scene,this._sceneEventCoordinator=new g(this._scene),this._coordinator=e.coordinator,this._eventObserver=this._sceneEventCoordinator.onEventTriggeredObservable.add(e=>{for(const t of this._executionContexts){const n=this._getContextualOrder(e.type,t);for(const a of n)if(!a._executeEvent(t,e.payload))break}switch(e.type){case"SceneReady":this._sceneEventCoordinator.sceneReadyTriggered=!0;break;case"SceneBeforeRender":for(const t of this._executionContexts)t._notifyOnTick(e.payload);break;case"SceneDispose":this.dispose()}})}createContext(){const e=new p({scene:this._scene,coordinator:this._coordinator});return this._executionContexts.push(e),e}getContext(e){return this._executionContexts[e]}addEventBlock(e){if("PointerOver"!==e.type&&"PointerOut"!==e.type||(this._scene.constantlyUpdateMeshUnderPointer=!0),"NoTrigger"!==e.type&&this._eventBlocks[e.type].push(e),1===this.state)for(const t of this._executionContexts)e._startPendingTasks(t);else this.onStateChangedObservable.addOnce(t=>{if(1===t)for(const t of this._executionContexts)e._startPendingTasks(t)})}start(){1!==this.state&&(0===this._executionContexts.length&&this.createContext(),this.onStateChangedObservable.add(e=>{1===e&&(this._startPendingEvents(),this._scene.isReady(!0)&&this._sceneEventCoordinator.onEventTriggeredObservable.notifyObservers({type:"SceneReady"}))}),this.state=1)}_startPendingEvents(){for(const e of this._executionContexts)for(const t in this._eventBlocks){const n=this._getContextualOrder(t,e);for(const t of n)t._startPendingTasks(e)}}_getContextualOrder(e,t){const n=this._eventBlocks[e].sort((e,t)=>t.initPriority-e.initPriority);if("MeshPick"===e){const e=[];for(const a of n){const o=a.asset.getValue(t);let i=0;for(;i<n.length;i++){const e=n[i].asset.getValue(t);if(o&&e&&(0,b.Ah)(o,e))break}e.splice(i,0,a)}return e}return n}dispose(){if(0!==this.state){this.state=0;for(const e of this._executionContexts)e._clearPendingBlocks();this._executionContexts.length=0;for(const e in this._eventBlocks)this._eventBlocks[e].length=0;this._eventObserver?.remove(),this._sceneEventCoordinator.dispose()}}visitAllBlocks(e){const t=[],n=new Set;for(const e in this._eventBlocks)for(const a of this._eventBlocks[e])t.push(a),n.add(a.uniqueId);for(;t.length>0;){const a=t.pop();e(a);for(const e of a.dataInputs)for(const a of e._connectedPoint)n.has(a._ownerBlock.uniqueId)||(t.push(a._ownerBlock),n.add(a._ownerBlock.uniqueId));if(a instanceof d.u)for(const e of a.signalOutputs)for(const a of e._connectedPoint)n.has(a._ownerBlock.uniqueId)||(t.push(a._ownerBlock),n.add(a._ownerBlock.uniqueId))}}serialize(e={},t){e.allBlocks=[],this.visitAllBlocks(t=>{const n={};t.serialize(n),e.allBlocks.push(n)}),e.executionContexts=[];for(const n of this._executionContexts){const a={};n.serialize(a,t),e.executionContexts.push(a)}}}class y{constructor(e){this.config=e,this.dispatchEventsSynchronously=!0,this._flowGraphs=[],this._customEventsMap=new Map,this._eventExecutionCounter=new Map,this._executeOnNextFrame=[],this._eventUniqueId=0,this._disposeObserver=this.config.scene.onDisposeObservable.add(()=>{this.dispose()}),this._onBeforeRenderObserver=this.config.scene.onBeforeRenderObservable.add(()=>{this._eventExecutionCounter.clear();const e=this._executeOnNextFrame.slice(0);if(e.length)for(const t of e){this.notifyCustomEvent(t.id,t.data,!1);const e=this._executeOnNextFrame.findIndex(e=>e.uniqueId===t.uniqueId);-1!==e&&this._executeOnNextFrame.splice(e,1)}});(y.SceneCoordinators.get(this.config.scene)??[]).push(this)}createGraph(){const e=new m({scene:this.config.scene,coordinator:this});return this._flowGraphs.push(e),e}removeGraph(e){const t=this._flowGraphs.indexOf(e);-1!==t&&(e.dispose(),this._flowGraphs.splice(t,1))}start(){for(const e of this._flowGraphs)e.start()}dispose(){for(const e of this._flowGraphs)e.dispose();this._flowGraphs.length=0,this._disposeObserver?.remove(),this._onBeforeRenderObserver?.remove();const e=y.SceneCoordinators.get(this.config.scene)??[],t=e.indexOf(this);-1!==t&&e.splice(t,1)}serialize(e,t){e._flowGraphs=[];for(const n of this._flowGraphs){const a={};n.serialize(a,t),e._flowGraphs.push(a)}e.dispatchEventsSynchronously=this.dispatchEventsSynchronously}get flowGraphs(){return this._flowGraphs}getCustomEventObservable(e){let t=this._customEventsMap.get(e);return t||(t=new o.cP,this._customEventsMap.set(e,t)),t}notifyCustomEvent(e,t,n=!this.dispatchEventsSynchronously){if(n)return void this._executeOnNextFrame.push({id:e,data:t,uniqueId:this._eventUniqueId++});if(this._eventExecutionCounter.has(e)){const t=this._eventExecutionCounter.get(e);if(this._eventExecutionCounter.set(e,t+1),t>=y.MaxEventTypeExecutionPerFrame)return void(t===y.MaxEventTypeExecutionPerFrame&&h.V.Warn(`FlowGraphCoordinator: Too many executions of event "${e}".`))}else this._eventExecutionCounter.set(e,1);const a=this._customEventsMap.get(e);a&&a.notifyObservers(t)}}y.MaxEventsPerType=30,y.MaxEventTypeExecutionPerFrame=30,y.SceneCoordinators=new Map},70069:(e,t,n)=>{n.d(t,{KHR_interactivity:()=>G});var a=n(62031);const o={};var i=n(22086),r=n(33138),s=n(339);n(4720);function l(e,t){for(const n of e)for(const e of n.dataOutputs)if(e.uniqueId===t)return e;throw new Error("Could not find data out connection with unique id "+t)}function c(e,t){for(const n of e)if(n instanceof r.u)for(const e of n.signalInputs)if(e.uniqueId===t)return e;throw new Error("Could not find signal in connection with unique id "+t)}async function h(e,t){const a=await Promise.all(e.allBlocks.map(async e=>{const t=function(e){switch(e){case"FlowGraphPlayAnimationBlock":return async()=>(await Promise.all([n.e(6504),n.e(5879),n.e(4428)]).then(n.bind(n,52047))).FlowGraphPlayAnimationBlock;case"FlowGraphStopAnimationBlock":return async()=>(await n.e(4353).then(n.bind(n,64353))).FlowGraphStopAnimationBlock;case"FlowGraphPauseAnimationBlock":return async()=>(await n.e(7641).then(n.bind(n,87641))).FlowGraphPauseAnimationBlock;case"FlowGraphInterpolationBlock":return async()=>(await n.e(1665).then(n.bind(n,41665))).FlowGraphInterpolationBlock;case"FlowGraphSceneReadyEventBlock":return async()=>(await n.e(5583).then(n.bind(n,15583))).FlowGraphSceneReadyEventBlock;case"FlowGraphSceneTickEventBlock":return async()=>(await n.e(9569).then(n.bind(n,69569))).FlowGraphSceneTickEventBlock;case"FlowGraphSendCustomEventBlock":return async()=>(await n.e(2661).then(n.bind(n,62661))).FlowGraphSendCustomEventBlock;case"FlowGraphReceiveCustomEventBlock":return async()=>(await n.e(3314).then(n.bind(n,33314))).FlowGraphReceiveCustomEventBlock;case"FlowGraphMeshPickEventBlock":return async()=>(await n.e(2536).then(n.bind(n,72536))).FlowGraphMeshPickEventBlock;case"FlowGraphEBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphEBlock;case"FlowGraphPIBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphPiBlock;case"FlowGraphInfBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphInfBlock;case"FlowGraphNaNBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphNaNBlock;case"FlowGraphRandomBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphRandomBlock;case"FlowGraphAddBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAddBlock;case"FlowGraphSubtractBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphSubtractBlock;case"FlowGraphMultiplyBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphMultiplyBlock;case"FlowGraphDivideBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphDivideBlock;case"FlowGraphAbsBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAbsBlock;case"FlowGraphSignBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphSignBlock;case"FlowGraphTruncBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphTruncBlock;case"FlowGraphFloorBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphFloorBlock;case"FlowGraphCeilBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphCeilBlock;case"FlowGraphRoundBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphRoundBlock;case"FlowGraphFractBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphFractionBlock;case"FlowGraphNegationBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphNegationBlock;case"FlowGraphModuloBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphModuloBlock;case"FlowGraphMinBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphMinBlock;case"FlowGraphMaxBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphMaxBlock;case"FlowGraphClampBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphClampBlock;case"FlowGraphSaturateBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphSaturateBlock;case"FlowGraphMathInterpolationBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphMathInterpolationBlock;case"FlowGraphEqualityBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphEqualityBlock;case"FlowGraphLessThanBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphLessThanBlock;case"FlowGraphLessThanOrEqualBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphLessThanOrEqualBlock;case"FlowGraphGreaterThanBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphGreaterThanBlock;case"FlowGraphGreaterThanOrEqualBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphGreaterThanOrEqualBlock;case"FlowGraphIsNaNBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphIsNanBlock;case"FlowGraphIsInfBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphIsInfinityBlock;case"FlowGraphDegToRadBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphDegToRadBlock;case"FlowGraphRadToDegBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphRadToDegBlock;case"FlowGraphSinBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphSinBlock;case"FlowGraphCosBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphCosBlock;case"FlowGraphTanBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphTanBlock;case"FlowGraphASinBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAsinBlock;case"FlowGraphACosBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAcosBlock;case"FlowGraphATanBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAtanBlock;case"FlowGraphATan2Block":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAtan2Block;case"FlowGraphSinhBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphSinhBlock;case"FlowGraphCoshBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphCoshBlock;case"FlowGraphTanhBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphTanhBlock;case"FlowGraphASinhBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAsinhBlock;case"FlowGraphACoshBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAcoshBlock;case"FlowGraphATanhBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphAtanhBlock;case"FlowGraphExponentialBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphExpBlock;case"FlowGraphLogBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphLogBlock;case"FlowGraphLog2Block":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphLog2Block;case"FlowGraphLog10Block":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphLog10Block;case"FlowGraphSquareRootBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphSquareRootBlock;case"FlowGraphPowerBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphPowerBlock;case"FlowGraphCubeRootBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphCubeRootBlock;case"FlowGraphBitwiseAndBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphBitwiseAndBlock;case"FlowGraphBitwiseOrBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphBitwiseOrBlock;case"FlowGraphBitwiseNotBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphBitwiseNotBlock;case"FlowGraphBitwiseXorBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphBitwiseXorBlock;case"FlowGraphBitwiseLeftShiftBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphBitwiseLeftShiftBlock;case"FlowGraphBitwiseRightShiftBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphBitwiseRightShiftBlock;case"FlowGraphLengthBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphLengthBlock;case"FlowGraphNormalizeBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphNormalizeBlock;case"FlowGraphDotBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphDotBlock;case"FlowGraphCrossBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphCrossBlock;case"FlowGraphRotate2DBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphRotate2DBlock;case"FlowGraphRotate3DBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphRotate3DBlock;case"FlowGraphTransposeBlock":return async()=>(await n.e(5084).then(n.bind(n,62703))).FlowGraphTransposeBlock;case"FlowGraphDeterminantBlock":return async()=>(await n.e(5084).then(n.bind(n,62703))).FlowGraphDeterminantBlock;case"FlowGraphInvertMatrixBlock":return async()=>(await n.e(5084).then(n.bind(n,62703))).FlowGraphInvertMatrixBlock;case"FlowGraphMatrixMultiplicationBlock":return async()=>(await n.e(5084).then(n.bind(n,62703))).FlowGraphMatrixMultiplicationBlock;case"FlowGraphBranchBlock":return async()=>(await n.e(5144).then(n.bind(n,55144))).FlowGraphBranchBlock;case"FlowGraphSetDelayBlock":return async()=>(await n.e(4070).then(n.bind(n,64070))).FlowGraphSetDelayBlock;case"FlowGraphCancelDelayBlock":return async()=>(await n.e(1995).then(n.bind(n,11995))).FlowGraphCancelDelayBlock;case"FlowGraphCallCounterBlock":return async()=>(await n.e(3696).then(n.bind(n,53696))).FlowGraphCallCounterBlock;case"FlowGraphDebounceBlock":return async()=>(await n.e(3145).then(n.bind(n,63145))).FlowGraphDebounceBlock;case"FlowGraphThrottleBlock":return async()=>(await n.e(452).then(n.bind(n,50452))).FlowGraphThrottleBlock;case"FlowGraphDoNBlock":return async()=>(await n.e(4679).then(n.bind(n,84679))).FlowGraphDoNBlock;case"FlowGraphFlipFlopBlock":return async()=>(await n.e(6154).then(n.bind(n,66154))).FlowGraphFlipFlopBlock;case"FlowGraphForLoopBlock":return async()=>(await n.e(9515).then(n.bind(n,99515))).FlowGraphForLoopBlock;case"FlowGraphMultiGateBlock":return async()=>(await n.e(714).then(n.bind(n,714))).FlowGraphMultiGateBlock;case"FlowGraphSequenceBlock":return async()=>(await n.e(8855).then(n.bind(n,78855))).FlowGraphSequenceBlock;case"FlowGraphSwitchBlock":return async()=>(await n.e(9720).then(n.bind(n,79720))).FlowGraphSwitchBlock;case"FlowGraphWaitAllBlock":return async()=>(await n.e(880).then(n.bind(n,880))).FlowGraphWaitAllBlock;case"FlowGraphWhileLoopBlock":return async()=>(await n.e(7593).then(n.bind(n,87593))).FlowGraphWhileLoopBlock;case"FlowGraphConsoleLogBlock":return async()=>(await n.e(9693).then(n.bind(n,59693))).FlowGraphConsoleLogBlock;case"FlowGraphConditionalBlock":return async()=>(await n.e(362).then(n.bind(n,10362))).FlowGraphConditionalDataBlock;case"FlowGraphConstantBlock":return async()=>(await n.e(4190).then(n.bind(n,44190))).FlowGraphConstantBlock;case"FlowGraphTransformCoordinatesSystemBlock":return async()=>(await n.e(4676).then(n.bind(n,24676))).FlowGraphTransformCoordinatesSystemBlock;case"FlowGraphGetAssetBlock":return async()=>(await n.e(7105).then(n.bind(n,69486))).FlowGraphGetAssetBlock;case"FlowGraphGetPropertyBlock":return async()=>(await n.e(8285).then(n.bind(n,98285))).FlowGraphGetPropertyBlock;case"FlowGraphSetPropertyBlock":return async()=>(await n.e(481).then(n.bind(n,481))).FlowGraphSetPropertyBlock;case"FlowGraphGetVariableBlock":return async()=>(await n.e(926).then(n.bind(n,50926))).FlowGraphGetVariableBlock;case"FlowGraphSetVariableBlock":return async()=>(await n.e(5682).then(n.bind(n,15682))).FlowGraphSetVariableBlock;case"FlowGraphJsonPointerParserBlock":return async()=>(await n.e(9139).then(n.bind(n,89139))).FlowGraphJsonPointerParserBlock;case"FlowGraphLeadingZerosBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphLeadingZerosBlock;case"FlowGraphTrailingZerosBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphTrailingZerosBlock;case"FlowGraphOneBitsCounterBlock":return async()=>(await n.e(8334).then(n.bind(n,98334))).FlowGraphOneBitsCounterBlock;case"FlowGraphCombineVector2Block":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphCombineVector2Block;case"FlowGraphCombineVector3Block":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphCombineVector3Block;case"FlowGraphCombineVector4Block":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphCombineVector4Block;case"FlowGraphCombineMatrixBlock":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphCombineMatrixBlock;case"FlowGraphExtractVector2Block":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphExtractVector2Block;case"FlowGraphExtractVector3Block":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphExtractVector3Block;case"FlowGraphExtractVector4Block":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphExtractVector4Block;case"FlowGraphExtractMatrixBlock":return async()=>(await n.e(9816).then(n.bind(n,59816))).FlowGraphExtractMatrixBlock;case"FlowGraphTransformVectorBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphTransformBlock;case"FlowGraphTransformCoordinatesBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphTransformCoordinatesBlock;case"FlowGraphConjugateBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphConjugateBlock;case"FlowGraphAngleBetweenBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphAngleBetweenBlock;case"FlowGraphQuaternionFromAxisAngleBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphQuaternionFromAxisAngleBlock;case"FlowGraphAxisAngleFromQuaternionBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphAxisAngleFromQuaternionBlock;case"FlowGraphQuaternionFromDirectionsBlock":return async()=>(await n.e(1122).then(n.bind(n,91122))).FlowGraphQuaternionFromDirectionsBlock;case"FlowGraphMatrixDecompose":return async()=>(await n.e(5084).then(n.bind(n,62703))).FlowGraphMatrixDecomposeBlock;case"FlowGraphMatrixCompose":return async()=>(await n.e(5084).then(n.bind(n,62703))).FlowGraphMatrixComposeBlock;case"FlowGraphBooleanToFloat":return async()=>(await n.e(7399).then(n.bind(n,17399))).FlowGraphBooleanToFloat;case"FlowGraphBooleanToInt":return async()=>(await n.e(7399).then(n.bind(n,17399))).FlowGraphBooleanToInt;case"FlowGraphFloatToBoolean":return async()=>(await n.e(7399).then(n.bind(n,17399))).FlowGraphFloatToBoolean;case"FlowGraphIntToBoolean":return async()=>(await n.e(7399).then(n.bind(n,17399))).FlowGraphIntToBoolean;case"FlowGraphIntToFloat":return async()=>(await n.e(7399).then(n.bind(n,17399))).FlowGraphIntToFloat;case"FlowGraphFloatToInt":return async()=>(await n.e(7399).then(n.bind(n,17399))).FlowGraphFloatToInt;case"FlowGraphEasingBlock":return async()=>(await n.e(3126).then(n.bind(n,3126))).FlowGraphEasingBlock;case"FlowGraphBezierCurveEasing":return async()=>(await n.e(9938).then(n.bind(n,9938))).FlowGraphBezierCurveEasingBlock;case"FlowGraphPointerOverEventBlock":return async()=>(await n.e(6951).then(n.bind(n,86951))).FlowGraphPointerOverEventBlock;case"FlowGraphPointerOutEventBlock":return async()=>(await n.e(5499).then(n.bind(n,45499))).FlowGraphPointerOutEventBlock;case"FlowGraphContextBlock":return async()=>(await n.e(833).then(n.bind(n,10833))).FlowGraphContextBlock;case"FlowGraphArrayIndexBlock":return async()=>(await n.e(6797).then(n.bind(n,16797))).FlowGraphArrayIndexBlock;case"FlowGraphCodeExecutionBlock":return async()=>(await n.e(3051).then(n.bind(n,23051))).FlowGraphCodeExecutionBlock;case"FlowGraphIndexOfBlock":return async()=>(await n.e(5595).then(n.bind(n,25595))).FlowGraphIndexOfBlock;case"FlowGraphFunctionReference":return async()=>(await n.e(1271).then(n.bind(n,71271))).FlowGraphFunctionReferenceBlock;case"FlowGraphDataSwitchBlock":return async()=>(await n.e(6022).then(n.bind(n,96022))).FlowGraphDataSwitchBlock;default:if(o[e])return o[e];throw new Error(`Unknown block name ${e}`)}}(e.className);return await t()}));return function(e,t,n){const a=t.coordinator.createGraph(),o=[],h=t.valueParseFunction??s.wk;for(let r=0;r<e.allBlocks.length;r++){const s=p(e.allBlocks[r],{scene:t.coordinator.config.scene,pathConverter:t.pathConverter,assetsContainer:t.coordinator.config.scene,valueParseFunction:h},n[r]);o.push(s),s instanceof i.i&&a.addEventBlock(s)}for(const e of o){for(const t of e.dataInputs)for(const e of t.connectedPointIds){const n=l(o,e);t.connectTo(n)}if(e instanceof r.u)for(const t of e.signalOutputs)for(const e of t.connectedPointIds){const n=c(o,e);t.connectTo(n)}}for(const t of e.executionContexts)u(t,{graph:a,valueParseFunction:h},e.rightHanded);return a}(e,t,a)}function u(e,t,n){const a=t.graph.createContext();e.enableLogging&&(a.enableLogging=!0),a.treatDataAsRightHanded=n||!1;const o=t.valueParseFunction??s.wk;a.uniqueId=e.uniqueId;const i=a.getScene();if(e._assetsContext){const t=e._assetsContext,n={meshes:t.meshes?.map(e=>i.getMeshById(e)),lights:t.lights?.map(e=>i.getLightByName(e)),cameras:t.cameras?.map(e=>i.getCameraByName(e)),materials:t.materials?.map(e=>i.getMaterialById(e)),textures:t.textures?.map(e=>i.getTextureByName(e)),animations:t.animations?.map(e=>i.animations.find(t=>t.name===e)),skeletons:t.skeletons?.map(e=>i.getSkeletonByName(e)),particleSystems:t.particleSystems?.map(e=>i.getParticleSystemById(e)),animationGroups:t.animationGroups?.map(e=>i.getAnimationGroupByName(e)),transformNodes:t.transformNodes?.map(e=>i.getTransformNodeById(e)),rootNodes:[],multiMaterials:[],morphTargetManagers:[],geometries:[],actionManagers:[],environmentTexture:null,postProcesses:[],sounds:null,effectLayers:[],layers:[],reflectionProbes:[],lensFlareSystems:[],proceduralTextures:[],getNodes:function(){throw new Error("Function not implemented.")}};a.assetsContext=n}for(const t in e._userVariables){const n=o(t,e._userVariables,a.assetsContext,i);a.userVariables[t]=n}for(const t in e._connectionValues){const n=o(t,e._connectionValues,a.assetsContext,i);a._setConnectionValueByKey(t,n)}return a}function p(e,t,n){const a={},o=t.valueParseFunction??s.wk;if(e.config)for(const n in e.config)a[n]=o(n,e.config,t.assetsContainer||t.scene,t.scene);if((0,s.$Q)(e.className)){if(!t.pathConverter)throw new Error("Path converter is required for this block");a.pathConverter=t.pathConverter}const i=new n(a);i.uniqueId=e.uniqueId;for(let t=0;t<e.dataInputs.length;t++){const n=i.getDataInput(e.dataInputs[t].name);if(!n)throw new Error("Could not find data input with name "+e.dataInputs[t].name+" in block "+e.className);n.deserialize(e.dataInputs[t])}for(let t=0;t<e.dataOutputs.length;t++){const n=i.getDataOutput(e.dataOutputs[t].name);if(!n)throw new Error("Could not find data output with name "+e.dataOutputs[t].name+" in block "+e.className);n.deserialize(e.dataOutputs[t])}return i.metadata=e.metadata,i.deserialize&&i.deserialize(e),i}var d=n(37812),w=n(49532),g=n(48966),f=n(51137),b=n(38688);const m={float:{length:1,flowGraphType:"number",elementType:"number"},bool:{length:1,flowGraphType:"boolean",elementType:"boolean"},float2:{length:2,flowGraphType:"Vector2",elementType:"number"},float3:{length:3,flowGraphType:"Vector3",elementType:"number"},float4:{length:4,flowGraphType:"Vector4",elementType:"number"},float4x4:{length:16,flowGraphType:"Matrix",elementType:"number"},float2x2:{length:4,flowGraphType:"Matrix2D",elementType:"number"},float3x3:{length:9,flowGraphType:"Matrix3D",elementType:"number"},int:{length:1,flowGraphType:"FlowGraphInteger",elementType:"number"}};class y{constructor(e,t,n=60){this._interactivityGraph=e,this._gltf=t,this._animationTargetFps=n,this._types=[],this._mappings=[],this._staticVariables=[],this._events=[],this._internalEventsCounter=0,this._nodes=[],this._parseTypes(),this._parseDeclarations(),this._parseVariables(),this._parseEvents(),this._parseNodes()}get arrays(){return{types:this._types,mappings:this._mappings,staticVariables:this._staticVariables,events:this._events,nodes:this._nodes}}_parseTypes(){if(this._interactivityGraph.types)for(const e of this._interactivityGraph.types)this._types.push(m[e.signature])}_parseDeclarations(){if(this._interactivityGraph.declarations)for(const e of this._interactivityGraph.declarations){const t=(0,g.KD)(e);if(!t)throw f.V.Error(["No mapping found for declaration",e]),new Error("Error parsing declarations");this._mappings.push({flowGraphMapping:t,fullOperationName:e.extension?e.op+":"+e.extension:e.op})}}_parseVariables(){if(this._interactivityGraph.variables)for(const e of this._interactivityGraph.variables){const t=this._parseVariable(e);this._staticVariables.push(t)}}_parseVariable(e,t){const n=this._types[e.type];if(!n)throw f.V.Error(["No type found for variable",e]),new Error("Error parsing variables");if(e.value&&e.value.length!==n.length)throw f.V.Error(["Invalid value length for variable",e,n]),new Error("Error parsing variables");const a=e.value||[];if(!a.length)switch(n.flowGraphType){case"boolean":a.push(!1);break;case"FlowGraphInteger":a.push(0);break;case"number":a.push(NaN);break;case"Vector2":a.push(NaN,NaN);break;case"Vector3":a.push(NaN,NaN,NaN);break;case"Vector4":case"Matrix2D":case"Quaternion":a.fill(NaN,0,4);break;case"Matrix":a.fill(NaN,0,16);break;case"Matrix3D":a.fill(NaN,0,9)}return"number"===n.elementType&&"string"==typeof a[0]&&(a[0]=parseFloat(a[0])),{type:n.flowGraphType,value:t?t(a,this):a}}_parseEvents(){if(this._interactivityGraph.events)for(const e of this._interactivityGraph.events){const t={eventId:e.id||"internalEvent_"+this._internalEventsCounter++};e.values&&(t.eventData=Object.keys(e.values).map(t=>{const n=e.values?.[t];if(!n)throw f.V.Error(["No value found for event key",t]),new Error("Error parsing events");const a=this._types[n.type];if(!a)throw f.V.Error(["No type found for event value",n]),new Error("Error parsing events");const o=void 0!==n.value?this._parseVariable(n):void 0;return{id:t,type:a.flowGraphType,eventData:!0,value:o}})),this._events.push(t)}}_parseNodes(){if(this._interactivityGraph.nodes)for(const e of this._interactivityGraph.nodes){if("number"!=typeof e.declaration)throw f.V.Error(["No declaration found for node",e]),new Error("Error parsing nodes");const t=this._mappings[e.declaration];if(!t)throw f.V.Error(["No mapping found for node",e]),new Error("Error parsing nodes");if(t.flowGraphMapping.validation){const n=t.flowGraphMapping.validation(e,this._interactivityGraph,this._gltf);if(!n.valid)throw new Error(`Error validating interactivity node ${this._interactivityGraph.declarations?.[e.declaration].op} - ${n.error}`)}const n=[];for(const a of t.flowGraphMapping.blocks){const o=this._getEmptyBlock(a,t.fullOperationName);this._parseNodeConfiguration(e,o,t.flowGraphMapping,a),n.push(o)}this._nodes.push({blocks:n,fullOperationName:t.fullOperationName})}}_getEmptyBlock(e,t){return{uniqueId:(0,b.z)(),className:e,dataInputs:[],dataOutputs:[],signalInputs:[],signalOutputs:[],config:{},type:t,metadata:{}}}_parseNodeConfiguration(e,t,n,a){const o=t.config;if(e.configuration){const t=Object.keys(e.configuration);for(const i of t){const t=e.configuration?.[i];if(!t)throw f.V.Error(["No value found for node configuration",i]),new Error("Error parsing node configuration");const r=n.configuration?.[i];if(r&&r.toBlock?r.toBlock===a:0===n.blocks.indexOf(a)){const e=r?.name||i;t&&void 0!==t.value||void 0===r?.defaultValue?t.value.length>=0?o[e]={value:1===t.value.length?t.value[0]:t.value}:f.V.Warn(["Invalid value for node configuration",t]):o[e]={value:r.defaultValue},r&&r.dataTransformer&&(o[e].value=r.dataTransformer([o[e].value],this)[0])}}}}_parseNodeConnections(e){for(let t=0;t<this._nodes.length;t++){const n=this._interactivityGraph.nodes?.[t];if(!n)throw f.V.Error(["No node found for interactivity node",this._nodes[t]]),new Error("Error parsing node connections");const a=this._nodes[t],o=this._mappings[n.declaration];if(!o)throw f.V.Error(["No mapping found for node",n]),new Error("Error parsing node connections");const i=n.flows||{},r=Object.keys(i).sort();for(const e of r){const t=i[e],n=o.flowGraphMapping.outputs?.flows?.[e],r=n?.name||e,s=this._createNewSocketConnection(r,!0);(n&&n.toBlock&&a.blocks.find(e=>e.className===n.toBlock)||a.blocks[0]).signalOutputs.push(s);const l=t.node,c=this._nodes[l];if(!c)throw f.V.Error(["No node found for input node id",l]),new Error("Error parsing node connections");const h=(0,g.X6)(c.fullOperationName);if(!h)throw f.V.Error(["No mapping found for input node",c]),new Error("Error parsing node connections");let u=h.inputs?.flows?.[t.socket||"in"],p=!1;if(!u)for(const e in h.inputs?.flows)e.startsWith("[")&&e.endsWith("]")&&(p=!0,u=h.inputs?.flows?.[e]);const d=u?p?u.name.replace("$1",t.socket||""):u.name:t.socket||"in",w=u&&u.toBlock&&c.blocks.find(e=>e.className===u.toBlock)||c.blocks[0];let b=w.signalInputs.find(e=>e.name===d);b||(b=this._createNewSocketConnection(d),w.signalInputs.push(b)),b.connectedPointIds.push(s.uniqueId),s.connectedPointIds.push(b.uniqueId)}const s=n.values||{},l=Object.keys(s);for(const t of l){const n=s[t];let i=o.flowGraphMapping.inputs?.values?.[t],r=!1;if(!i)for(const e in o.flowGraphMapping.inputs?.values)e.startsWith("[")&&e.endsWith("]")&&(r=!0,i=o.flowGraphMapping.inputs?.values?.[e]);const l=i?r?i.name.replace("$1",t):i.name:t,c=this._createNewSocketConnection(l);if((i&&i.toBlock&&a.blocks.find(e=>e.className===i.toBlock)||a.blocks[0]).dataInputs.push(c),void 0!==n.value){const t=this._parseVariable(n,i&&i.dataTransformer);e._connectionValues[c.uniqueId]=t}else{if(void 0===n.node)throw f.V.Error(["Invalid value for value connection",n]),new Error("Error parsing node connections");{const e=n.node,t=n.socket||"value",a=this._nodes[e];if(!a)throw f.V.Error(["No node found for output socket reference",n]),new Error("Error parsing node connections");const o=(0,g.X6)(a.fullOperationName);if(!o)throw f.V.Error(["No mapping found for output socket reference",n]),new Error("Error parsing node connections");let i=o.outputs?.values?.[t],r=!1;if(!i)for(const e in o.outputs?.values)e.startsWith("[")&&e.endsWith("]")&&(r=!0,i=o.outputs?.values?.[e]);const s=i?r?i.name.replace("$1",t):i?.name:t,l=i&&i.toBlock&&a.blocks.find(e=>e.className===i.toBlock)||a.blocks[0];let h=l.dataOutputs.find(e=>e.name===s);h||(h=this._createNewSocketConnection(s,!0),l.dataOutputs.push(h)),c.connectedPointIds.push(h.uniqueId),h.connectedPointIds.push(c.uniqueId)}}}if(o.flowGraphMapping.interBlockConnectors)for(const e of o.flowGraphMapping.interBlockConnectors){const t=e.input,n=e.output,o=e.isVariable;this._connectFlowGraphNodes(t,n,a.blocks[e.inputBlockIndex],a.blocks[e.outputBlockIndex],o)}if(o.flowGraphMapping.extraProcessor){const t=this._interactivityGraph.declarations?.[n.declaration];if(!t)throw f.V.Error(["No declaration found for extra processor",n]),new Error("Error parsing node connections");a.blocks=o.flowGraphMapping.extraProcessor(n,t,o.flowGraphMapping,this,a.blocks,e,this._gltf)}}}_createNewSocketConnection(e,t){return{uniqueId:(0,b.z)(),name:e,_connectionType:t?1:0,connectedPointIds:[]}}_connectFlowGraphNodes(e,t,n,a,o){const i=o?n.dataInputs:n.signalInputs,r=o?a.dataOutputs:a.signalOutputs,s=i.find(t=>t.name===e)||this._createNewSocketConnection(e),l=r.find(e=>e.name===t)||this._createNewSocketConnection(t,!0);i.find(t=>t.name===e)||i.push(s),r.find(e=>e.name===t)||r.push(l),s.connectedPointIds.push(l.uniqueId),l.connectedPointIds.push(s.uniqueId)}getVariableName(e){return"staticVariable_"+e}serializeToFlowGraph(){const e={uniqueId:(0,b.z)(),_userVariables:{},_connectionValues:{}};this._parseNodeConnections(e);for(let t=0;t<this._staticVariables.length;t++){const n=this._staticVariables[t];e._userVariables[this.getVariableName(t)]=n}return{rightHanded:!0,allBlocks:this._nodes.reduce((e,t)=>e.concat(t.blocks),[]),executionContexts:[e]}}}var _=n(79923);const k="KHR_interactivity";class G{constructor(e){this._loader=e,this.name=k,this.enabled=this._loader.isExtensionUsed(k),this._pathConverter=(0,w.Wt)(this._loader.gltf),e._skipStartAnimationStep=!0;const t=e.babylonScene;t&&function(e){(0,w.oR)("/extensions/KHR_interactivity/?/activeCamera/rotation",{get:()=>{if(!e.activeCamera)return new _.PT(NaN,NaN,NaN,NaN);const t=_.PT.FromRotationMatrix(e.activeCamera.getWorldMatrix()).normalize();return e.useRightHandedSystem||(t.w*=-1,t.x*=-1),t},type:"Quaternion",getTarget:()=>e.activeCamera}),(0,w.oR)("/extensions/KHR_interactivity/?/activeCamera/position",{get:()=>{if(!e.activeCamera)return new _.Pq(NaN,NaN,NaN);const t=e.activeCamera.getWorldMatrix().getTranslation();return e.useRightHandedSystem||(t.x*=-1),t},type:"Vector3",getTarget:()=>e.activeCamera}),(0,w.oR)("/animations/{}/extensions/KHR_interactivity/isPlaying",{get:e=>e._babylonAnimationGroup?.isPlaying??!1,type:"boolean",getTarget:e=>e._babylonAnimationGroup}),(0,w.oR)("/animations/{}/extensions/KHR_interactivity/minTime",{get:e=>(e._babylonAnimationGroup?.from??0)/60,type:"number",getTarget:e=>e._babylonAnimationGroup}),(0,w.oR)("/animations/{}/extensions/KHR_interactivity/maxTime",{get:e=>(e._babylonAnimationGroup?.to??0)/60,type:"number",getTarget:e=>e._babylonAnimationGroup}),(0,w.oR)("/animations/{}/extensions/KHR_interactivity/playhead",{get:e=>(e._babylonAnimationGroup?.getCurrentFrame()??0)/60,type:"number",getTarget:e=>e._babylonAnimationGroup}),(0,w.oR)("/animations/{}/extensions/KHR_interactivity/virtualPlayhead",{get:e=>(e._babylonAnimationGroup?.getCurrentFrame()??0)/60,type:"number",getTarget:e=>e._babylonAnimationGroup})}(t)}dispose(){this._loader=null,delete this._pathConverter}async onReady(){if(!this._loader.babylonScene||!this._pathConverter)return;const e=this._loader.babylonScene,t=this._loader.gltf.extensions?.KHR_interactivity;if(!t)return;const n=new a.x({scene:e});n.dispatchEventsSynchronously=!1;const o=t.graphs.map(e=>new y(e,this._loader.gltf,this._loader.parent.targetFps).serializeToFlowGraph());await Promise.all(o.map(async e=>await h(e,{coordinator:n,pathConverter:this._pathConverter}))),n.start()}}var B;B=async()=>(await n.e(1087).then(n.bind(n,31087))).FlowGraphGLTFDataProvider,o[`${k}/${"FlowGraphGLTFDataProvider"}`]=B,(0,d.Hg)(k),(0,d.Ye)(k,!0,e=>new G(e))}}]);