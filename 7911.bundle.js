"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[7911],{27911:(t,e,r)=>{r.d(e,{_HDRTextureLoader:()=>n});var a=r(47407);class n{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(t,e,r){const n=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),o=(0,a.NK)(n),h=(0,a.LT)(n,o),i=o.width*o.height,s=new Float32Array(4*i);for(let t=0;t<i;t+=1)s[4*t]=h[3*t],s[4*t+1]=h[3*t+1],s[4*t+2]=h[3*t+2],s[4*t+3]=1;r(o.width,o.height,e.generateMipMaps,!1,()=>{const t=e.getEngine();e.type=1,e.format=5,e._gammaSpace=!1,t._uploadDataToTextureDirectly(e,s)})}}},47407:(t,e,r)=>{r.d(e,{VH:()=>s,NK:()=>i,LT:()=>u});var a=r(79923);class n{static ConvertPanoramaToCubemap(t,e,r,a,n=!1,o=!0){if(!t)throw"ConvertPanoramaToCubemap: input cannot be null";let h=0;if(t.length!=e*r*3){if(t.length!=e*r*4)throw"ConvertPanoramaToCubemap: input size is wrong";h=4}else h=3;return{front:this.CreateCubemapTexture(a,this.FACE_FRONT,t,e,r,n,o,h),back:this.CreateCubemapTexture(a,this.FACE_BACK,t,e,r,n,o,h),left:this.CreateCubemapTexture(a,this.FACE_LEFT,t,e,r,n,o,h),right:this.CreateCubemapTexture(a,this.FACE_RIGHT,t,e,r,n,o,h),up:this.CreateCubemapTexture(a,this.FACE_UP,t,e,r,n,o,h),down:this.CreateCubemapTexture(a,this.FACE_DOWN,t,e,r,n,o,h),size:a,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(t,e,r,a,n,o,h,i){const s=new ArrayBuffer(t*t*4*3),u=new Float32Array(s),w=o?Math.max(1,Math.round(a/4/t)):1,f=1/w,l=f*f,c=e[1].subtract(e[0]).scale(f/t),d=e[3].subtract(e[2]).scale(f/t),C=1/t;let p=0;for(let o=0;o<t;o++)for(let s=0;s<w;s++){let s=e[0],P=e[2];for(let e=0;e<t;e++)for(let f=0;f<w;f++){const w=P.subtract(s).scale(p).add(s);w.normalize();const f=this.CalcProjectionSpherical(w,r,a,n,i,h);u[o*t*3+3*e+0]+=f.r*l,u[o*t*3+3*e+1]+=f.g*l,u[o*t*3+3*e+2]+=f.b*l,s=s.add(c),P=P.add(d)}p+=C*f}return u}static CalcProjectionSpherical(t,e,r,a,n,o){let h=Math.atan2(t.z,t.x);const i=Math.acos(t.y);for(;h<-Math.PI;)h+=2*Math.PI;for(;h>Math.PI;)h-=2*Math.PI;let s=h/Math.PI;const u=i/Math.PI;s=.5*s+.5;let w=Math.round(s*r);w<0?w=0:w>=r&&(w=r-1);let f=Math.round(u*a);f<0?f=0:f>=a&&(f=a-1);const l=o?a-f-1:f;return{r:e[l*r*n+w*n+0],g:e[l*r*n+w*n+1],b:e[l*r*n+w*n+2]}}}function o(t,e,r,a,n,o){n>0?(n=function(t,e){return e>1023?t*Math.pow(2,1023)*Math.pow(2,e-1023):e<-1074?t*Math.pow(2,-1074)*Math.pow(2,e+1074):t*Math.pow(2,e)}(1,n-136),t[o+0]=e*n,t[o+1]=r*n,t[o+2]=a*n):(t[o+0]=0,t[o+1]=0,t[o+2]=0)}function h(t,e){let r="",a="";for(let n=e;n<t.length-e&&(a=String.fromCharCode(t[n]),"\n"!=a);n++)r+=a;return r}function i(t){let e=0,r=0,a=h(t,0);if("#"!=a[0]||"?"!=a[1])throw"Bad HDR Format.";let n=!1,o=!1,i=0;do{i+=a.length+1,a=h(t,i),"FORMAT=32-bit_rle_rgbe"==a?o=!0:0==a.length&&(n=!0)}while(!n);if(!o)throw"HDR Bad header format, unsupported FORMAT";i+=a.length+1,a=h(t,i);const s=/^-Y (.*) \+X (.*)$/g.exec(a);if(!s||s.length<3)throw"HDR Bad header format, no size";if(r=parseInt(s[2]),e=parseInt(s[1]),r<8||r>32767)throw"HDR Bad header format, unsupported size";return i+=a.length+1,{height:e,width:r,dataPosition:i}}function s(t,e,r=!1){const a=new Uint8Array(t),o=i(a),h=u(a,o);return n.ConvertPanoramaToCubemap(h,o.width,o.height,e,r)}function u(t,e){return function(t,e){let r=e.height;const a=e.width;let n,h,i,s,u,f=e.dataPosition,l=0,c=0,d=0;const C=new ArrayBuffer(4*a),p=new Uint8Array(C),P=new ArrayBuffer(e.width*e.height*4*3),g=new Float32Array(P);for(;r>0;){if(n=t[f++],h=t[f++],i=t[f++],s=t[f++],2!=n||2!=h||128&i||e.width<8||e.width>32767)return w(t,e);if((i<<8|s)!=a)throw"HDR Bad header format, wrong scan line width";for(l=0,d=0;d<4;d++)for(c=(d+1)*a;l<c;)if(n=t[f++],h=t[f++],n>128){if(u=n-128,0==u||u>c-l)throw"HDR Bad Format, bad scanline data (run)";for(;u-- >0;)p[l++]=h}else{if(u=n,0==u||u>c-l)throw"HDR Bad Format, bad scanline data (non-run)";if(p[l++]=h,--u>0)for(let e=0;e<u;e++)p[l++]=t[f++]}for(d=0;d<a;d++)n=p[d],h=p[d+a],i=p[d+2*a],s=p[d+3*a],o(g,n,h,i,s,(e.height-r)*a*3+3*d);r--}return g}(t,e)}function w(t,e){let r=e.height;const a=e.width;let n,h,i,s,u,w=e.dataPosition;const f=new ArrayBuffer(e.width*e.height*4*3),l=new Float32Array(f);for(;r>0;){for(u=0;u<e.width;u++)n=t[w++],h=t[w++],i=t[w++],s=t[w++],o(l,n,h,i,s,(e.height-r)*a*3+3*u);r--}return l}n.FACE_LEFT=[new a.Pq(-1,-1,-1),new a.Pq(1,-1,-1),new a.Pq(-1,1,-1),new a.Pq(1,1,-1)],n.FACE_RIGHT=[new a.Pq(1,-1,1),new a.Pq(-1,-1,1),new a.Pq(1,1,1),new a.Pq(-1,1,1)],n.FACE_FRONT=[new a.Pq(1,-1,-1),new a.Pq(1,-1,1),new a.Pq(1,1,-1),new a.Pq(1,1,1)],n.FACE_BACK=[new a.Pq(-1,-1,1),new a.Pq(-1,-1,-1),new a.Pq(-1,1,1),new a.Pq(-1,1,-1)],n.FACE_DOWN=[new a.Pq(1,1,-1),new a.Pq(1,1,1),new a.Pq(-1,1,-1),new a.Pq(-1,1,1)],n.FACE_UP=[new a.Pq(-1,-1,-1),new a.Pq(-1,-1,1),new a.Pq(1,-1,-1),new a.Pq(1,-1,1)]}}]);