"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[1318],{61318:(t,e,r)=>{r.r(e),r.d(e,{_TGATextureLoader:()=>s});var n=r(51137);function a(t){let e=0;return{id_length:t[e++],colormap_type:t[e++],image_type:t[e++],colormap_index:t[e++]|t[e++]<<8,colormap_length:t[e++]|t[e++]<<8,colormap_size:t[e++],origin:[t[e++]|t[e++]<<8,t[e++]|t[e++]<<8],width:t[e++]|t[e++]<<8,height:t[e++]|t[e++]<<8,pixel_size:t[e++],flags:t[e++]}}function i(t,e){if(e.length<19)return void n.V.Error("Unable to load TGA file - Not enough data to contain header");let r=18;const i=a(e);if(i.id_length+r>e.length)return void n.V.Error("Unable to load TGA file - Not enough data");r+=i.id_length;let s,h=!1,c=!1,g=!1;switch(i.image_type){case 9:h=!0;case 1:c=!0;break;case 10:h=!0;case 2:break;case 11:h=!0;case 3:g=!0}const l=i.pixel_size>>3,f=i.width*i.height*l;let d,u,w,_,b,p,y;if(c&&(d=e.subarray(r,r+=i.colormap_length*(i.colormap_size>>3))),h){let t,n,a;s=new Uint8Array(f);let i=0;const o=new Uint8Array(l);for(;r<f&&i<f;)if(t=e[r++],n=1+(127&t),128&t){for(a=0;a<l;++a)o[a]=e[r++];for(a=0;a<n;++a)s.set(o,i+a*l);i+=l*n}else{for(n*=l,a=0;a<n;++a)s[i+a]=e[r++];i+=n}}else s=e.subarray(r,r+=c?i.width*i.height:f);switch((48&i.flags)>>4){default:case 2:u=0,_=1,y=i.width,w=0,b=1,p=i.height;break;case 0:u=0,_=1,y=i.width,w=i.height-1,b=-1,p=-1;break;case 3:u=i.width-1,_=-1,y=-1,w=0,b=1,p=i.height;break;case 1:u=i.width-1,_=-1,y=-1,w=i.height-1,b=-1,p=-1}const m="_getImageData"+(g?"Grey":"")+i.pixel_size+"bits",A=o[m](i,d,s,w,b,p,u,_,y);t.getEngine()._uploadDataToTextureDirectly(t,A)}const o={GetTGAHeader:a,UploadContent:i,_getImageData8bits:function(t,e,r,n,a,i,o,s,h){const c=r,g=e,l=t.width,f=t.height;let d,u,w,_=0;const b=new Uint8Array(l*f*4);for(w=n;w!==i;w+=a)for(u=o;u!==h;u+=s,_++)d=c[_],b[4*(u+l*w)+3]=255,b[4*(u+l*w)+2]=g[3*d+0],b[4*(u+l*w)+1]=g[3*d+1],b[4*(u+l*w)+0]=g[3*d+2];return b},_getImageData16bits:function(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,d,u,w=0;const _=new Uint8Array(g*l*4);for(u=n;u!==i;u+=a)for(d=o;d!==h;d+=s,w+=2){f=c[w+0]+(c[w+1]<<8);const t=255*((31744&f)>>10)/31|0,e=255*((992&f)>>5)/31|0,r=255*(31&f)/31|0;_[4*(d+g*u)+0]=t,_[4*(d+g*u)+1]=e,_[4*(d+g*u)+2]=r,_[4*(d+g*u)+3]=32768&f?0:255}return _},_getImageData24bits:function(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,d,u=0;const w=new Uint8Array(g*l*4);for(d=n;d!==i;d+=a)for(f=o;f!==h;f+=s,u+=3)w[4*(f+g*d)+3]=255,w[4*(f+g*d)+2]=c[u+0],w[4*(f+g*d)+1]=c[u+1],w[4*(f+g*d)+0]=c[u+2];return w},_getImageData32bits:function(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,d,u=0;const w=new Uint8Array(g*l*4);for(d=n;d!==i;d+=a)for(f=o;f!==h;f+=s,u+=4)w[4*(f+g*d)+2]=c[u+0],w[4*(f+g*d)+1]=c[u+1],w[4*(f+g*d)+0]=c[u+2],w[4*(f+g*d)+3]=c[u+3];return w},_getImageDataGrey8bits:function(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,d,u,w=0;const _=new Uint8Array(g*l*4);for(u=n;u!==i;u+=a)for(d=o;d!==h;d+=s,w++)f=c[w],_[4*(d+g*u)+0]=f,_[4*(d+g*u)+1]=f,_[4*(d+g*u)+2]=f,_[4*(d+g*u)+3]=255;return _},_getImageDataGrey16bits:function(t,e,r,n,a,i,o,s,h){const c=r,g=t.width,l=t.height;let f,d,u=0;const w=new Uint8Array(g*l*4);for(d=n;d!==i;d+=a)for(f=o;f!==h;f+=s,u+=2)w[4*(f+g*d)+0]=c[u+0],w[4*(f+g*d)+1]=c[u+0],w[4*(f+g*d)+2]=c[u+0],w[4*(f+g*d)+3]=c[u+1];return w}};class s{constructor(){this.supportCascades=!1}loadCubeData(){throw".env not supported in Cube."}loadData(t,e,r){const n=new Uint8Array(t.buffer,t.byteOffset,t.byteLength),o=a(n);r(o.width,o.height,e.generateMipMaps,!1,()=>{i(e,n)})}}}}]);