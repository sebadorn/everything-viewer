"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[2424],{26885:(t,e,n)=>{n.d(e,{TorrentView:()=>a});var s=n(42109),i=n(15287);class a extends i.P{constructor(t){super(t,"torrent")}_build(t){const e=["info","infoBuffer","infoHashBuffer","lastPieceLength","pieceLength"],n=document.createElement("ul");n.classList.add("torrent-info");for(const i in t){if(e.includes(i))continue;let a=t[i],l={};if("length"===i){a=`${a} B <span class="icon">arrow_right_alt</span> ${s.UI.formatSize(a)}`,l.asHTML=!0}else"infoHash"===i&&(a="SHA1: "+a);if(Array.isArray(a)){if(0===a.length)continue;if("files"===i)a=this._buildFileTable(a);else if("pieces"===i){const t=document.createElement("textarea");t.setAttribute("readonly","readonly"),t.value=a.join("\n"),a=t}else a=s.UI.buildListOrdered(a)}else if("string"==typeof a&&0===a.length)continue;const o=this._buildItem(i,a,l);n.append(o)}return n}_buildFileTable(t){const e=s.UI.build('\n\t\t\t<table class="files">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th class="file-name">Name</th>\n\t\t\t\t\t\t<th class="file-path">Path</th>\n\t\t\t\t\t\t<th class="file-size">Size</th>\n\t\t\t\t\t\t<th class="file-offset">Offset</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t</table>\n\t\t'),n=document.createElement("tbody");for(let e=0;e<t.length;e++){const i=t[e],a=document.createElement("td");a.classList.add("file-name"),a.textContent=i.name;const l=document.createElement("td");l.classList.add("file-path"),l.textContent=i.path;const o=document.createElement("td");o.classList.add("file-size"),o.textContent=s.UI.formatSize(i.length),o.setAttribute("title",i.length+" B");const c=document.createElement("td");c.classList.add("file-offset"),c.textContent=s.UI.formatSize(i.offset),c.setAttribute("title",i.offset+" B");const r=document.createElement("tr");r.append(a,l,o,c),n.append(r)}return e.append(n),e}_buildItem(t,e,n){const s=document.createElement("div");s.classList.add("name"),s.textContent=this._getTitle(t);const i=document.createElement("div");i.classList.add("value"),e instanceof HTMLElement?i.append(e):n.asHTML?i.innerHTML=e:i.textContent=e;const a=document.createElement("li");return a.classList.add("torrent-info-item",`key-${t}`),a.append(s,i),a}_getTitle(t){return{announce:"Announce / Tracker URLs",comment:"Comment",created:"Created",createdBy:"Created By",files:"Files",infoHash:"Info Hash",length:"Size",name:"Name",pieces:"Pieces"}[t]||t}async load(){const t=await this.parser.parse();console.debug("[TorrentView.load]",t),this.buildMetaNode(),this.nodeView.append(this._build(t)),this._openWindow()}}}}]);