"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[5682],{15682:(e,a,i)=>{i.r(a),i.d(a,{FlowGraphSetVariableBlock:()=>l});var r=i(56552),t=i(33006),s=i(4720);class l extends t.w{constructor(e){if(super(e),!e.variable&&!e.variables)throw new Error("FlowGraphSetVariableBlock: variable/variables is not defined");if(e.variables&&e.variable)throw new Error("FlowGraphSetVariableBlock: variable and variables are both defined");if(e.variables)for(const a of e.variables)this.registerDataInput(a,s.Vv);else this.registerDataInput("value",s.Vv)}_execute(e,a){if(this.config?.variables)for(const a of this.config.variables)this._saveVariable(e,a);else this._saveVariable(e,this.config?.variable,"value");this.out._activateSignal(e)}_saveVariable(e,a,i){const r=e._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const i of r){const t=e.assetsContext.animationGroups.find(e=>e.uniqueId==i);if(t)for(const s of t.targetedAnimations)if(s.target===e&&s.animation.targetProperty===a){t.stop();const a=r.indexOf(i);a>-1&&r.splice(a,1),e._setGlobalContextVariable("currentlyRunningAnimationGroups",r);break}}const t=this.getDataInput(i||a)?.getValue(e);e.setVariable(a,t)}getClassName(){return"FlowGraphSetVariableBlock"}serialize(e){super.serialize(e),e.config.variable=this.config?.variable}}(0,r.Y5)("FlowGraphSetVariableBlock",l)}}]);