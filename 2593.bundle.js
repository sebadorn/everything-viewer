"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[2593],{52593:(e,s,r)=>{r.d(s,{KHR_materials_pbrSpecularGlossiness:()=>n});var a=r(26041),t=r(23975),l=r(98556),o=r(37812);const i="KHR_materials_pbrSpecularGlossiness";class n{constructor(e){this.name=i,this.order=200,this._loader=e,this.enabled=this._loader.isExtensionUsed(i)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,s,r){return l.BT.LoadExtensionAsync(e,s,this.name,async(a,t)=>{const l=new Array;return l.push(this._loader.loadMaterialBasePropertiesAsync(e,s,r)),l.push(this._loadSpecularGlossinessPropertiesAsync(a,t,r)),this._loader.loadMaterialAlphaProperties(e,s,r),await Promise.all(l).then(()=>{})})}_loadSpecularGlossinessPropertiesAsync(e,s,r){if(!(r instanceof t.PBRMaterial))throw new Error(`${e}: Material type not supported`);const l=new Array;return r.metallic=null,r.roughness=null,s.diffuseFactor?(r.albedoColor=a.v9.FromArray(s.diffuseFactor),r.alpha=s.diffuseFactor[3]):r.albedoColor=a.v9.White(),r.reflectivityColor=s.specularFactor?a.v9.FromArray(s.specularFactor):a.v9.White(),r.microSurface=null==s.glossinessFactor?1:s.glossinessFactor,s.diffuseTexture&&l.push(this._loader.loadTextureInfoAsync(`${e}/diffuseTexture`,s.diffuseTexture,e=>{e.name=`${r.name} (Diffuse)`,r.albedoTexture=e})),s.specularGlossinessTexture&&(l.push(this._loader.loadTextureInfoAsync(`${e}/specularGlossinessTexture`,s.specularGlossinessTexture,e=>{e.name=`${r.name} (Specular Glossiness)`,r.reflectivityTexture=e,r.reflectivityTexture.hasAlpha=!0})),r.useMicroSurfaceFromReflectivityMapAlpha=!0),Promise.all(l).then(()=>{})}}(0,o.Hg)(i),(0,o.Ye)(i,!0,e=>new n(e))}}]);