"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[1578],{81578:(e,s,t)=>{t.d(s,{KHR_materials_volume:()=>i});var n=t(23975),a=t(98556),r=t(37812);const o="KHR_materials_volume";class i{constructor(e){this.name=o,this.order=173,this._loader=e,this.enabled=this._loader.isExtensionUsed(o),this.enabled&&this._loader._disableInstancedMesh++}dispose(){this.enabled&&this._loader._disableInstancedMesh--,this._loader=null}loadMaterialPropertiesAsync(e,s,t){return a.BT.LoadExtensionAsync(e,s,this.name,async(n,a)=>{const r=new Array;return r.push(this._loader.loadMaterialPropertiesAsync(e,s,t)),r.push(this._loadVolumePropertiesAsync(n,s,t,a)),await Promise.all(r).then(()=>{})})}_loadVolumePropertiesAsync(e,s,t,a){if(!(t instanceof n.Y))throw new Error(`${e}: Material type not supported`);if(!t.subSurface.isRefractionEnabled&&!t.subSurface.isTranslucencyEnabled||!a.thicknessFactor)return Promise.resolve();t.subSurface.volumeIndexOfRefraction=t.indexOfRefraction;const r=void 0!==a.attenuationDistance?a.attenuationDistance:Number.MAX_VALUE;return t.subSurface.tintColorAtDistance=r,void 0!==a.attenuationColor&&3==a.attenuationColor.length&&t.subSurface.tintColor.copyFromFloats(a.attenuationColor[0],a.attenuationColor[1],a.attenuationColor[2]),t.subSurface.minimumThickness=0,t.subSurface.maximumThickness=a.thicknessFactor,t.subSurface.useThicknessAsDepth=!0,a.thicknessTexture?(a.thicknessTexture.nonColorData=!0,this._loader.loadTextureInfoAsync(`${e}/thicknessTexture`,a.thicknessTexture).then(e=>{e.name=`${t.name} (Thickness)`,t.subSurface.thicknessTexture=e,t.subSurface.useGltfStyleTextures=!0})):Promise.resolve()}}(0,r.Hg)(o),(0,r.Ye)(o,!0,e=>new i(e))}}]);