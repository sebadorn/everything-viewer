"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[1578],{81578:(e,s,t)=>{t.d(s,{KHR_materials_volume:()=>i});var n=t(23975),r=t(45316),a=t(37812);const o="KHR_materials_volume";class i{constructor(e){this.name=o,this.order=173,this._loader=e,this.enabled=this._loader.isExtensionUsed(o),this.enabled&&this._loader._disableInstancedMesh++}dispose(){this.enabled&&this._loader._disableInstancedMesh--,this._loader=null}loadMaterialPropertiesAsync(e,s,t){return r.BT.LoadExtensionAsync(e,s,this.name,((n,r)=>{const a=new Array;return a.push(this._loader.loadMaterialPropertiesAsync(e,s,t)),a.push(this._loadVolumePropertiesAsync(n,s,t,r)),Promise.all(a).then((()=>{}))}))}_loadVolumePropertiesAsync(e,s,t,r){if(!(t instanceof n.Y))throw new Error(`${e}: Material type not supported`);if(!t.subSurface.isRefractionEnabled&&!t.subSurface.isTranslucencyEnabled||!r.thicknessFactor)return Promise.resolve();t.subSurface.volumeIndexOfRefraction=t.indexOfRefraction;const a=void 0!==r.attenuationDistance?r.attenuationDistance:Number.MAX_VALUE;return t.subSurface.tintColorAtDistance=a,void 0!==r.attenuationColor&&3==r.attenuationColor.length&&t.subSurface.tintColor.copyFromFloats(r.attenuationColor[0],r.attenuationColor[1],r.attenuationColor[2]),t.subSurface.minimumThickness=0,t.subSurface.maximumThickness=r.thicknessFactor,t.subSurface.useThicknessAsDepth=!0,r.thicknessTexture?(r.thicknessTexture.nonColorData=!0,this._loader.loadTextureInfoAsync(`${e}/thicknessTexture`,r.thicknessTexture).then((e=>{e.name=`${t.name} (Thickness)`,t.subSurface.thicknessTexture=e,t.subSurface.useGltfStyleTextures=!0}))):Promise.resolve()}}(0,a.Hg)(o),(0,a.Ye)(o,!0,(e=>new i(e)))}}]);