"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[1578],{81578:(e,s,t)=>{t.d(s,{KHR_materials_volume:()=>o});var n=t(26041),r=t(98556),a=t(37812);const i="KHR_materials_volume";class o{constructor(e){this.name=i,this.order=173,this._loader=e,this.enabled=this._loader.isExtensionUsed(i),this.enabled&&this._loader._disableInstancedMesh++}dispose(){this.enabled&&this._loader._disableInstancedMesh--,this._loader=null}loadMaterialPropertiesAsync(e,s,t){return r.BT.LoadExtensionAsync(e,s,this.name,async(n,r)=>{const a=new Array;return a.push(this._loader.loadMaterialPropertiesAsync(e,s,t)),a.push(this._loadVolumePropertiesAsync(n,s,t,r)),await Promise.all(a).then(()=>{})})}_loadVolumePropertiesAsync(e,s,t,r){const a=this._loader._getOrCreateMaterialAdapter(t);if(0===a.transmissionWeight&&0===a.subsurfaceWeight||!r.thicknessFactor)return Promise.resolve();a.transmissionDepth=void 0!==r.attenuationDistance?r.attenuationDistance:Number.MAX_VALUE,a.transmissionColor=void 0!==r.attenuationColor&&3==r.attenuationColor.length?n.v9.FromArray(r.attenuationColor):n.v9.White(),a.volumeThickness=r.thicknessFactor??0;const i=new Array;return r.thicknessTexture&&(r.thicknessTexture.nonColorData=!0,i.push(this._loader.loadTextureInfoAsync(`${e}/thicknessTexture`,r.thicknessTexture,e=>{e.name=`${t.name} (Thickness)`,a.volumeThicknessTexture=e}))),Promise.all(i).then(()=>{})}}(0,a.Hg)(i),(0,a.Ye)(i,!0,e=>new o(e))}}]);