"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[2093],{2093:(e,t,i)=>{i.d(t,{F:()=>v});var s=i(75524),r=i(79259),a=i(17931),n=i(48802),o=i(26041),l=i(95616),h=i(97667),u=i(76911),T=i(31088),p=i(28986),d=i(79526),f=i(21644),E=i(56552),_=i(10633),m=i(82565),c=i(97841),A=i(30492),R=i(80467),x=i(26877),S=i(18598),P=i(79384),C=i(98715);const g={effect:null,subMesh:null};class I extends((0,P.F)(d.M)){}class L extends((0,u.W)(I)){constructor(e){super(e),this.DIFFUSE=!1,this.DIFFUSEDIRECTUV=0,this.BAKED_VERTEX_ANIMATION_TEXTURE=!1,this.AMBIENT=!1,this.AMBIENTDIRECTUV=0,this.OPACITY=!1,this.OPACITYDIRECTUV=0,this.OPACITYRGB=!1,this.REFLECTION=!1,this.EMISSIVE=!1,this.EMISSIVEDIRECTUV=0,this.SPECULAR=!1,this.SPECULARDIRECTUV=0,this.BUMP=!1,this.BUMPDIRECTUV=0,this.PARALLAX=!1,this.PARALLAX_RHS=!1,this.PARALLAXOCCLUSION=!1,this.SPECULAROVERALPHA=!1,this.CLIPPLANE=!1,this.CLIPPLANE2=!1,this.CLIPPLANE3=!1,this.CLIPPLANE4=!1,this.CLIPPLANE5=!1,this.CLIPPLANE6=!1,this.ALPHATEST=!1,this.DEPTHPREPASS=!1,this.ALPHAFROMDIFFUSE=!1,this.POINTSIZE=!1,this.FOG=!1,this.SPECULARTERM=!1,this.DIFFUSEFRESNEL=!1,this.OPACITYFRESNEL=!1,this.REFLECTIONFRESNEL=!1,this.REFRACTIONFRESNEL=!1,this.EMISSIVEFRESNEL=!1,this.FRESNEL=!1,this.NORMAL=!1,this.TANGENT=!1,this.VERTEXCOLOR=!1,this.VERTEXALPHA=!1,this.NUM_BONE_INFLUENCERS=0,this.BonesPerMesh=0,this.BONETEXTURE=!1,this.BONES_VELOCITY_ENABLED=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.INSTANCESCOLOR=!1,this.GLOSSINESS=!1,this.ROUGHNESS=!1,this.EMISSIVEASILLUMINATION=!1,this.LINKEMISSIVEWITHDIFFUSE=!1,this.REFLECTIONFRESNELFROMSPECULAR=!1,this.LIGHTMAP=!1,this.LIGHTMAPDIRECTUV=0,this.OBJECTSPACE_NORMALMAP=!1,this.USELIGHTMAPASSHADOWMAP=!1,this.REFLECTIONMAP_3D=!1,this.REFLECTIONMAP_SPHERICAL=!1,this.REFLECTIONMAP_PLANAR=!1,this.REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFLECTIONMAP_CUBIC=!1,this.USE_LOCAL_REFRACTIONMAP_CUBIC=!1,this.REFLECTIONMAP_PROJECTION=!1,this.REFLECTIONMAP_SKYBOX=!1,this.REFLECTIONMAP_EXPLICIT=!1,this.REFLECTIONMAP_EQUIRECTANGULAR=!1,this.REFLECTIONMAP_EQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_MIRROREDEQUIRECTANGULAR_FIXED=!1,this.REFLECTIONMAP_OPPOSITEZ=!1,this.INVERTCUBICMAP=!1,this.LOGARITHMICDEPTH=!1,this.REFRACTION=!1,this.REFRACTIONMAP_3D=!1,this.REFLECTIONOVERALPHA=!1,this.TWOSIDEDLIGHTING=!1,this.SHADOWFLOAT=!1,this.MORPHTARGETS=!1,this.MORPHTARGETS_POSITION=!1,this.MORPHTARGETS_NORMAL=!1,this.MORPHTARGETS_TANGENT=!1,this.MORPHTARGETS_UV=!1,this.MORPHTARGETS_UV2=!1,this.MORPHTARGETS_COLOR=!1,this.MORPHTARGETTEXTURE_HASPOSITIONS=!1,this.MORPHTARGETTEXTURE_HASNORMALS=!1,this.MORPHTARGETTEXTURE_HASTANGENTS=!1,this.MORPHTARGETTEXTURE_HASUVS=!1,this.MORPHTARGETTEXTURE_HASUV2S=!1,this.MORPHTARGETTEXTURE_HASCOLORS=!1,this.NUM_MORPH_INFLUENCERS=0,this.MORPHTARGETS_TEXTURE=!1,this.NONUNIFORMSCALING=!1,this.PREMULTIPLYALPHA=!1,this.ALPHATEST_AFTERALLALPHACOMPUTATIONS=!1,this.ALPHABLEND=!0,this.PREPASS=!1,this.PREPASS_COLOR=!1,this.PREPASS_COLOR_INDEX=-1,this.PREPASS_IRRADIANCE=!1,this.PREPASS_IRRADIANCE_INDEX=-1,this.PREPASS_ALBEDO=!1,this.PREPASS_ALBEDO_INDEX=-1,this.PREPASS_ALBEDO_SQRT=!1,this.PREPASS_ALBEDO_SQRT_INDEX=-1,this.PREPASS_DEPTH=!1,this.PREPASS_DEPTH_INDEX=-1,this.PREPASS_SCREENSPACE_DEPTH=!1,this.PREPASS_SCREENSPACE_DEPTH_INDEX=-1,this.PREPASS_NORMALIZED_VIEW_DEPTH=!1,this.PREPASS_NORMALIZED_VIEW_DEPTH_INDEX=-1,this.PREPASS_NORMAL=!1,this.PREPASS_NORMAL_INDEX=-1,this.PREPASS_NORMAL_WORLDSPACE=!1,this.PREPASS_WORLD_NORMAL=!1,this.PREPASS_WORLD_NORMAL_INDEX=-1,this.PREPASS_POSITION=!1,this.PREPASS_POSITION_INDEX=-1,this.PREPASS_LOCAL_POSITION=!1,this.PREPASS_LOCAL_POSITION_INDEX=-1,this.PREPASS_VELOCITY=!1,this.PREPASS_VELOCITY_INDEX=-1,this.PREPASS_VELOCITY_LINEAR=!1,this.PREPASS_VELOCITY_LINEAR_INDEX=-1,this.PREPASS_REFLECTIVITY=!1,this.PREPASS_REFLECTIVITY_INDEX=-1,this.SCENE_MRT_COUNT=0,this.RGBDLIGHTMAP=!1,this.RGBDREFLECTION=!1,this.RGBDREFRACTION=!1,this.MULTIVIEW=!1,this.ORDER_INDEPENDENT_TRANSPARENCY=!1,this.ORDER_INDEPENDENT_TRANSPARENCY_16BITS=!1,this.CAMERA_ORTHOGRAPHIC=!1,this.CAMERA_PERSPECTIVE=!1,this.AREALIGHTSUPPORTED=!0,this.USE_VERTEX_PULLING=!1,this.CLUSTLIGHT_SLICES=0,this.CLUSTLIGHT_BATCH=0,this.IS_REFLECTION_LINEAR=!1,this.IS_REFRACTION_LINEAR=!1,this.DECAL_AFTER_DETAIL=!1,this.rebuild()}}class b extends((0,C.O)(f.E)){}class v extends b{get isPrePassCapable(){return!this.disableDepthWrite}get canRenderToMRT(){return!0}constructor(e,t,i=!1){super(e,t,void 0,i||v.ForceGLSL),this._diffuseTexture=null,this._ambientTexture=null,this._opacityTexture=null,this._reflectionTexture=null,this._emissiveTexture=null,this._specularTexture=null,this._bumpTexture=null,this._lightmapTexture=null,this._refractionTexture=null,this.ambientColor=new o.v9(0,0,0),this.diffuseColor=new o.v9(1,1,1),this.specularColor=new o.v9(1,1,1),this.emissiveColor=new o.v9(0,0,0),this.specularPower=64,this._useAlphaFromDiffuseTexture=!1,this._useEmissiveAsIllumination=!1,this._linkEmissiveWithDiffuse=!1,this._useSpecularOverAlpha=!1,this._useReflectionOverAlpha=!1,this._disableLighting=!1,this._useObjectSpaceNormalMap=!1,this._useParallax=!1,this._useParallaxOcclusion=!1,this.parallaxScaleBias=.05,this._roughness=0,this.indexOfRefraction=.98,this.invertRefractionY=!0,this.alphaCutOff=.4,this._useLightmapAsShadowmap=!1,this._useReflectionFresnelFromSpecular=!1,this._useGlossinessFromSpecularMapAlpha=!1,this._maxSimultaneousLights=4,this._invertNormalMapX=!1,this._invertNormalMapY=!1,this._twoSidedLighting=!1,this._applyDecalMapAfterDetailMap=!1,this._shadersLoaded=!1,this._renderTargets=new a.L(16),this._globalAmbientColor=new o.v9(0,0,0),this._cacheHasRenderTargetTextures=!1,this.detailMap=new c.c(this),this._attachImageProcessingConfiguration(null),this.prePassConfiguration=new h.J,this.getRenderTargetTextures=()=>(this._renderTargets.reset(),v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget&&this._renderTargets.push(this._reflectionTexture),v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget&&this._renderTargets.push(this._refractionTexture),this._eventInfo.renderTargets=this._renderTargets,this._callbackPluginEventFillRenderTargetTextures(this._eventInfo),this._renderTargets)}get hasRenderTargetTextures(){return!!(v.ReflectionTextureEnabled&&this._reflectionTexture&&this._reflectionTexture.isRenderTarget)||(!!(v.RefractionTextureEnabled&&this._refractionTexture&&this._refractionTexture.isRenderTarget)||this._cacheHasRenderTargetTextures)}getClassName(){return"StandardMaterial"}needAlphaBlending(){return this._hasTransparencyMode?this._transparencyModeIsBlend:!this._disableAlphaBlending&&(this.alpha<1||null!=this._opacityTexture||this._shouldUseAlphaFromDiffuseTexture()||this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled)}needAlphaTesting(){return this._hasTransparencyMode?this._transparencyModeIsTest:this._hasAlphaChannel()&&(null==this._transparencyMode||this._transparencyMode===p.i.MATERIAL_ALPHATEST)}_shouldUseAlphaFromDiffuseTexture(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha&&this._useAlphaFromDiffuseTexture&&this._transparencyMode!==p.i.MATERIAL_OPAQUE}_hasAlphaChannel(){return null!=this._diffuseTexture&&this._diffuseTexture.hasAlpha||null!=this._opacityTexture}getAlphaTestTexture(){return this._diffuseTexture}isReadyForSubMesh(e,t,s=!1){this._uniformBufferLayoutBuilt||this.buildUniformLayout();const r=t._drawWrapper;if(r.effect&&this.isFrozen&&r._wasPreviouslyReady&&r._wasPreviouslyUsingInstances===s)return!0;t.materialDefines||(this._callbackPluginEventGeneric(4,this._eventInfo),t.materialDefines=new L(this._eventInfo.defineNames));const a=this.getScene(),n=t.materialDefines;if(this._isReadyForSubMesh(t))return!0;const o=a.getEngine();n._needNormals=(0,R.az)(a,e,n,!0,this._maxSimultaneousLights,this._disableLighting),(0,R.VO)(a,n);const u=this.needAlphaBlendingForMesh(e)&&this.getScene().useOrderIndependentTransparency;if((0,R.N4)(a,n,this.canRenderToMRT&&!u),(0,R.Nc)(a,n,u),S.m.PrepareDefines(o.currentRenderPassId,e,n),n._areTexturesDirty){this._eventInfo.hasRenderTargetTextures=!1,this._callbackPluginEventHasRenderTargetTextures(this._eventInfo),this._cacheHasRenderTargetTextures=this._eventInfo.hasRenderTargetTextures,n._needUVs=!1;for(let e=1;e<=6;++e)n["MAINUV"+e]=!1;if(a.texturesEnabled){if(n.DIFFUSEDIRECTUV=0,n.BUMPDIRECTUV=0,n.AMBIENTDIRECTUV=0,n.OPACITYDIRECTUV=0,n.EMISSIVEDIRECTUV=0,n.SPECULARDIRECTUV=0,n.LIGHTMAPDIRECTUV=0,this._diffuseTexture&&v.DiffuseTextureEnabled){if(!this._diffuseTexture.isReadyOrNotBlocking())return!1;(0,R.YT)(this._diffuseTexture,n,"DIFFUSE")}else n.DIFFUSE=!1;if(this._ambientTexture&&v.AmbientTextureEnabled){if(!this._ambientTexture.isReadyOrNotBlocking())return!1;(0,R.YT)(this._ambientTexture,n,"AMBIENT")}else n.AMBIENT=!1;if(this._opacityTexture&&v.OpacityTextureEnabled){if(!this._opacityTexture.isReadyOrNotBlocking())return!1;(0,R.YT)(this._opacityTexture,n,"OPACITY"),n.OPACITYRGB=this._opacityTexture.getAlphaFromRGB}else n.OPACITY=!1;if(this._reflectionTexture&&v.ReflectionTextureEnabled?(n.ROUGHNESS=this._roughness>0,n.REFLECTIONOVERALPHA=this._useReflectionOverAlpha):(n.ROUGHNESS=!1,n.REFLECTIONOVERALPHA=!1),!(0,R.kz)(a,this._reflectionTexture,n))return!1;if(this._emissiveTexture&&v.EmissiveTextureEnabled){if(!this._emissiveTexture.isReadyOrNotBlocking())return!1;(0,R.YT)(this._emissiveTexture,n,"EMISSIVE")}else n.EMISSIVE=!1;if(this._lightmapTexture&&v.LightmapTextureEnabled){if(!this._lightmapTexture.isReadyOrNotBlocking())return!1;(0,R.YT)(this._lightmapTexture,n,"LIGHTMAP"),n.USELIGHTMAPASSHADOWMAP=this._useLightmapAsShadowmap,n.RGBDLIGHTMAP=this._lightmapTexture.isRGBD}else n.LIGHTMAP=!1;if(this._specularTexture&&v.SpecularTextureEnabled){if(!this._specularTexture.isReadyOrNotBlocking())return!1;(0,R.YT)(this._specularTexture,n,"SPECULAR"),n.GLOSSINESS=this._useGlossinessFromSpecularMapAlpha}else n.SPECULAR=!1;if(a.getEngine().getCaps().standardDerivatives&&this._bumpTexture&&v.BumpTextureEnabled){if(!this._bumpTexture.isReady())return!1;(0,R.YT)(this._bumpTexture,n,"BUMP"),n.PARALLAX=this._useParallax,n.PARALLAX_RHS=a.useRightHandedSystem,n.PARALLAXOCCLUSION=this._useParallaxOcclusion,n.OBJECTSPACE_NORMALMAP=this._useObjectSpaceNormalMap}else n.BUMP=!1,n.PARALLAX=!1,n.PARALLAX_RHS=!1,n.PARALLAXOCCLUSION=!1;if(this._refractionTexture&&v.RefractionTextureEnabled){if(!this._refractionTexture.isReadyOrNotBlocking())return!1;n._needUVs=!0,n.REFRACTION=!0,n.REFRACTIONMAP_3D=this._refractionTexture.isCube,n.RGBDREFRACTION=this._refractionTexture.isRGBD,n.USE_LOCAL_REFRACTIONMAP_CUBIC=!!this._refractionTexture.boundingBoxSize}else n.REFRACTION=!1;n.TWOSIDEDLIGHTING=!this._backFaceCulling&&this._twoSidedLighting}else n.DIFFUSE=!1,n.AMBIENT=!1,n.OPACITY=!1,n.REFLECTION=!1,n.EMISSIVE=!1,n.LIGHTMAP=!1,n.BUMP=!1,n.REFRACTION=!1;n.ALPHAFROMDIFFUSE=this._shouldUseAlphaFromDiffuseTexture(),n.EMISSIVEASILLUMINATION=this._useEmissiveAsIllumination,n.LINKEMISSIVEWITHDIFFUSE=this._linkEmissiveWithDiffuse,n.SPECULAROVERALPHA=this._useSpecularOverAlpha,n.PREMULTIPLYALPHA=7===this.alphaMode||8===this.alphaMode,n.ALPHATEST_AFTERALLALPHACOMPUTATIONS=null!==this.transparencyMode,n.ALPHABLEND=null===this.transparencyMode||this.needAlphaBlendingForMesh(e)}if(this._eventInfo.isReadyForSubMesh=!0,this._eventInfo.defines=n,this._eventInfo.subMesh=t,this._callbackPluginEventIsReadyForSubMesh(this._eventInfo),!this._eventInfo.isReadyForSubMesh)return!1;if(n._areImageProcessingDirty&&this._imageProcessingConfiguration){if(!this._imageProcessingConfiguration.isReady())return!1;this._imageProcessingConfiguration.prepareDefines(n),n.IS_REFLECTION_LINEAR=null!=this.reflectionTexture&&!this.reflectionTexture.gammaSpace,n.IS_REFRACTION_LINEAR=null!=this.refractionTexture&&!this.refractionTexture.gammaSpace}if(n._areFresnelDirty&&(v.FresnelEnabled?(this._diffuseFresnelParameters||this._opacityFresnelParameters||this._emissiveFresnelParameters||this._refractionFresnelParameters||this._reflectionFresnelParameters)&&(n.DIFFUSEFRESNEL=this._diffuseFresnelParameters&&this._diffuseFresnelParameters.isEnabled,n.OPACITYFRESNEL=this._opacityFresnelParameters&&this._opacityFresnelParameters.isEnabled,n.REFLECTIONFRESNEL=this._reflectionFresnelParameters&&this._reflectionFresnelParameters.isEnabled,n.REFLECTIONFRESNELFROMSPECULAR=this._useReflectionFresnelFromSpecular,n.REFRACTIONFRESNEL=this._refractionFresnelParameters&&this._refractionFresnelParameters.isEnabled,n.EMISSIVEFRESNEL=this._emissiveFresnelParameters&&this._emissiveFresnelParameters.isEnabled,n._needNormals=!0,n.FRESNEL=!0):n.FRESNEL=!1),n.AREALIGHTUSED||n.CLUSTLIGHT_BATCH)for(let t=0;t<e.lightSources.length;t++)if(!e.lightSources[t]._isReady())return!1;(0,R.fm)(e,a,this._useLogarithmicDepth,this.pointsCloud,this.fogEnabled,this.needAlphaTestingForMesh(e),n,this._applyDecalMapAfterDetailMap,this._useVertexPulling,t.getRenderingMesh(),this._setVertexOutputInvariant),(0,R.OR)(a,o,this,n,s,null,t.getRenderingMesh().hasThinInstances),this._eventInfo.defines=n,this._eventInfo.mesh=e,this._callbackPluginEventPrepareDefinesBeforeAttributes(this._eventInfo),(0,R.qB)(e,n,!0,!0,!0),this._callbackPluginEventPrepareDefines(this._eventInfo);let p=!1;if(n.isDirty){const s=n._areLightsDisposed;n.markAsProcessed();const r=new m.J;n.REFLECTION&&r.addFallback(0,"REFLECTION"),n.SPECULAR&&r.addFallback(0,"SPECULAR"),n.BUMP&&r.addFallback(0,"BUMP"),n.PARALLAX&&r.addFallback(1,"PARALLAX"),n.PARALLAX_RHS&&r.addFallback(1,"PARALLAX_RHS"),n.PARALLAXOCCLUSION&&r.addFallback(0,"PARALLAXOCCLUSION"),n.SPECULAROVERALPHA&&r.addFallback(0,"SPECULAROVERALPHA"),n.FOG&&r.addFallback(1,"FOG"),n.POINTSIZE&&r.addFallback(0,"POINTSIZE"),n.LOGARITHMICDEPTH&&r.addFallback(0,"LOGARITHMICDEPTH"),(0,R.c4)(n,r,this._maxSimultaneousLights),n.SPECULARTERM&&r.addFallback(0,"SPECULARTERM"),n.DIFFUSEFRESNEL&&r.addFallback(1,"DIFFUSEFRESNEL"),n.OPACITYFRESNEL&&r.addFallback(2,"OPACITYFRESNEL"),n.REFLECTIONFRESNEL&&r.addFallback(3,"REFLECTIONFRESNEL"),n.EMISSIVEFRESNEL&&r.addFallback(4,"EMISSIVEFRESNEL"),n.FRESNEL&&r.addFallback(4,"FRESNEL"),n.MULTIVIEW&&r.addFallback(0,"MULTIVIEW");const u=[l.R.PositionKind];n.NORMAL&&u.push(l.R.NormalKind),n.TANGENT&&u.push(l.R.TangentKind);for(let e=1;e<=6;++e)n["UV"+e]&&u.push(`uv${1===e?"":e}`);n.VERTEXCOLOR&&u.push(l.R.ColorKind),(0,R.ni)(u,e,n,r),(0,R.ER)(u,n),(0,R.IF)(u,e,n),(0,R.J2)(u,e,n);let d="default";const f=["world","view","viewProjection","vEyePosition","vLightsType","vAmbientColor","vDiffuseColor","vSpecularColor","vEmissiveColor","visibility","vFogInfos","vFogColor","pointSize","vDiffuseInfos","vAmbientInfos","vOpacityInfos","vEmissiveInfos","vSpecularInfos","vBumpInfos","vLightmapInfos","vRefractionInfos","mBones","diffuseMatrix","ambientMatrix","opacityMatrix","emissiveMatrix","specularMatrix","bumpMatrix","normalMatrix","lightmapMatrix","refractionMatrix","diffuseLeftColor","diffuseRightColor","opacityParts","reflectionLeftColor","reflectionRightColor","emissiveLeftColor","emissiveRightColor","refractionLeftColor","refractionRightColor","vRefractionPosition","vRefractionSize","logarithmicDepthConstant","vTangentSpaceParams","alphaCutOff","boneTextureWidth","morphTargetTextureInfo","morphTargetTextureIndices","cameraInfo"],E=["diffuseSampler","ambientSampler","opacitySampler","reflectionCubeSampler","reflection2DSampler","emissiveSampler","specularSampler","bumpSampler","lightmapSampler","refractionCubeSampler","refraction2DSampler","boneSampler","morphTargets","oitDepthSampler","oitFrontColorSampler","areaLightsLTC1Sampler","areaLightsLTC2Sampler"];(0,R.B1)(f,E,!1);const _=["Material","Scene","Mesh"],c={maxSimultaneousLights:this._maxSimultaneousLights,maxSimultaneousMorphTargets:n.NUM_MORPH_INFLUENCERS};this._eventInfo.fallbacks=r,this._eventInfo.fallbackRank=0,this._eventInfo.defines=n,this._eventInfo.uniforms=f,this._eventInfo.attributes=u,this._eventInfo.samplers=E,this._eventInfo.uniformBuffersNames=_,this._eventInfo.customCode=void 0,this._eventInfo.mesh=e,this._eventInfo.indexParameters=c,this._callbackPluginEventGeneric(128,this._eventInfo),S.m.AddUniformsAndSamplers(f,E),h.J.AddUniforms(f),h.J.AddSamplers(E),T.p&&(T.p.PrepareUniforms(f,n),T.p.PrepareSamplers(E,n)),(0,R.Bb)({uniformsNames:f,uniformBuffersNames:_,samplers:E,defines:n,maxSimultaneousLights:this._maxSimultaneousLights}),(0,A.Ll)(f);const x={};this.customShaderNameResolve&&(d=this.customShaderNameResolve(d,f,_,E,n,u,x));const P=n.toString(),C=t.effect;let I=a.getEngine().createEffect(d,{attributes:u,uniformsNames:f,uniformBuffersNames:_,samplers:E,defines:P,fallbacks:r,onCompiled:this.onCompiled,onError:this.onError,indexParameters:c,processFinalCode:x.processFinalCode,processCodeAfterIncludes:this._eventInfo.customCode,multiTarget:n.PREPASS,shaderLanguage:this._shaderLanguage,extraInitializationsAsync:this._shadersLoaded?void 0:async()=>{1===this._shaderLanguage?await Promise.all([Promise.all([i.e(9331),i.e(9235)]).then(i.bind(i,59235)),Promise.all([i.e(2179),i.e(5271),i.e(5791)]).then(i.bind(i,45791))]):await Promise.all([Promise.all([i.e(3045),i.e(4268)]).then(i.bind(i,14268)),Promise.all([i.e(9031),i.e(6155),i.e(9334)]).then(i.bind(i,9334))]),this._shadersLoaded=!0}},o);if(this._eventInfo.customCode=void 0,I)if(this._onEffectCreatedObservable&&(g.effect=I,g.subMesh=t,this._onEffectCreatedObservable.notifyObservers(g)),this.allowShaderHotSwapping&&C&&!I.isReady()){if(I=C,n.markAsUnprocessed(),p=this.isFrozen,s)return n._areLightsDisposed=!0,!1}else a.resetCachedMaterial(),t.setEffect(I,n,this._materialContext)}return!(!t.effect||!t.effect.isReady())&&(n._renderId=a.getRenderId(),r._wasPreviouslyReady=!p,r._wasPreviouslyUsingInstances=s,this._checkScenePerformancePriority(),!0)}buildUniformLayout(){const e=this._uniformBuffer;e.addUniform("diffuseLeftColor",4),e.addUniform("diffuseRightColor",4),e.addUniform("opacityParts",4),e.addUniform("reflectionLeftColor",4),e.addUniform("reflectionRightColor",4),e.addUniform("refractionLeftColor",4),e.addUniform("refractionRightColor",4),e.addUniform("emissiveLeftColor",4),e.addUniform("emissiveRightColor",4),e.addUniform("vDiffuseInfos",2),e.addUniform("vAmbientInfos",2),e.addUniform("vOpacityInfos",2),e.addUniform("vEmissiveInfos",2),e.addUniform("vLightmapInfos",2),e.addUniform("vSpecularInfos",2),e.addUniform("vBumpInfos",3),e.addUniform("diffuseMatrix",16),e.addUniform("ambientMatrix",16),e.addUniform("opacityMatrix",16),e.addUniform("emissiveMatrix",16),e.addUniform("lightmapMatrix",16),e.addUniform("specularMatrix",16),e.addUniform("bumpMatrix",16),e.addUniform("vTangentSpaceParams",2),e.addUniform("pointSize",1),e.addUniform("alphaCutOff",1),e.addUniform("refractionMatrix",16),e.addUniform("vRefractionInfos",4),e.addUniform("vRefractionPosition",3),e.addUniform("vRefractionSize",3),e.addUniform("vSpecularColor",4),e.addUniform("vEmissiveColor",3),e.addUniform("vDiffuseColor",4),e.addUniform("vAmbientColor",3),e.addUniform("cameraInfo",4),(0,R.G$)(e,!1,!0),super.buildUniformLayout()}bindForSubMesh(e,t,i){const s=this.getScene(),r=i.materialDefines;if(!r)return;const a=i.effect;if(!a)return;this._activeEffect=a,t.getMeshUniformBuffer().bindToEffect(a,"Mesh"),t.transferToEffect(e),this._uniformBuffer.bindToEffect(a,"Material"),this.prePassConfiguration.bindForSubMesh(this._activeEffect,s,t,e,this.isFrozen),S.m.Bind(s.getEngine().currentRenderPassId,this._activeEffect,t,e,this);const l=s.activeCamera;l?this._uniformBuffer.updateFloat4("cameraInfo",l.minZ,l.maxZ,0,0):this._uniformBuffer.updateFloat4("cameraInfo",0,0,0,0),this._eventInfo.subMesh=i,this._callbackPluginEventHardBindForSubMesh(this._eventInfo),r.OBJECTSPACE_NORMALMAP&&(e.toNormalMatrix(this._normalMatrix),this.bindOnlyNormalMatrix(this._normalMatrix));const h=this._mustRebind(s,a,i,t.visibility);(0,R.f$)(t,a);const u=this._uniformBuffer;if(h){if(this.bindViewProjection(a),!u.useUbo||!this.isFrozen||!u.isSync||i._drawWrapper._forceRebindOnNextCall){if(v.FresnelEnabled&&r.FRESNEL&&(this.diffuseFresnelParameters&&this.diffuseFresnelParameters.isEnabled&&(u.updateColor4("diffuseLeftColor",this.diffuseFresnelParameters.leftColor,this.diffuseFresnelParameters.power),u.updateColor4("diffuseRightColor",this.diffuseFresnelParameters.rightColor,this.diffuseFresnelParameters.bias)),this.opacityFresnelParameters&&this.opacityFresnelParameters.isEnabled&&u.updateColor4("opacityParts",new o.v9(this.opacityFresnelParameters.leftColor.toLuminance(),this.opacityFresnelParameters.rightColor.toLuminance(),this.opacityFresnelParameters.bias),this.opacityFresnelParameters.power),this.reflectionFresnelParameters&&this.reflectionFresnelParameters.isEnabled&&(u.updateColor4("reflectionLeftColor",this.reflectionFresnelParameters.leftColor,this.reflectionFresnelParameters.power),u.updateColor4("reflectionRightColor",this.reflectionFresnelParameters.rightColor,this.reflectionFresnelParameters.bias)),this.refractionFresnelParameters&&this.refractionFresnelParameters.isEnabled&&(u.updateColor4("refractionLeftColor",this.refractionFresnelParameters.leftColor,this.refractionFresnelParameters.power),u.updateColor4("refractionRightColor",this.refractionFresnelParameters.rightColor,this.refractionFresnelParameters.bias)),this.emissiveFresnelParameters&&this.emissiveFresnelParameters.isEnabled&&(u.updateColor4("emissiveLeftColor",this.emissiveFresnelParameters.leftColor,this.emissiveFresnelParameters.power),u.updateColor4("emissiveRightColor",this.emissiveFresnelParameters.rightColor,this.emissiveFresnelParameters.bias))),s.texturesEnabled&&(this._diffuseTexture&&v.DiffuseTextureEnabled&&(u.updateFloat2("vDiffuseInfos",this._diffuseTexture.coordinatesIndex,this._diffuseTexture.level),(0,R.mA)(this._diffuseTexture,u,"diffuse")),this._ambientTexture&&v.AmbientTextureEnabled&&(u.updateFloat2("vAmbientInfos",this._ambientTexture.coordinatesIndex,this._ambientTexture.level),(0,R.mA)(this._ambientTexture,u,"ambient")),this._opacityTexture&&v.OpacityTextureEnabled&&(u.updateFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),(0,R.mA)(this._opacityTexture,u,"opacity")),this._hasAlphaChannel()&&u.updateFloat("alphaCutOff",this.alphaCutOff),(0,R.X8)(s,r,u,o.v9.White(),this._reflectionTexture,!1,!1,!0,!1,!1,!1,this.roughness),this._reflectionTexture&&v.ReflectionTextureEnabled||u.updateFloat2("vReflectionInfos",0,this.roughness),this._emissiveTexture&&v.EmissiveTextureEnabled&&(u.updateFloat2("vEmissiveInfos",this._emissiveTexture.coordinatesIndex,this._emissiveTexture.level),(0,R.mA)(this._emissiveTexture,u,"emissive")),this._lightmapTexture&&v.LightmapTextureEnabled&&(u.updateFloat2("vLightmapInfos",this._lightmapTexture.coordinatesIndex,this._lightmapTexture.level),(0,R.mA)(this._lightmapTexture,u,"lightmap")),this._specularTexture&&v.SpecularTextureEnabled&&(u.updateFloat2("vSpecularInfos",this._specularTexture.coordinatesIndex,this._specularTexture.level),(0,R.mA)(this._specularTexture,u,"specular")),this._bumpTexture&&s.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&(u.updateFloat3("vBumpInfos",this._bumpTexture.coordinatesIndex,1/this._bumpTexture.level,this.parallaxScaleBias),(0,R.mA)(this._bumpTexture,u,"bump"),s._mirroredCameraPosition?u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?1:-1,this._invertNormalMapY?1:-1):u.updateFloat2("vTangentSpaceParams",this._invertNormalMapX?-1:1,this._invertNormalMapY?-1:1)),this._refractionTexture&&v.RefractionTextureEnabled)){let e=1;if(this._refractionTexture.isCube||(u.updateMatrix("refractionMatrix",this._refractionTexture.getReflectionTextureMatrix()),this._refractionTexture.depth&&(e=this._refractionTexture.depth)),u.updateFloat4("vRefractionInfos",this._refractionTexture.level,this.indexOfRefraction,e,this.invertRefractionY?-1:1),this._refractionTexture.boundingBoxSize){const e=this._refractionTexture;u.updateVector3("vRefractionPosition",e.boundingBoxPosition),u.updateVector3("vRefractionSize",e.boundingBoxSize)}}this.pointsCloud&&u.updateFloat("pointSize",this.pointSize),u.updateColor4("vSpecularColor",this.specularColor,this.specularPower),u.updateColor3("vEmissiveColor",v.EmissiveTextureEnabled?this.emissiveColor:o.v9.BlackReadOnly),u.updateColor4("vDiffuseColor",this.diffuseColor,this.alpha),s.ambientColor.multiplyToRef(this.ambientColor,this._globalAmbientColor),u.updateColor3("vAmbientColor",this._globalAmbientColor)}s.texturesEnabled&&(this._diffuseTexture&&v.DiffuseTextureEnabled&&a.setTexture("diffuseSampler",this._diffuseTexture),this._ambientTexture&&v.AmbientTextureEnabled&&a.setTexture("ambientSampler",this._ambientTexture),this._opacityTexture&&v.OpacityTextureEnabled&&a.setTexture("opacitySampler",this._opacityTexture),this._reflectionTexture&&v.ReflectionTextureEnabled&&(this._reflectionTexture.isCube?a.setTexture("reflectionCubeSampler",this._reflectionTexture):a.setTexture("reflection2DSampler",this._reflectionTexture)),this._emissiveTexture&&v.EmissiveTextureEnabled&&a.setTexture("emissiveSampler",this._emissiveTexture),this._lightmapTexture&&v.LightmapTextureEnabled&&a.setTexture("lightmapSampler",this._lightmapTexture),this._specularTexture&&v.SpecularTextureEnabled&&a.setTexture("specularSampler",this._specularTexture),this._bumpTexture&&s.getEngine().getCaps().standardDerivatives&&v.BumpTextureEnabled&&a.setTexture("bumpSampler",this._bumpTexture),this._refractionTexture&&v.RefractionTextureEnabled&&(this._refractionTexture.isCube?a.setTexture("refractionCubeSampler",this._refractionTexture):a.setTexture("refraction2DSampler",this._refractionTexture))),this.getScene().useOrderIndependentTransparency&&this.needAlphaBlendingForMesh(t)&&this.getScene().depthPeelingRenderer.bind(a),this._eventInfo.subMesh=i,this._callbackPluginEventBindForSubMesh(this._eventInfo),(0,A.ij)(a,this,s),this.bindEyePosition(a)}else s.getEngine()._features.needToAlwaysBindUniformBuffers&&(this._needToBindSceneUbo=!0);!h&&this.isFrozen||(s.lightsEnabled&&!this._disableLighting&&(0,R.RL)(s,t,a,r,this._maxSimultaneousLights),(s.fogEnabled&&t.applyFog&&s.fogMode!==n.Z.FOGMODE_NONE||this._reflectionTexture||this._refractionTexture||t.receiveShadows||r.PREPASS||r.CLUSTLIGHT_BATCH)&&this.bindView(a),(0,R.Yy)(s,t,a),r.NUM_MORPH_INFLUENCERS&&(0,R.nR)(t,a),r.BAKED_VERTEX_ANIMATION_TEXTURE&&t.bakedVertexAnimationManager?.bind(a,r.INSTANCES),this.useLogarithmicDepth&&(0,R.DL)(r,a,s),this._imageProcessingConfiguration&&!this._imageProcessingConfiguration.applyByPostProcess&&this._imageProcessingConfiguration.bind(this._activeEffect)),this._afterBind(t,this._activeEffect,i),u.update()}getAnimatables(){const e=super.getAnimatables();return this._diffuseTexture&&this._diffuseTexture.animations&&this._diffuseTexture.animations.length>0&&e.push(this._diffuseTexture),this._ambientTexture&&this._ambientTexture.animations&&this._ambientTexture.animations.length>0&&e.push(this._ambientTexture),this._opacityTexture&&this._opacityTexture.animations&&this._opacityTexture.animations.length>0&&e.push(this._opacityTexture),this._reflectionTexture&&this._reflectionTexture.animations&&this._reflectionTexture.animations.length>0&&e.push(this._reflectionTexture),this._emissiveTexture&&this._emissiveTexture.animations&&this._emissiveTexture.animations.length>0&&e.push(this._emissiveTexture),this._specularTexture&&this._specularTexture.animations&&this._specularTexture.animations.length>0&&e.push(this._specularTexture),this._bumpTexture&&this._bumpTexture.animations&&this._bumpTexture.animations.length>0&&e.push(this._bumpTexture),this._lightmapTexture&&this._lightmapTexture.animations&&this._lightmapTexture.animations.length>0&&e.push(this._lightmapTexture),this._refractionTexture&&this._refractionTexture.animations&&this._refractionTexture.animations.length>0&&e.push(this._refractionTexture),e}getActiveTextures(){const e=super.getActiveTextures();return this._diffuseTexture&&e.push(this._diffuseTexture),this._ambientTexture&&e.push(this._ambientTexture),this._opacityTexture&&e.push(this._opacityTexture),this._reflectionTexture&&e.push(this._reflectionTexture),this._emissiveTexture&&e.push(this._emissiveTexture),this._specularTexture&&e.push(this._specularTexture),this._bumpTexture&&e.push(this._bumpTexture),this._lightmapTexture&&e.push(this._lightmapTexture),this._refractionTexture&&e.push(this._refractionTexture),e}hasTexture(e){return!!super.hasTexture(e)||(this._diffuseTexture===e||(this._ambientTexture===e||(this._opacityTexture===e||(this._reflectionTexture===e||(this._emissiveTexture===e||(this._specularTexture===e||(this._bumpTexture===e||(this._lightmapTexture===e||this._refractionTexture===e))))))))}dispose(e,t){t&&(this._diffuseTexture?.dispose(),this._ambientTexture?.dispose(),this._opacityTexture?.dispose(),this._reflectionTexture?.dispose(),this._emissiveTexture?.dispose(),this._specularTexture?.dispose(),this._bumpTexture?.dispose(),this._lightmapTexture?.dispose(),this._refractionTexture?.dispose()),this._imageProcessingConfiguration&&this._imageProcessingObserver&&this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver),super.dispose(e,t)}clone(e,t=!0,i=""){const s=x.p.Clone(()=>new v(e,this.getScene()),this,{cloneTexturesOnlyOnce:t});return s.name=e,s.id=e,this.stencil.copyTo(s.stencil),this._clonePlugins(s,i),s}static Parse(e,t,i){const s=x.p.Parse(()=>new v(e.name,t),e,t,i);return e.stencil&&s.stencil.parse(e.stencil,t,i),p.i._ParsePlugins(e,s,t,i),s}static get DiffuseTextureEnabled(){return _.h.DiffuseTextureEnabled}static set DiffuseTextureEnabled(e){_.h.DiffuseTextureEnabled=e}static get DetailTextureEnabled(){return _.h.DetailTextureEnabled}static set DetailTextureEnabled(e){_.h.DetailTextureEnabled=e}static get AmbientTextureEnabled(){return _.h.AmbientTextureEnabled}static set AmbientTextureEnabled(e){_.h.AmbientTextureEnabled=e}static get OpacityTextureEnabled(){return _.h.OpacityTextureEnabled}static set OpacityTextureEnabled(e){_.h.OpacityTextureEnabled=e}static get ReflectionTextureEnabled(){return _.h.ReflectionTextureEnabled}static set ReflectionTextureEnabled(e){_.h.ReflectionTextureEnabled=e}static get EmissiveTextureEnabled(){return _.h.EmissiveTextureEnabled}static set EmissiveTextureEnabled(e){_.h.EmissiveTextureEnabled=e}static get SpecularTextureEnabled(){return _.h.SpecularTextureEnabled}static set SpecularTextureEnabled(e){_.h.SpecularTextureEnabled=e}static get BumpTextureEnabled(){return _.h.BumpTextureEnabled}static set BumpTextureEnabled(e){_.h.BumpTextureEnabled=e}static get LightmapTextureEnabled(){return _.h.LightmapTextureEnabled}static set LightmapTextureEnabled(e){_.h.LightmapTextureEnabled=e}static get RefractionTextureEnabled(){return _.h.RefractionTextureEnabled}static set RefractionTextureEnabled(e){_.h.RefractionTextureEnabled=e}static get ColorGradingTextureEnabled(){return _.h.ColorGradingTextureEnabled}static set ColorGradingTextureEnabled(e){_.h.ColorGradingTextureEnabled=e}static get FresnelEnabled(){return _.h.FresnelEnabled}static set FresnelEnabled(e){_.h.FresnelEnabled=e}}v.ForceGLSL=!1,(0,s.Cg)([(0,r.uM)("diffuseTexture")],v.prototype,"_diffuseTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"diffuseTexture",void 0),(0,s.Cg)([(0,r.uM)("ambientTexture")],v.prototype,"_ambientTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"ambientTexture",void 0),(0,s.Cg)([(0,r.uM)("opacityTexture")],v.prototype,"_opacityTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"opacityTexture",void 0),(0,s.Cg)([(0,r.uM)("reflectionTexture")],v.prototype,"_reflectionTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"reflectionTexture",void 0),(0,s.Cg)([(0,r.uM)("emissiveTexture")],v.prototype,"_emissiveTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"emissiveTexture",void 0),(0,s.Cg)([(0,r.uM)("specularTexture")],v.prototype,"_specularTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"specularTexture",void 0),(0,s.Cg)([(0,r.uM)("bumpTexture")],v.prototype,"_bumpTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"bumpTexture",void 0),(0,s.Cg)([(0,r.uM)("lightmapTexture")],v.prototype,"_lightmapTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"lightmapTexture",void 0),(0,s.Cg)([(0,r.uM)("refractionTexture")],v.prototype,"_refractionTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"refractionTexture",void 0),(0,s.Cg)([(0,r.jT)("ambient")],v.prototype,"ambientColor",void 0),(0,s.Cg)([(0,r.jT)("diffuse")],v.prototype,"diffuseColor",void 0),(0,s.Cg)([(0,r.jT)("specular")],v.prototype,"specularColor",void 0),(0,s.Cg)([(0,r.jT)("emissive")],v.prototype,"emissiveColor",void 0),(0,s.Cg)([(0,r.lK)()],v.prototype,"specularPower",void 0),(0,s.Cg)([(0,r.lK)("useAlphaFromDiffuseTexture")],v.prototype,"_useAlphaFromDiffuseTexture",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesAndMiscDirty")],v.prototype,"useAlphaFromDiffuseTexture",void 0),(0,s.Cg)([(0,r.lK)("useEmissiveAsIllumination")],v.prototype,"_useEmissiveAsIllumination",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useEmissiveAsIllumination",void 0),(0,s.Cg)([(0,r.lK)("linkEmissiveWithDiffuse")],v.prototype,"_linkEmissiveWithDiffuse",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"linkEmissiveWithDiffuse",void 0),(0,s.Cg)([(0,r.lK)("useSpecularOverAlpha")],v.prototype,"_useSpecularOverAlpha",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useSpecularOverAlpha",void 0),(0,s.Cg)([(0,r.lK)("useReflectionOverAlpha")],v.prototype,"_useReflectionOverAlpha",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useReflectionOverAlpha",void 0),(0,s.Cg)([(0,r.lK)("disableLighting")],v.prototype,"_disableLighting",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsLightsDirty")],v.prototype,"disableLighting",void 0),(0,s.Cg)([(0,r.lK)("useObjectSpaceNormalMap")],v.prototype,"_useObjectSpaceNormalMap",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useObjectSpaceNormalMap",void 0),(0,s.Cg)([(0,r.lK)("useParallax")],v.prototype,"_useParallax",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallax",void 0),(0,s.Cg)([(0,r.lK)("useParallaxOcclusion")],v.prototype,"_useParallaxOcclusion",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useParallaxOcclusion",void 0),(0,s.Cg)([(0,r.lK)()],v.prototype,"parallaxScaleBias",void 0),(0,s.Cg)([(0,r.lK)("roughness")],v.prototype,"_roughness",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"roughness",void 0),(0,s.Cg)([(0,r.lK)()],v.prototype,"indexOfRefraction",void 0),(0,s.Cg)([(0,r.lK)()],v.prototype,"invertRefractionY",void 0),(0,s.Cg)([(0,r.lK)()],v.prototype,"alphaCutOff",void 0),(0,s.Cg)([(0,r.lK)("useLightmapAsShadowmap")],v.prototype,"_useLightmapAsShadowmap",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useLightmapAsShadowmap",void 0),(0,s.Cg)([(0,r.Y9)("diffuseFresnelParameters")],v.prototype,"_diffuseFresnelParameters",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"diffuseFresnelParameters",void 0),(0,s.Cg)([(0,r.Y9)("opacityFresnelParameters")],v.prototype,"_opacityFresnelParameters",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelAndMiscDirty")],v.prototype,"opacityFresnelParameters",void 0),(0,s.Cg)([(0,r.Y9)("reflectionFresnelParameters")],v.prototype,"_reflectionFresnelParameters",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"reflectionFresnelParameters",void 0),(0,s.Cg)([(0,r.Y9)("refractionFresnelParameters")],v.prototype,"_refractionFresnelParameters",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"refractionFresnelParameters",void 0),(0,s.Cg)([(0,r.Y9)("emissiveFresnelParameters")],v.prototype,"_emissiveFresnelParameters",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"emissiveFresnelParameters",void 0),(0,s.Cg)([(0,r.lK)("useReflectionFresnelFromSpecular")],v.prototype,"_useReflectionFresnelFromSpecular",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsFresnelDirty")],v.prototype,"useReflectionFresnelFromSpecular",void 0),(0,s.Cg)([(0,r.lK)("useGlossinessFromSpecularMapAlpha")],v.prototype,"_useGlossinessFromSpecularMapAlpha",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"useGlossinessFromSpecularMapAlpha",void 0),(0,s.Cg)([(0,r.lK)("maxSimultaneousLights")],v.prototype,"_maxSimultaneousLights",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsLightsDirty")],v.prototype,"maxSimultaneousLights",void 0),(0,s.Cg)([(0,r.lK)("invertNormalMapX")],v.prototype,"_invertNormalMapX",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapX",void 0),(0,s.Cg)([(0,r.lK)("invertNormalMapY")],v.prototype,"_invertNormalMapY",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"invertNormalMapY",void 0),(0,s.Cg)([(0,r.lK)("twoSidedLighting")],v.prototype,"_twoSidedLighting",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsTexturesDirty")],v.prototype,"twoSidedLighting",void 0),(0,s.Cg)([(0,r.lK)("applyDecalMapAfterDetailMap")],v.prototype,"_applyDecalMapAfterDetailMap",void 0),(0,s.Cg)([(0,r.$z)("_markAllSubMeshesAsMiscDirty")],v.prototype,"applyDecalMapAfterDetailMap",void 0),(0,E.Y5)("BABYLON.StandardMaterial",v),n.Z.DefaultMaterialFactory=e=>new v("default material",e)}}]);