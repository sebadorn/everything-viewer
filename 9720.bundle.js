"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[9720],{79720:(t,e,s)=>{s.r(e),s.d(e,{FlowGraphSwitchBlock:()=>o});var i=s(16972),a=s(4720),c=s(56552),u=s(4686);class o extends i.u{constructor(t){super(t),this.config=t,this.default=this._registerSignalOutput("default"),this._caseToOutputFlow=new Map,this.case=this.registerDataInput("case",a.Vv),(this.config.cases||[]).forEach((t=>{this._caseToOutputFlow.set(t,this._registerSignalOutput(`out_${t}`))}))}_execute(t,e){const s=this.case.getValue(t);let i;i=(0,u.kf)(s)?this._getOutputFlowForCase((0,u.$w)(s)):this._getOutputFlowForCase(s),i?i._activateSignal(t):this.default._activateSignal(t)}addCase(t){this.config.cases.includes(t)||(this.config.cases.push(t),this._caseToOutputFlow.set(t,this._registerSignalOutput(`out_${t}`)))}removeCase(t){if(!this.config.cases.includes(t))return;const e=this.config.cases.indexOf(t);this.config.cases.splice(e,1),this._caseToOutputFlow.delete(t)}_getOutputFlowForCase(t){return this._caseToOutputFlow.get(t)}getClassName(){return"FlowGraphSwitchBlock"}serialize(t){super.serialize(t),t.cases=this.config.cases}}(0,c.Y5)("FlowGraphSwitchBlock",o)}}]);