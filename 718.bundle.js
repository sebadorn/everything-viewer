"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[718],{20718:(e,i,s)=>{s.d(i,{KHR_materials_iridescence:()=>a});var r=s(23975),n=s(98556),c=s(37812);const t="KHR_materials_iridescence";class a{constructor(e){this.name=t,this.order=195,this._loader=e,this.enabled=this._loader.isExtensionUsed(t)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,i,s){return n.BT.LoadExtensionAsync(e,i,this.name,async(r,n)=>{const c=new Array;return c.push(this._loader.loadMaterialPropertiesAsync(e,i,s)),c.push(this._loadIridescencePropertiesAsync(r,n,s)),await Promise.all(c).then(()=>{})})}_loadIridescencePropertiesAsync(e,i,s){if(!(s instanceof r.Y))throw new Error(`${e}: Material type not supported`);const n=new Array;return s.iridescence.isEnabled=!0,s.iridescence.intensity=i.iridescenceFactor??0,s.iridescence.indexOfRefraction=i.iridescenceIor??i.iridescenceIOR??1.3,s.iridescence.minimumThickness=i.iridescenceThicknessMinimum??100,s.iridescence.maximumThickness=i.iridescenceThicknessMaximum??400,i.iridescenceTexture&&n.push(this._loader.loadTextureInfoAsync(`${e}/iridescenceTexture`,i.iridescenceTexture,e=>{e.name=`${s.name} (Iridescence)`,s.iridescence.texture=e})),i.iridescenceThicknessTexture&&n.push(this._loader.loadTextureInfoAsync(`${e}/iridescenceThicknessTexture`,i.iridescenceThicknessTexture,e=>{e.name=`${s.name} (Iridescence Thickness)`,s.iridescence.thicknessTexture=e})),Promise.all(n).then(()=>{})}}(0,c.Hg)(t),(0,c.Ye)(t,!0,e=>new a(e))}}]);