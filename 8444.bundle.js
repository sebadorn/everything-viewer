"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[8444],{8444:(e,i,n)=>{n.r(i),n.d(i,{iblVoxelGridVertexShader:()=>a});var o=n(69610);n(69707),n(18959),n(1218),n(27999),n(90738),n(48451),n(15060),n(3298),n(3361),n(65523);const r="iblVoxelGridVertexShader",t="attribute vec3 position;varying vec3 vNormalizedPosition;\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\n#include<morphTargetsVertexGlobalDeclaration>\n#include<morphTargetsVertexDeclaration>[0..maxSimultaneousMorphTargets]\nuniform mat4 invWorldScale;uniform mat4 viewMatrix;void main(void) {vec3 positionUpdated=position;\n#include<morphTargetsVertexGlobal>\n#include<morphTargetsVertex>[0..maxSimultaneousMorphTargets]\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(positionUpdated,1.0);gl_Position=viewMatrix*invWorldScale*worldPos;vNormalizedPosition.xyz=gl_Position.xyz*0.5+0.5;\n#ifdef IS_NDC_HALF_ZRANGE\ngl_Position.z=gl_Position.z*0.5+0.5;\n#endif\n}";o.l.ShadersStore[r]||(o.l.ShadersStore[r]=t);const a={name:r,shader:t}}}]);