"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[274],{50274:(e,n,r)=>{r.r(n),r.d(n,{hdrFilteringPixelShaderWGSL:()=>a});var i=r(69610);r(79702),r(75136),r(75052),r(58866);const t="hdrFilteringPixelShader",u="#include<helperFunctions>\n#include<importanceSampling>\n#include<pbrBRDFFunctions>\n#include<hdrFilteringFunctions>\nuniform alphaG: f32;var inputTextureSampler: sampler;var inputTexture: texture_cube<f32>;uniform vFilteringInfo: vec2f;uniform hdrScale: f32;varying direction: vec3f;@fragment\nfn main(input: FragmentInputs)->FragmentOutputs {var color: vec3f=radiance(uniforms.alphaG,inputTexture,inputTextureSampler,input.direction,uniforms.vFilteringInfo);fragmentOutputs.color= vec4f(color*uniforms.hdrScale,1.0);}";i.l.ShadersStoreWGSL[t]=u;const a={name:t,shader:u}}}]);