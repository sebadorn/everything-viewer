"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[2823],{76131:(t,e,s)=>{s.d(e,{CFBParser:()=>a});var r=s(62845);class a extends r.V{constructor(t){super(t),this._msg=null,this._objectURLs={}}destroy(){for(const t in this._objectURLs)URL.revokeObjectURL(this._objectURLs[t]);this._objectURLs={}}getImage(t){if(!t||!String(t.attachMimeTag).startsWith("image/"))return null;const e=new Image;return e.loading="lazy",e.onerror=t=>console.error("[CFBParser.getImage]",t),e.src=this.getObjectURL(t),e}getObjectURL(t){const e=t.dataId;if(this._objectURLs[e])return this._objectURLs[e];const s=this._msg.getAttachment(t);return this._objectURLs[e]=URL.createObjectURL(new Blob([s.content],{type:t.attachMimeTag}))}async parse(){const t=(await Promise.all([s.e(2047),s.e(9831)]).then(s.t.bind(s,2047,23))).default,e=await this.getArrayBuffer();return this._msg=new t(e),this._msg}}}}]);