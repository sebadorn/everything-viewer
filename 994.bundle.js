"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[994],{50994:(e,i,a)=>{a.r(i),a.d(i,{_DDSTextureLoader:()=>o});var t=a(77517),s=a(36464);class o{constructor(){this.supportCascades=!0}loadCubeData(e,i,a,o){const n=i.getEngine();let p,r=!1,D=1e3;if(Array.isArray(e))for(let a=0;a<e.length;a++){const t=e[a];p=s.DDSTools.GetDDSInfo(t),i.width=p.width,i.height=p.height,r=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&i.generateMipMaps,n._unpackFlipY(p.isCompressed),s.DDSTools.UploadDDSLevels(n,i,t,p,r,6,-1,a),p.isFourCC||1!==p.mipmapCount?D=p.mipmapCount-1:n.generateMipMapsForCubemap(i)}else{const o=e;p=s.DDSTools.GetDDSInfo(o),i.width=p.width,i.height=p.height,a&&(p.sphericalPolynomial=new t.Q),r=(p.isRGB||p.isLuminance||p.mipmapCount>1)&&i.generateMipMaps,n._unpackFlipY(p.isCompressed),s.DDSTools.UploadDDSLevels(n,i,o,p,r,6),p.isFourCC||1!==p.mipmapCount?D=p.mipmapCount-1:n.generateMipMapsForCubemap(i,!1)}n._setCubeMapTextureParams(i,r,D),i.isReady=!0,i.onLoadedObservable.notifyObservers(i),i.onLoadedObservable.clear(),o&&o({isDDS:!0,width:i.width,info:p,data:e,texture:i})}loadData(e,i,a){const t=s.DDSTools.GetDDSInfo(e),o=(t.isRGB||t.isLuminance||t.mipmapCount>1)&&i.generateMipMaps&&Math.max(t.width,t.height)>>t.mipmapCount-1==1;a(t.width,t.height,o,t.isFourCC,(()=>{s.DDSTools.UploadDDSLevels(i.getEngine(),i,e,t,o,1)}))}}}}]);