"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[2032],{12032:(e,t,s)=>{s.d(t,{KHR_materials_anisotropy:()=>i});var r=s(23975),o=s(98556),n=s(37812);const a="KHR_materials_anisotropy";class i{constructor(e){this.name=a,this.order=195,this._loader=e,this.enabled=this._loader.isExtensionUsed(a)}dispose(){this._loader=null}loadMaterialPropertiesAsync(e,t,s){return o.BT.LoadExtensionAsync(e,t,this.name,async(r,o)=>{const n=new Array;n.push(this._loader.loadMaterialPropertiesAsync(e,t,s)),n.push(this._loadIridescencePropertiesAsync(r,o,s)),await Promise.all(n)})}async _loadIridescencePropertiesAsync(e,t,s){if(!(s instanceof r.Y))throw new Error(`${e}: Material type not supported`);const o=new Array;s.anisotropy.isEnabled=!0,s.anisotropy.intensity=t.anisotropyStrength??0,s.anisotropy.angle=t.anisotropyRotation??0,t.anisotropyTexture&&(t.anisotropyTexture.nonColorData=!0,o.push(this._loader.loadTextureInfoAsync(`${e}/anisotropyTexture`,t.anisotropyTexture,e=>{e.name=`${s.name} (Anisotropy Intensity)`,s.anisotropy.texture=e}))),await Promise.all(o)}}(0,n.Hg)(a),(0,n.Ye)(a,!0,e=>new i(e))}}]);