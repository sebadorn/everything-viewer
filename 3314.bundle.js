"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[3314],{33314:(e,t,n)=>{n.r(t),n.d(t,{FlowGraphReceiveCustomEventBlock:()=>r});var s=n(22086),i=n(998),o=n(56552);class r extends s.i{constructor(e){super(e),this.config=e,this.initPriority=1;for(const e in this.config.eventData)this.registerDataOutput(e,this.config.eventData[e].type)}_preparePendingTasks(e){const t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId).add((t=>{Object.keys(t).forEach((n=>{this.getDataOutput(n)?.setValue(t[n],e)})),this._execute(e)}));e._setExecutionVariable(this,"_eventObserver",t)}_cancelPendingTasks(e){const t=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);if(t){const n=e._getExecutionVariable(this,"_eventObserver",null);t.remove(n)}else i.S0.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}_executeEvent(e,t){return!0}getClassName(){return"FlowGraphReceiveCustomEventBlock"}}(0,o.Y5)("FlowGraphReceiveCustomEventBlock",r)}}]);