"use strict";(self.webpackChunkeverything_viewer=self.webpackChunkeverything_viewer||[]).push([[4428],{52047:(t,n,i)=>{i.r(n),i.d(n,{FlowGraphPlayAnimationBlock:()=>s});var e=i(51e3),r=i(4720),o=i(56552),a=i(25879);class s extends e.M{constructor(t){super(t,["animationLoop","animationEnd","animationGroupLoop"]),this.config=t,this.speed=this.registerDataInput("speed",r.Es),this.loop=this.registerDataInput("loop",r.RI),this.from=this.registerDataInput("from",r.Es,0),this.to=this.registerDataInput("to",r.Es),this.currentFrame=this.registerDataOutput("currentFrame",r.Es),this.currentTime=this.registerDataOutput("currentTime",r.Es),this.currentAnimationGroup=this.registerDataOutput("currentAnimationGroup",r.Vv),this.animationGroup=this.registerDataInput("animationGroup",r.Vv,t?.animationGroup),this.animation=this.registerDataInput("animation",r.Vv),this.object=this.registerDataInput("object",r.Vv)}_preparePendingTasks(t){const n=this.animationGroup.getValue(t),i=this.animation.getValue(t);if(!n&&!i)return this._reportError(t,"No animation or animation group provided");{const e=this.currentAnimationGroup.getValue(t);e&&e!==n&&e.dispose();let r=n;if(i&&!r){const n=this.object.getValue(t);if(!n)return this._reportError(t,"No target object provided");const e=Array.isArray(i)?i:[i],o=e[0].name;r=new a.AnimationGroup("flowGraphAnimationGroup-"+o+"-"+n.name,t.configuration.scene);let s=!1;const u=t._getGlobalContextVariable("interpolationAnimations",[]);for(const t of e)r.addTargetedAnimation(t,n),-1!==u.indexOf(t.uniqueId)&&(s=!0);s&&this._checkInterpolationDuplications(t,e,n)}const o=this.speed.getValue(t)||1,s=this.from.getValue(t)??0,u=this.to.getValue(t)||r.to,p=!isFinite(u)||this.loop.getValue(t);this.currentAnimationGroup.setValue(r,t);const l=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);-1!==l.indexOf(r.uniqueId)&&r.stop();try{r.start(p,o,s,u),r.onAnimationGroupEndObservable.add(()=>this._onAnimationGroupEnd(t)),r.onAnimationEndObservable.add(()=>this._eventsSignalOutputs.animationEnd._activateSignal(t)),r.onAnimationLoopObservable.add(()=>this._eventsSignalOutputs.animationLoop._activateSignal(t)),r.onAnimationGroupLoopObservable.add(()=>this._eventsSignalOutputs.animationGroupLoop._activateSignal(t)),l.push(r.uniqueId),t._setGlobalContextVariable("currentlyRunningAnimationGroups",l)}catch(n){this._reportError(t,n)}}}_reportError(t,n){super._reportError(t,n),this.currentFrame.setValue(-1,t),this.currentTime.setValue(-1,t)}_executeOnTick(t){const n=this.currentAnimationGroup.getValue(t);n&&(this.currentFrame.setValue(n.getCurrentFrame(),t),this.currentTime.setValue(n.animatables[0]?.elapsedTime??0,t))}_execute(t){this._startPendingTasks(t)}_onAnimationGroupEnd(t){this._removeFromCurrentlyRunning(t,this.currentAnimationGroup.getValue(t)),this._resetAfterCanceled(t),this.done._activateSignal(t)}_checkInterpolationDuplications(t,n,i){const e=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]);for(const r of e){const e=t.assetsContext.animationGroups.find(t=>t.uniqueId===r);if(e)for(const r of e.targetedAnimations)for(const o of n)r.animation.targetProperty===o.targetProperty&&r.target===i&&this._stopAnimationGroup(t,e)}}_stopAnimationGroup(t,n){n.stop(!0),n.dispose(),this._removeFromCurrentlyRunning(t,n)}_removeFromCurrentlyRunning(t,n){const i=t._getGlobalContextVariable("currentlyRunningAnimationGroups",[]),e=i.indexOf(n.uniqueId);-1!==e&&(i.splice(e,1),t._setGlobalContextVariable("currentlyRunningAnimationGroups",i))}_cancelPendingTasks(t){const n=this.currentAnimationGroup.getValue(t);n&&this._stopAnimationGroup(t,n)}getClassName(){return"FlowGraphPlayAnimationBlock"}}(0,o.Y5)("FlowGraphPlayAnimationBlock",s)}}]);